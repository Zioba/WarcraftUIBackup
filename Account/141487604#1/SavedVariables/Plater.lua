
PlaterDB = {
	["profileKeys"] = {
		["–¶–∞—Ä–µ–≤–∞ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "MainProfile",
		["–ó—ë–±–∏–Ω–º–æ–Ω–∫ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–∏–Ω–ø—Ä–∏—Å—Ç - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–∏–Ω–∞—Ç–æ—Ä - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–∏–Ω–º–∞–≥ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–∏–Ω—Ñ–µ–π–ª - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–î–∞–π—Ç–µ–º–Ω–µ–∫–ª—é—á - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–£—Ç–∫–∞—Å–æ—Å—É–±—É–π - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ù–∞—É—Ä—á–º–æ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–∏–Ω–ø–∞–ª–∞–¥–∏–Ω - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–°–∞—à–∫–∏–Ω–∞–¥–∞—à–∫–∞ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–í–∞—Å–∏–ª–µ—Ü - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "MyNewProfile",
		["–î–µ–±—É—Å—Ç–µ—Ä—á–º–æ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–∞ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "MainProfile",
		["–ù–∏–∫—Å–∏–∞–º—á–º–æ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ó—ë–±–µ–¥–∞–º - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "MyNewProfile",
		["–ü–ø—Ä–æ–±–Ω–∏–∫ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
	},
	["profiles"] = {
		["–ó—ë–±–∞ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = {
			["captured_spells"] = {
				[21562] = {
					["source"] = "–ì–∏–¥—Ä–æ—Ç–∞—Ç–∞—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "–ì–∏–¥—Ä–æ—Ç–∞—Ç–∞—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281240] = {
					["source"] = "–ì–∏–¥—Ä–æ—Ç–∞—Ç–∞—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280398] = {
					["source"] = "–ì–∏–¥—Ä–æ—Ç–∞—Ç–∞—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256453] = {
					["source"] = "–ì–∏–¥—Ä–æ—Ç–∞—Ç–∞—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111759] = {
					["source"] = "–ì–∏–¥—Ä–æ—Ç–∞—Ç–∞—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
			},
			["hook_auto_imported"] = {
				["Targetting Alpha"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Reorder Nameplate"] = 3,
				["Jaina Encounter"] = 6,
				["Aura Reorder"] = 1,
				["Attacking Specific Unit"] = 1,
				["Extra Border"] = 2,
				["Combo Points"] = 3,
				["Hide Neutral Units"] = 1,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Blockade Encounter"] = 1,
			},
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 156,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["Time"] = 1537884697,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Name"] = "Unit - Important [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Icon"] = 135996,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 399,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["Time"] = 1539013601,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["Desc"] = "Add the buff name in the trigger box.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 388,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1538066775,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1540663131,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Icon"] = 2175503,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 232,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1538429739,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add the debuff name in the trigger box.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 567,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1538237586,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 376,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1539201768,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 106,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1538256464,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["Time"] = 1543253273,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["Icon"] = 135024,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1547991413,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1543680853,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["Icon"] = 133006,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["Time"] = 1539015649,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Name"] = "UnitPower [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Show the energy amount above the nameplate",
					["Icon"] = 136048,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 171,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1539201849,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 190,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1539187387,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Icon"] = 1029718,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Author"] = "Tecno-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["Time"] = 1543250950,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Fixate On You [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Icon"] = 841383,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
				}, -- [15]
			},
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Time"] = 1549937733,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["Name"] = "Stormwall Encounter [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["Name"] = "Jaina Encounter [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 101,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the transparency of nameplates that isn't your target. You might want to disable 'Use Range Check' in the General Settings tab when using this hook.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)\n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)    \n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --stup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.4 --40%\n    envTable.AlphaTarget = 1.0 --100%\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1542481682,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 132177,
					["Name"] = "No Target Alpha [Plater]",
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 88,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1548077443,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 574574,
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2446016,
					["Name"] = "M+ Bwonsamdi Reaping",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 135426,
					["Name"] = "Combo Points [Plater]",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 239,
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainer = unitFrame.BuffFrame.PlaterBuffList\n    local aurasShown = {}\n    local aurasDuplicated = {}\n    \n    for index, auraIcon in ipairs (auraContainer) do\n        if (auraIcon:IsShown()) then\n            \n            if (envTable.consolidadeRepeatedAuras) then\n                \n                if (aurasDuplicated [auraIcon.SpellName]) then\n                    \n                    --where the existing aura is stored\n                    local duplicatedIndex = aurasDuplicated [auraIcon.SpellName]\n                    \n                    --get the icon already in the table\n                    local icon = aurasShown [duplicatedIndex][1]\n                    \n                    --check if the remaining time of the icon already added in the table is slower than the current\n                    if (auraIcon.RemainingTime > icon.RemainingTime) then\n                        --replace the icon for the icon with bigger duration\n                        aurasShown [duplicatedIndex][1] = auraIcon\n                        aurasShown [duplicatedIndex][3] = aurasShown [duplicatedIndex][3] + 1\n                        icon:Hide()\n                        \n                    else\n                        auraIcon:Hide()\n                    end\n                    \n                else    \n                    aurasDuplicated [auraIcon.SpellName] = index\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority, 1})\n                end\n                \n            else\n                local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                tinsert (aurasShown, {auraIcon, priority})\n                \n            end           \n        end\n    end\n    \n    table.sort (aurasShown, DetailsFramework.SortOrder2)\n    \n    local padding = envTable.padding\n    local framersPerRow = envTable.maxAurasPerRow + 1\n    \n    --first icon is where the row starts\n    local firstIcon = aurasShown[1] and aurasShown[1][1]\n    \n    if (firstIcon) then\n        local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n        anchorPoint:SetSize (1, 1)\n        \n        firstIcon:ClearAllPoints()\n        firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n        \n        --check the consolidaded stacks, this is not the regular buff stacks\n        local firstIconStacks = aurasShown[1][3]\n        if (firstIconStacks and firstIconStacks > 1) then\n            firstIcon.StackText:SetText (firstIconStacks)\n            firstIcon.StackText:Show()\n        end\n        \n        --> left to right\n        if (envTable.GrowDirection == \"right\") then\n            --> iterate among all aura icons\n            for i = 2, #aurasShown do\n                local auraIcon = aurasShown [i][1]\n                auraIcon:ClearAllPoints()\n                \n                if (i == framersPerRow) then\n                    auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                    framersPerRow = framersPerRow + framersPerRow\n                    \n                else\n                    auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                end\n                \n                local stacks = aurasShown[i][3]\n                if (stacks and stacks > 1) then\n                    auraIcon.StackText:SetText (stacks)\n                    auraIcon.StackText:Show()\n                end\n            end        \n            \n        elseif (envTable.GrowDirection == \"left\") then\n            --> iterate among all aura icons\n            for i = 2, #aurasShown do\n                local auraIcon = aurasShown [i][1]\n                auraIcon:ClearAllPoints()\n                \n                if (i == framersPerRow) then\n                    auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                    framersPerRow = framersPerRow + framersPerRow\n                    \n                else\n                    auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                end\n                \n                local stacks = aurasShown[i][3]\n                if (stacks and stacks > 1) then\n                    auraIcon.StackText:SetText (stacks)\n                    auraIcon.StackText:Show()\n                end\n                \n            end                    \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 1\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --auras should grow to right or left?\n    envTable.GrowDirection = \"right\" --insert 'left' to grow to the left side\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["Time"] = 1548004596,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [15]
			},
			["aura_alpha"] = 0.849999964237213,
			["patch_version"] = 3,
			["minor_width_scale"] = 0.899999976158142,
			["plate_config"] = {
				["friendlyplayer"] = {
					["actorname_text_spacing"] = 9,
				},
				["friendlynpc"] = {
					["actorname_text_spacing"] = 9,
					["big_actortitle_text_size"] = 9,
				},
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Aura Border Color"] = 1,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Aura - Debuff Alert"] = 3,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Color Change"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
		},
		["MyNewProfile"] = {
			["tank"] = {
				["colors"] = {
					["aggro"] = {
						0, -- [1]
						0.686274509803922, -- [2]
						0.0196078431372549, -- [3]
						1, -- [4]
					},
					["nocombat"] = {
						0.301960784313726, -- [1]
						0.00392156862745098, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["anothertank"] = {
						1, -- [1]
						0, -- [2]
						0.905882352941177, -- [3]
						1, -- [4]
					},
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Buff Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Color Change"] = 1,
				["Aura - Blink Time Left"] = 1,
				["Aura Border Color"] = 1,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Unit - Important"] = 5,
				["Aura - Debuff Alert"] = 3,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Unit Power"] = 1,
				["Blink by Time Left"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 367,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1535473591,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 74,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Author"] = "Celian-Sylvanas",
					["ScriptType"] = 3,
					["Desc"] = "Show the energy amount above the nameplate",
					["Name"] = "UnitPower [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1528748982,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Icon"] = 136048,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 10);\nend\n\n\n",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 183,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
						260954, -- [3]
						257739, -- [4]
						257314, -- [5]
						266107, -- [6]
						257582, -- [7]
						262377, -- [8]
						257407, -- [9]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1537397927,
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 176,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Add the debuff name in the trigger box.",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1533663248,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 553,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1535417117,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 354,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend",
					["Time"] = 1534625053,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1540663131,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 87,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1534625053,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 359,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1535048199,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 135,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1535048441,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 149,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Name"] = "Unit - Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1535815768,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 841383,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 122,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \n    if (timeLeft < envTable.TimeLeftToBlink) then\n        Plater.SetNameplateColor (unitFrame, \"red\")\n    else\n        Plater.SetNameplateColor (unitFrame, \"white\")\n    end\n    \n    \n    \nend",
					["Time"] = 1542816185,
					["PlaterCore"] = 1,
					["Name"] = "Blink by Time Left [Plater]",
					["ScriptType"] = 1,
					["Icon"] = 2000853,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    --layout\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["PlaterCore"] = 1,
					["Name"] = "Color Change [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 135024,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Border Color [Plater]",
					["ScriptType"] = 1,
					["Icon"] = 133006,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["ScriptType"] = 1,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
				}, -- [16]
			},
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["first_run2"] = true,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 101,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the transparency of nameplates that isn't your target. You might want to disable 'Use Range Check' in the General Settings tab when using this hook.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)\n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)    \n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --stup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.4 --40%\n    envTable.AlphaTarget = 1.0 --100%\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1542481682,
					["PlaterCore"] = 1,
					["Name"] = "No Target Alpha [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 132177,
					["LastHookEdited"] = "",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 1990989,
					["LastHookEdited"] = "",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 95,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Set a different color when a unit is targetting a Black Ox Statue",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the unit target target\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    if (targetGUID) then\n        \n        --get the npcID of the target and check if the npcID is the Black Ox Status npcID\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        if (npcID == envTable.OxStatusNpcID) then\n            \n            --the unit is targetting the status, change the color of the nameplate\n            Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n        end\n    end\nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ncpID for the black ox statue\n    envTable.OxStatusNpcID = 61146\n    \n    --the color to use in the nameplate when the unit is targetting an ox statue\n    envTable.NameplateColor = \"olive\"\n    \nend\n\n\n",
					},
					["Time"] = 1541606185,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Monk Statue [Plater]",
					["LoadConditions"] = {
						["talent"] = {
							[19994] = true,
							["Enabled"] = true,
						},
						["group"] = {
						},
						["class"] = {
							["MONK"] = true,
							["Enabled"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[268] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
					},
					["Icon"] = 627607,
					["LastHookEdited"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 88,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1548077443,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 574574,
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["Icon"] = 135426,
					["LastHookEdited"] = "",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 1966587,
					["LastHookEdited"] = "",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["Name"] = "Stormwall Encounter [Plater]",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["LastHookEdited"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 239,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 1\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --auras should grow to right or left?\n    envTable.GrowDirection = \"right\" --insert 'left' to grow to the left side\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["Time"] = 1548004596,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Time"] = 1549937733,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2446016,
					["Name"] = "M+ Bwonsamdi Reaping",
				}, -- [16]
			},
			["last_news_time"] = 1543749097,
			["first_run3"] = true,
			["hook_auto_imported"] = {
				["Attacking Specific Unit"] = 1,
				["Reorder Nameplate"] = 3,
				["Dont Have Aura"] = 1,
				["Monk Statue"] = 2,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Aura Reorder"] = 1,
				["Blockade Encounter"] = 1,
				["Targetting Alpha"] = 3,
				["Players Targetting Amount"] = 4,
				["Hide Neutral Units"] = 1,
				["Combo Points"] = 3,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Jaina Encounter"] = 6,
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["npc_cache"] = {
				[138972] = {
					"–û–±–ª–∞—á–Ω—ã–π —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[135903] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[126451] = {
					"–ö–ª–µ—à–Ω–µ–¥—Ä–æ–±", -- [1]
					"SarasIsland", -- [2]
				},
				[146650] = {
					"–ß–∞—Å–æ–≤–∞—è-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[126963] = {
					"–ì–≤–∏–Ω–¥—Ä–∞ –ì—Ä–æ–º–æ–≤–æ–π –ú–æ–ª–æ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139486] = {
					"–ù–µ–±–æ–ª–æ–º", -- [1]
					"", -- [2]
				},
				[136160] = {
					"–ö–æ—Ä–æ–ª—å –î–∞–∑–∞—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[56717] = {
					"–ü—Ä—ã–≥–æ–ø–æ—Ç–∞–º", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[145372] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—É–Ω—ã", -- [1]
					"", -- [2]
				},
				[148443] = {
					"\"–ó–∞—â–∏—Ç–æ–±–æ—Ç\"", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138464] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132835] = {
					"–ó–º–µ—è-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[147932] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"", -- [2]
				},
				[131812] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[146653] = {
					"–ü—Ä–æ—Å–ª–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140768] = {
					"–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä", -- [1]
					"", -- [2]
				},
				[147933] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"", -- [2]
				},
				[138466] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140769] = {
					"–ó–æ–ª–æ—Ç–∞—è –ñ–∏–ª–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[138978] = {
					"–ì–∏–≥–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[127477] = {
					"–ú–æ—Ä—Å–∫–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138467] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[134629] = {
					"–ß–µ—à—É–π—á–∞—Ç—ã–π –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –∫—Ä–æ–ª—É—Å–∫–µ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[138979] = {
					"–í–æ–ª–Ω–æ–º—É—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[141282] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[147935] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"", -- [2]
				},
				[140259] = {
					"–ö—Ä—É–ø–Ω—ã–π —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[138468] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[416] = {
					"–ö–∞–ø—Ç–∞—É", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138980] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[417] = {
					"Pryynum", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[147936] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[140260] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[146657] = {
					"–ß–∞—Å–æ–≤–æ–π-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138981] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[141284] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –ø—Ä–∏–ª–∏–≤–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131817] = {
					"–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138470] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"", -- [2]
				},
				[145123] = {
					"–ú–∏–∞—Ä–∞ –ü–µ—Å–Ω—è –ù–æ—á–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[141285] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[123001] = {
					"–¢–µ–º–Ω–æ–≤–æ–¥", -- [1]
					"", -- [2]
				},
				[147938] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[131818] = {
					"–ú–µ—á–µ–Ω–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140262] = {
					"–ú–æ–ª–æ–¥–∞—è —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[148962] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138983] = {
					"–í–æ–ª–Ω–æ–ª–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[11661] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[131819] = {
					"–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140263] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[61389] = {
					"–í–µ–ª–∏–∫–∏–π —Å—Ç—Ä–∞–∂ –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[61453] = {
					"–ú—É'–®–∏–±–∞", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[59598] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140264] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[59726] = {
					"–û–ø–∞—Å–Ω–æ—Å—Ç—å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[19668] = {
					"–ò—Å—á–∞–¥–∏–µ –¢—å–º—ã", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[131821] = {
					"–ë–µ–∑–ª–∏–∫–∞—è –¥–µ–≤–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140777] = {
					"–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[138986] = {
					"–ë–æ—Ä–≥–ª –ò—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[126969] = {
					"–¢—Ä–æ—Ç–∞–∫", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140266] = {
					"–ö–æ–ª–æ—Ç—ã–π –†–æ–≥", -- [1]
					"", -- [2]
				},
				[134893] = {
					"–ü–∞—É–∫-–∂–µ–ª–µ–∑–Ω–æ–ø—É—Ç", -- [1]
					"", -- [2]
				},
				[131311] = {
					"–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[139755] = {
					"–ü–µ—Ä–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ú–∞–∫–Ω–µ–ª–ª–∏", -- [1]
					"", -- [2]
				},
				[131823] = {
					"–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134894] = {
					"–ñ–µ–ª–µ–∑–Ω–æ–ø—É—Ç-—Ç–∫–∞—á", -- [1]
					"", -- [2]
				},
				[135406] = {
					"–û–∂–∏–≤—à–µ–µ –∑–æ–ª–æ—Ç–æ", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139756] = {
					"–ë–∞–Ω–¥–∏—Ç–∫–∞ –®–µ–π–ª–∞", -- [1]
					"", -- [2]
				},
				[131824] = {
					"–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[129529] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138989] = {
					"–°–æ–ª–µ–Ω—ã–π –ü–ª–∞–≤–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[145898] = {
					"–ò–∑–±—Ä–∞–Ω–Ω–∞—è –ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[131825] = {
					"–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[133361] = {
					"–ò–∑–Ω—É—Ä–µ–Ω–Ω—ã–π —Å–ª—É–≥–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[29264] = {
					"–î—É—Ö —è—â–µ—Ä–∞", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[129786] = {
					"–û–∫–µ–∞–Ω—Å–∫–∞—è –º–∞–∫—Ä—É—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[145644] = {
					"–ë–≤–æ–Ω—Å–∞–º–¥–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[130298] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"", -- [2]
				},
				[138224] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –°–≤–µ—Ç–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134898] = {
					"–Ø–¥–æ–∫–ª—ã–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[147948] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[137969] = {
					"–ü–æ–≥—Ä–µ–±–∞–ª—å–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[127484] = {
					"–î–∂–µ—Å –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[148716] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134899] = {
					"–Ø–¥–æ–∫–ª—ã–∫-—Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[137458] = {
					"–ì–Ω–∏—é—â–∞—è —Å–ø–æ—Ä–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[130299] = {
					"–ö–∞–ø–ª—è", -- [1]
					"", -- [2]
				},
				[134388] = {
					"–ö–ª—É–±–æ–∫ –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134900] = {
					"–ü–∞—É–∫-—è–¥–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[131318] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[145903] = {
					"–†—ã—Ü–∞—Ä—å –ß–µ—Ä–Ω–æ–π –Ω–∞–∫–æ–≤–∞–ª—å–Ω–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[127485] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[134389] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[129788] = {
					"–ú—è—Å–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138995] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–µ–º—è–Ω –£–Ω–≥–∞–Ω", -- [1]
					"", -- [2]
				},
				[137204] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[137716] = {
					"–î–æ–Ω–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136181] = {
					"–í—É–ª–∫–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[134390] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134902] = {
					"–¢–µ–Ω–µ–ø–ª–µ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[124927] = {
					"–¶–∑—é–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[135926] = {
					"–î—ã–º–æ—Å–µ—Ä–¥", -- [1]
					"SarasIsland", -- [2]
				},
				[127486] = {
					"–û—Ñ–∏—Ü–µ—Ä –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[134903] = {
					"–ò—Å—Ç–æ—â–∞—é—â–∏–π —É–∂–∞—Å", -- [1]
					"", -- [2]
				},
				[142324] = {
					"–î–µ–ª—å—Ñ–∏–Ω-—Å–∏–Ω–µ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[134904] = {
					"–¢–µ–º–Ω–æ–ª–æ–≤", -- [1]
					"", -- [2]
				},
				[134137] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å —Ö—Ä–∞–º–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138999] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –û—Ä–¥–æ–ª", -- [1]
					"", -- [2]
				},
				[126848] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –Æ–¥–æ—Ä–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[133627] = {
					"–¢–∞–ª–ª–∏ –ë—ã—Å—Ç—Ä–æ—Ü–∞–ø", -- [1]
					"", -- [2]
				},
				[127488] = {
					"–ú–∞–≥ –æ–≥–Ω—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138489] = {
					"–¢–µ–Ω—å –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140792] = {
					"–°—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[139001] = {
					"–í–µ–¥–º–µ–¥—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[147957] = {
					"–ê–∑–µ—Ä–∏–∑–∞–ª–∏–¥–∞", -- [1]
					"", -- [2]
				},
				[135931] = {
					"–ö–∞–º–Ω–µ–≥–∞—Ä—å", -- [1]
					"", -- [2]
				},
				[146678] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–µ –¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139002] = {
					"–¢–æ—Ç–µ–º–∏—Å—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[145399] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥", -- [1]
					"", -- [2]
				},
				[135932] = {
					"–í—É–ª–∫–∞–Ω–∞—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140794] = {
					"–ö–æ–≥—Ç–µ—à—Ä–∞–º", -- [1]
					"", -- [2]
				},
				[139003] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[50839] = {
					"Chrominia", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[140795] = {
					"–ú—Ä–∞—á–Ω—ã–π –ö—Ä—É–∂–∞—á", -- [1]
					"", -- [2]
				},
				[139004] = {
					"–®–∞–º–∞–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[127106] = {
					"–û—Ñ–∏—Ü–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127490] = {
					"–†—ã—Ü–∞—Ä—å-–∫–∞–ø–∏—Ç–∞–Ω –í–∞–ª–∏—Ä–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[142587] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139005] = {
					"–°–ª–µ–¥–æ–ø—ã—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[135167] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131585] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[135935] = {
					"–í–ª–∞–¥—ã–∫–∞ –ú–∞–≥–º–∞—Ä—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134144] = {
					"–ñ–∏–≤–æ–π –ø–æ—Ç–æ–∫", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140797] = {
					"–¢—É—Ö–ª–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[139006] = {
					"–§—É—Ä–±–æ–ª–≥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[141565] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131586] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –±–∞–Ω–∫–µ—Ç–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140798] = {
					"–°–∫–∞–ª–æ–∫–∞—Ä", -- [1]
					"", -- [2]
				},
				[139007] = {
					"–î–∏–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[135169] = {
					"–¢–æ—Ç–µ–º –ø–æ–≥–ª–æ—â–µ–Ω–∏—è –¥—É—Ö–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[141566] = {
					"–ö–∏—à–∫–æ–¥–µ—Ä –∏–∑ –±–∞–Ω–¥—ã –†–µ–∑—á–∏–∫–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131587] = {
					"–ó–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[57109] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[138496] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–∞–∞—Ä", -- [1]
					"", -- [2]
				},
				[140799] = {
					"–í–µ—Ç—Ä–æ–ª–æ–≤", -- [1]
					"", -- [2]
				},
				[139008] = {
					"–î—Ä–µ–≤–Ω–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[137473] = {
					"–ö–∞–ø–∏—Ç–∞–Ω —Å—Ç—Ä–∞–∂–∏ –ê—Ç—É", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138497] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—à—É–µ–∫–ª—è—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[140800] = {
					"–û–±–ª–∞—á–Ω–æ–∫—Ä—ã–ª –ü–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[139009] = {
					"–î–∏–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[137474] = {
					"–ö–æ—Ä–æ–ª—å –¢–∏–º–∞–ª–¥–∂–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[130307] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ç–∞–π—Ñ—É–Ω", -- [1]
					"", -- [2]
				},
				[130435] = {
					"–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[142336] = {
					"–û—Å—å–º–∏–Ω–æ–∂–µ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[138498] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"", -- [2]
				},
				[134916] = {
					"–ü–æ–¥–≤–∞–ª—å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[138499] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"", -- [2]
				},
				[136964] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[147967] = {
					"–ú–æ—Ä–ø–µ—Ö 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[130436] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134150] = {
					"–†–µ–∑—á–∏–∫ —Ä—É–Ω –°–æ—Ä–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138500] = {
					"–°—É–º–µ—Ä–µ—á–Ω–∞—è —á–µ—à—É–π—á–∞—Ç–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"", -- [2]
				},
				[139012] = {
					"–î–∏–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[147968] = {
					"–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[137989] = {
					"–ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140292] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"", -- [2]
				},
				[138501] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[146945] = {
					"–ö–ª—É–±—è—â–µ–µ—Å—è –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139013] = {
					"–ë–µ—à–µ–Ω—ã–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"", -- [2]
				},
				[139269] = {
					"–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[133384] = {
					"–ú–µ—Ä–µ–∫—Ç–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[131849] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140293] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"", -- [2]
				},
				[138502] = {
					"–í–ª–∞–¥—ã–∫–∞ –∑–º–µ–µ–≤ –ù–∞—Ä–æ–≤–∏–∞–∫", -- [1]
					"", -- [2]
				},
				[147202] = {
					"–û–∂–∏–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"SarasIsland", -- [2]
				},
				[126983] = {
					"–ö—Ä–∞—Å–∞–≤—á–∏–∫ –•–∞—Ä–ª–∞–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127111] = {
					"–ë–æ–µ—Ü –Ω–∞ –≤–µ—Å–ª–∞—Ö –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[131850] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –º–∞—Å—Ç–µ—Ä –≤—ã–∂–∏–≤–∞–Ω–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138247] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[127879] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[140295] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[136713] = {
					"–†–∞–±–æ—Ç–Ω–∏–∫ —Å –Ω–∞–≥–æ—Ä—å—è –ê—Ä–∞—Ç–∏", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[143622] = {
					"–î–∏–∫–∏–π –±–µ—Å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[123146] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"SarasIsland", -- [2]
				},
				[139017] = {
					"–ë—É–π–Ω–æ–≥—Ä–∏–≤", -- [1]
					"", -- [2]
				},
				[149508] = {
					"–ù–∞—Ç–∞–Ω–æ—Å –≤ –ª–µ–¥—è–Ω–æ–π –≥–ª—ã–±–µ", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139529] = {
					"–ú—É–∫–ª–∞–π", -- [1]
					"", -- [2]
				},
				[140297] = {
					"–ù–æ–∫-–∞—Ä–∞–∫", -- [1]
					"", -- [2]
				},
				[132877] = {
					"–ò–ª–æ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[139530] = {
					"–ó–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω–æ–ª–æ–º", -- [1]
					"", -- [2]
				},
				[145927] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥ –≠–ª–ª–∞–Ω–∞", -- [1]
					"", -- [2]
				},
				[127497] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139019] = {
					"–ò–≥–ª–æ–≥—Ä–∏–≤", -- [1]
					"", -- [2]
				},
				[101398] = {
					"–ú–µ–Ω—Ç–∞–ª—å–Ω—ã–π –¥–µ–º–æ–Ω", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[137484] = {
					"–ö–æ—Ä–æ–ª—å –ê'–∞–∫—É–ª", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[145928] = {
					"–°–∫–∞–≤–∏—Å –ù–∞–π—Ç—Å—Ç–∞–ª–∫–µ—Ä", -- [1]
					"", -- [2]
				},
				[134158] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138508] = {
					"–í–æ—Ä—Ç–∞–∫—Å –ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[132879] = {
					"–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[137485] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π –∫—Ä–æ–≤—å—é —à–ø–∏–æ–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146185] = {
					"–û–≥–Ω–µ–∂–∞–ª-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[148488] = {
					"–ù–µ–∂–∏–≤–æ–π –∞–≤–≥—É—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[137486] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ü–∞—Ç–ª–∞–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146186] = {
					"–û–≥–Ω–µ–∂–∞–ª-–≤–æ–∏–Ω", -- [1]
					"", -- [2]
				},
				[138254] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[62358] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[137487] = {
					"–û—Ö–æ—Ç–Ω–∏—á–∏–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[56473] = {
					"–õ–µ—Ç—è—â–∏–π –°–Ω–µ–≥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[146187] = {
					"–û–≥–Ω–µ–∂–∞–ª-–ø–æ–∫–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[136208] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π –∞—Ä–±–∞–ª–µ—Ç—á–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134417] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[129802] = {
					"–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139023] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π –ö—Ä–æ–≤–æ–∑–µ–≤", -- [1]
					"", -- [2]
				},
				[126092] = {
					"–ì–ª–∞–¥–∏–∞—Ç–æ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[134418] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[61399] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[137233] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139536] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[78116] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[129547] = {
					"–ö–∞—Å—Ç–µ—Ç–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[59800] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[139025] = {
					"–õ—É–Ω–Ω–∞—è –ü–µ—Å–Ω—å", -- [1]
					"", -- [2]
				},
				[139537] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–∫—É–Ω—å—á—É–Ω", -- [1]
					"", -- [2]
				},
				[135699] = {
					"–¢—é—Ä–µ–º—â–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[128652] = {
					"–í–∏–∫'–ì–æ—Ç", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139026] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ó–∞—Ç–º–µ–Ω–∏—è", -- [1]
					"", -- [2]
				},
				[139538] = {
					"–°—Ç–µ–Ω–æ–ª–æ–º –•–∞'–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[129548] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127757] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[126094] = {
					"–í–æ–ª–Ω–æ–≥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[131863] = {
					"–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138516] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –º–∞—Å—Ç–µ—Ä —ç–≤–æ–ª—é—Ü–∏–∏", -- [1]
					"", -- [2]
				},
				[132887] = {
					"–î–µ—Ç–µ–Ω—ã—à —Å–º–µ—Ä—Ç–µ–∂–∞–ª–∞", -- [1]
					"", -- [2]
				},
				[139284] = {
					"–ß—É–º–Ω–æ–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[59545] = {
					"–ó–æ–ª–æ—Ç–æ–π –∂—É–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[131864] = {
					"–ì–æ—Ä–∞–∫ –¢—É–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136214] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Å –≤–µ—Ç—Ä–∞–º–∏ –•–µ–ª–¥–∏—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[136470] = {
					"–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[59801] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[134935] = {
					"–ú–∞—Ç—å –í–∏—à–∏—Å", -- [1]
					"", -- [2]
				},
				[137238] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏–∫ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[126095] = {
					"–í—É–ª–∏—Å—Å", -- [1]
					"", -- [2]
				},
				[133912] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[151056] = {
					"–í–∞—Ä–∞–Ω–∫'—É–ª –ú–æ–≥—É—á–∏–π", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[147218] = {
					"–î—É—Ö –∑–æ–ª–æ—Ç–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[135192] = {
					"–ü–æ—á–∏—Ç–∞–µ–º—ã–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[127119] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129550] = {
					"–¢–∏—Ö–æ–ª–∞–ø–∫–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56731] = {
					"–ü–µ—Ä—Ü–æ–≤–∫–∞", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[136984] = {
					"–†–µ–±–∞–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131099] = {
					"–ö–æ–≤–∞—Ä–Ω—ã–π –ø—É—Ç–∞–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[139799] = {
					"–£—á–µ–Ω–∏–∫ –ê–π—Ä–æ–Ω—Ö–∞–ª–ª–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135961] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[151058] = {
					"–ë—É—Ä–ª—è—â–∞—è –∫—Ä–æ–≤—å", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139800] = {
					"–£—á–µ–Ω–∏–∫ –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü—ã —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135962] = {
					"–°–∫–∞–ª—å–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[151059] = {
					"–í–µ—á–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[134939] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ª—é–¥–æ–µ–¥", -- [1]
					"SarasIsland", -- [2]
				},
				[133660] = {
					"\"–ë–æ–º-–±–æ—Ç 9000\"", -- [1]
					"", -- [2]
				},
				[135963] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[134940] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135964] = {
					"–ì—Ä–µ–º—è—â–∏–π –∑–µ–º–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"", -- [2]
				},
				[134173] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140826] = {
					"–î—É—Ö-—á–µ—Ä—Ç–æ–ø–æ–ª–æ—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134941] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[56924] = {
					"–†–∞—Å—Å–≤–∏—Ä–µ–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[134174] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140827] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134942] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É—á–æ–∫", -- [1]
					"", -- [2]
				},
				[139804] = {
					"–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[129553] = {
					"–î–∏–Ω–æ–º–∞–Ω—Ç –ö–∏—à'–æ", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[147225] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[137246] = {
					"–û—Å–∞–¥–Ω–∞—è –º–∞—à–∏–Ω–∞ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139805] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"", -- [2]
				},
				[136735] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139806] = {
					"–í–∑—Ä—ã–≤–æ—Ç–µ—Ö–Ω–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[56541] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[136224] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[133666] = {
					"–û—Ç–≤–ª–µ–∫–∞—Ç–æ—Ä –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∏", -- [1]
					"", -- [2]
				},
				[61339] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[127124] = {
					"–û—Ñ–∏—Ü–∏–∞–Ω—Ç–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139808] = {
					"–î—É–±–æ–ª–æ–º –∏–∑ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[123286] = {
					"–®—É–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"", -- [2]
				},
				[134691] = {
					"–ù–∞—ç–ª–µ–∫—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ä–≤–∏—à", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139809] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—é –∞–∫—Ç–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[135971] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫-–Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[45859] = {
					"Diamant", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[136483] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[151068] = {
					"–ì–æ–ª–æ–≤–æ–Ω–æ–≥–∏–π –∂—Ä–µ—Ü –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135204] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –∂—Ä–µ—Ü-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139810] = {
					"–ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–≤–µ–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[127381] = {
					"–ò–ª—å–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[140322] = {
					"–ö–∞–º–Ω–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"", -- [2]
				},
				[134437] = {
					"–†–æ–±–æ—Ç-–ª–µ–∫–∞—Ä—å", -- [1]
					"", -- [2]
				},
				[140834] = {
					"–°–º–µ—é—â–µ–µ—Å—è –ø–ª–∞–º—è", -- [1]
					"SarasIsland", -- [2]
				},
				[56862] = {
					"–ü—å—è–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[139811] = {
					"–ü–æ–º–æ—â–Ω–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞", -- [1]
					"", -- [2]
				},
				[140067] = {
					"–†—ã–∂–µ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"", -- [2]
				},
				[140835] = {
					"–•–∏—Ç—Ä—ã–π –æ–≥–æ–Ω–µ–∫", -- [1]
					"", -- [2]
				},
				[134950] = {
					"–£–∂–∞—Å–Ω—ã–π –ø–∞—É–∫", -- [1]
					"", -- [2]
				},
				[131112] = {
					"–ë–æ–µ—Ü –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139812] = {
					"–ü—Ä–æ–¥—é—Å–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[140068] = {
					"–†—ã–∂–µ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"", -- [2]
				},
				[140324] = {
					"–ö–∞–º–Ω–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[132904] = {
					"–¢—Ä–æ–ª–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"", -- [2]
				},
				[147745] = {
					"\"–ù–µ—É–∫—Ä–æ—Ç–∏–º—ã–π\"", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[130325] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —à—É—Å—Ç—Ä—ã–π –∫—Ä–∞–±", -- [1]
					"", -- [2]
				},
				[140069] = {
					"–í–æ–ª–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[140325] = {
					"–ö–∞–º–Ω–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"", -- [2]
				},
				[137511] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139814] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è–º –•–∞–∑–∑–ª", -- [1]
					"", -- [2]
				},
				[123289] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–º–µ—Ä—Ç–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[140838] = {
					"–ó–ª–æ–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫", -- [1]
					"", -- [2]
				},
				[56799] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[11665] = {
					"–õ–∞–≤–æ–≤—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[56927] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[122266] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[130582] = {
					"–û—Ç—á–∞—è–≤—à–∏–π—Å—è –Ω–µ–≥–æ–¥—è–π", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[150818] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π —Å–≥—É—Å—Ç–æ–∫ –∫—Ä–æ–≤–∏", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[140839] = {
					"–î—É—Ö –≤–æ–¥—ã", -- [1]
					"", -- [2]
				},
				[123290] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ç—Ä–µ—â–æ—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[129559] = {
					"–î—É—ç–ª—è–Ω—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[125977] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[140329] = {
					"–í–∏'–ª–∏–∫—Å –¢–µ—Ä–∑–∞—Ç–µ–ª—å –¢—Ä—É–ø–æ–≤", -- [1]
					"", -- [2]
				},
				[883] = {
					"–û–ª–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139818] = {
					"–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ö—Ä–∞–Ω—ã –î–∏—Ä–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[123291] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[144680] = {
					"–§—Ä–∏–¥–∞ –°—Ç–∞–ª–µ–º—É—Ñ–µ–ª—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[134701] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[132910] = {
					"–í–∏–∑–≥—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[147495] = {
					"–†–∞—Å—Ç–∞—Ä—Å–∫–∏–π –ª–∏–∫—Ç–æ—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[137516] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏–∫ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130584] = {
					"–ö—Ä–æ–≤–æ—à–∏–ø", -- [1]
					"", -- [2]
				},
				[140843] = {
					"–î—É—Ö –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"", -- [2]
				},
				[132911] = {
					"–¢—Ä–æ–≥–≥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[137517] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[141867] = {
					"–ú–∞—Ç—Ä–æ—Å", -- [1]
					"", -- [2]
				},
				[133935] = {
					"–û–∂–∏–≤—à–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140332] = {
					"–°–∫—Ä–µ–∂–µ–±—É—Ä", -- [1]
					"", -- [2]
				},
				[140077] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-—Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"", -- [2]
				},
				[140333] = {
					"–°—Ç–∞–ª—å–Ω–æ–π –ü–∞–Ω—Ü–∏—Ä—å", -- [1]
					"", -- [2]
				},
				[137007] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[60447] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–±–æ—Ç–∞–∂–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[135472] = {
					"–ó–∞–Ω–∞–∑–∞–ª –ú—É–¥—Ä—ã–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[123293] = {
					"–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π –ø–µ—Å—á–∞–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"", -- [2]
				},
				[140334] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"", -- [2]
				},
				[146731] = {
					"–¢–æ—Ç–µ–º –∑–æ–º–±–∏—Ä—É—é—â–µ–≥–æ –ø–æ—Ä–æ—à–∫–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[56865] = {
					"–í–æ–¥–Ω—ã–π —Ç–∞–Ω—Ü–æ—Ä", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[140335] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"", -- [2]
				},
				[140847] = {
					"–î—É—Ö –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[137521] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59552] = {
					"–•–æ–∑–µ–Ω-–ø–ª–∞–∫—Å–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140336] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"", -- [2]
				},
				[144942] = {
					"\"–†–∞–∑—Ä—è–∂–∞—Ç–æ—Ä\"", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[135475] = {
					"–ö—É–ª–∞ –ñ–∏–≤–æ–¥–µ—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140337] = {
					"–î–µ—Ç–µ–Ω—ã—à —Ç–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç–æ–≥–æ –∫—Ä—ã–ª–∞—Ç–æ–≥–æ –∑–º–µ—è", -- [1]
					"", -- [2]
				},
				[140849] = {
					"–í—Ä–µ–¥–Ω—ã–π –¥—É—Ö –∫–∞–º–Ω—è", -- [1]
					"", -- [2]
				},
				[133685] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[140338] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –≥–Ω–µ–∑–¥–∞ –î–∂–∏–Ω–∫–∞'–ª–æ", -- [1]
					"", -- [2]
				},
				[144944] = {
					"–ê–ª—á–Ω—ã–π –∫—Ä–æ–≤–æ—Å–æ—Å", -- [1]
					"SarasIsland", -- [2]
				},
				[132918] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[133430] = {
					"–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[135989] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[65310] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–∞—è —Ä–µ–ø–∞", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[132919] = {
					"–ì–∏–≥–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[59553] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ–≤—á–∏—Ö –ø—Ç–∏—Ü", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[133943] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[136246] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π —Å–≤—è—â–µ–Ω–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[144690] = {
					"–ú–µ—Å—Ç—Ä–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[132920] = {
					"–¢–µ–º–Ω—ã–π –∑–º–µ–π", -- [1]
					"", -- [2]
				},
				[133432] = {
					"–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130333] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140085] = {
					"–ë–æ–ª—å—à–æ–π –µ–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[135736] = {
					"–†–≤–∞—á", -- [1]
					"", -- [2]
				},
				[140086] = {
					"–ï–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[144948] = {
					"–ö–æ–∂–µ–∫—Ä—ã–ª—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[132922] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –º—É—Ä–ª–æ–∫", -- [1]
					"", -- [2]
				},
				[56867] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –ø–ª—É—Ç", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[130334] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∑–æ—Ä–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[140087] = {
					"–ú–æ–ª–æ–¥–∞—è –µ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[140343] = {
					"–û—Å—Ç—Ä–æ–µ –ö—Ä—ã–ª—ã—à–∫–æ", -- [1]
					"", -- [2]
				},
				[144693] = {
					"–ú–∞–Ω—Å—Ä–æ–π –ü–ª–∞–º–µ–Ω–Ω—ã–π –ö—É–ª–∞–∫", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[144949] = {
					"–¢–µ–Ω–µ–ª—é–±–∏–≤—ã–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[132923] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[59426] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[146485] = {
					"–ù–µ–≤–∞—Ä–∞ –ù–æ—á–Ω–∞—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[149556] = {
					"–í–µ—á–Ω—ã–π –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[133436] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130335] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –∫—Ä–∏—Å—Ç–∞–ª–∏—Å–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140345] = {
					"–ö—Ä–∏–∫ –ë—É—Ä–∏", -- [1]
					"", -- [2]
				},
				[140857] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –≤—Å–ø–æ–ª–æ—Ö", -- [1]
					"", -- [2]
				},
				[145975] = {
					"–ú–æ–ª–æ–¥–æ–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[140858] = {
					"–û–≥–Ω–µ–≤–∏—á–æ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[145976] = {
					"–¢–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[138556] = {
					"–ù–µ—á–∏—Å—Ç—ã–π —Å–ª–∏–∑–Ω—é–∫", -- [1]
					"", -- [2]
				},
				[145977] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∏–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[140092] = {
					"–û—Å—Ç—Ä–æ–≤–Ω–æ–π –°—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[138557] = {
					"–ñ–∏–≤–∞—è —Å–∫–≤–µ—Ä–Ω–∞", -- [1]
					"", -- [2]
				},
				[144954] = {
					"–ö—Ä–æ–≤–æ—è–¥", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135231] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138558] = {
					"–ë–µ–∑–ª–∏–∫–∏–π", -- [1]
					"", -- [2]
				},
				[144955] = {
					"–ó–∞–ª'–∑–∏ –ö—Ä–æ–≤–æ–≥–ª–æ—Ç", -- [1]
					"", -- [2]
				},
				[145211] = {
					"–î—Ä–∞–∫–æ–Ω—á–∏–∫ –∏–∑ —Å—Ç–∞–∏ –ì—Ä–æ–º–æ–≤–æ–π –ß–µ—à—É–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140094] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[146491] = {
					"–î—É—Ö –≤–æ–∑–¥–∞—è–Ω–∏—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138559] = {
					"–ü–æ–∑–∞–±—ã—Ç—ã–π", -- [1]
					"", -- [2]
				},
				[129826] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∫–ª–µ—à–Ω–µ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[130338] = {
					"–ö—Ä–æ–∫–æ–¥–∏–¥–ª–∞", -- [1]
					"", -- [2]
				},
				[140095] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[146492] = {
					"–î—É—Ö —è—Ä–æ—Å—Ç–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138560] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —É–∂–∞—Å", -- [1]
					"", -- [2]
				},
				[144957] = {
					"–®–∞–ª–∏'–∏", -- [1]
					"", -- [2]
				},
				[135234] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –º–∞—Å—Ç–∏—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140096] = {
					"–í–µ–ø—Ä—å-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[59684] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[129699] = {
					"–õ—é–¥–≤–∏–≥ —Ñ–æ–Ω –¢–æ—Ä—Ç–æ–ª–ª–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129827] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∫—Ä–æ—à–∏—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135235] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140353] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"", -- [2]
				},
				[140609] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –º–∞–∫–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[138818] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –≤–æ–π–Ω—ã –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140354] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"", -- [2]
				},
				[138563] = {
					"–í—É–¥–∞–∫—Å", -- [1]
					"", -- [2]
				},
				[129828] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —â–µ–ª–∫—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[136005] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140355] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"", -- [2]
				},
				[138564] = {
					"–ö—à—É—É–Ω", -- [1]
					"", -- [2]
				},
				[138820] = {
					"–í—Ä–∞–π–∫—É–ª –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[137029] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136006] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134215] = {
					"–õ–æ—Ä–∏–Ω–∞—Å, –ë–µ–≥—É—â–∏–π –≤ —Å—É–º—Ä–∞–∫–µ", -- [1]
					"", -- [2]
				},
				[138565] = {
					"–ú–∞'–ª—É—Ç", -- [1]
					"", -- [2]
				},
				[138821] = {
					"–í–æ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135239] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[134216] = {
					"–¢–µ–º–Ω–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ó–∞—Ä—Ä–∞", -- [1]
					"", -- [2]
				},
				[138566] = {
					"–ù–∏–ª'—Å–æ–∑–∑", -- [1]
					"", -- [2]
				},
				[138822] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏—Ü–∞ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[135240] = {
					"–°—É–±—Å—Ç–∞–Ω—Ü–∏—è –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[135496] = {
					"–ö–∞–º–∏ –®–µ—Å—Ç–µ—Ä–∏–∫—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[136264] = {
					"–ù–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–∞—è –º—É–º–∏—è", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138567] = {
					"–®–∞—Ç—Ç–æ—Ç –ö–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138823] = {
					"–°–ª–µ–¥–æ–ø—ã—Ç –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[135241] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[128551] = {
					"–ú–∞—Å—Ç–∏—Ñ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138568] = {
					"–®–∞–∫'—à—É–≥—É–Ω –ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[59494] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[133963] = {
					"–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140360] = {
					"–Ø—Ä–∫–∞—è –°–ø–∏–Ω–∫–∞", -- [1]
					"", -- [2]
				},
				[138569] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –í–æ—Ä'–∑—É–∫—Å", -- [1]
					"", -- [2]
				},
				[138825] = {
					"–ò–Ω–≥–∞—Ç–æ—Ä–∞ –ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[119724] = {
					"–ü—Ä–∏–ª–∏–≤–Ω—ã–π –≤–æ–ª–Ω–æ–ø–ª–µ—Å–∫", -- [1]
					"", -- [2]
				},
				[130087] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[136011] = {
					"–ö–∞–º–Ω–µ–∫—Ä–æ–≤", -- [1]
					"", -- [2]
				},
				[138570] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –†–∞–∑–∑–∞–∫–∏", -- [1]
					"", -- [2]
				},
				[138826] = {
					"–õ–µ–π–∫–Ω–∏—Ä –°–º–µ–ª—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[145223] = {
					"–ú–æ–ª–æ–¥–æ–π –¥—Ä–∞–∫–æ–Ω –∏–∑ —Å—Ç–∞–∏ –ì—Ä–æ–º–æ–≤–æ–π –ß–µ—à—É–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136012] = {
					"–ì–æ—Ä—É—Å –ù–µ—Å–¥–≤–∏–≥–∞–µ–º—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[140362] = {
					"–ú–µ—Ä—Ü–∞—é—â–µ–µ –ö—Ä—ã–ª—ã—à–∫–æ", -- [1]
					"", -- [2]
				},
				[138571] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –°–≤–µ—Ç–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[129832] = {
					"–•—Ä—É—Å—Ç—è–∫", -- [1]
					"", -- [2]
				},
				[145224] = {
					"–î—Ä–∞–∫–æ–Ω –∏–∑ —Å—Ç–∞–∏ –ì—Ä–æ–º–æ–≤–æ–π –ß–µ—à—É–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135245] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131407] = {
					"–ì—Ä–æ–º–∏–ª–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[140107] = {
					"–†–∞–∑—è—â–∏–π —Å–º–µ—Ä—Ç–µ–∂–∞–ª", -- [1]
					"", -- [2]
				},
				[12259] = {
					"–ì–µ–µ–Ω–Ω–∞—Å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[138828] = {
					"–ë–µ—Ä—Ö–∏–ª—å–¥–∞ –õ—é—Ç–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134990] = {
					"–ó–∞—Ä—è–∂–µ–Ω–Ω–∞—è –ø–µ—Å—á–∞–Ω–∞—è –¥—å—è–≤–æ–ª–∏—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[135246] = {
					"–õ–æ—Ç—Ç–∏ –ö–æ–ª—é—á–∫–∞", -- [1]
					"", -- [2]
				},
				[131408] = {
					"–î—É–±–æ–ª–æ–º –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[138061] = {
					"–î–æ–∫–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140620] = {
					"–•–∞—Ä–∏–±–¥–∏–¥–∞ –Æ–∂–Ω–æ–≥–æ –º–æ—Ä—è", -- [1]
					"", -- [2]
				},
				[144970] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–ª—É—á–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134991] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[135247] = {
					"–í–∞—Ä–∏–≥–≥", -- [1]
					"", -- [2]
				},
				[135759] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[144971] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139342] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[135760] = {
					"–ú–æ—Ä–ø–µ—Ö 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138063] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138831] = {
					"–•–æ—Ä–≤—É–ª—å–¥ –ë–∏—á –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134993] = {
					"–ú—á–∏–º–±–∞ –ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139343] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[131411] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[131667] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138064] = {
					"–ü–∞—Ñ–æ—Å–Ω–∞—è –∫—É—Ä–æ—Ä—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[65317] = {
					"–°—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[138576] = {
					"–ë–µ–∑–ª–∏–∫–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[144973] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134994] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146253] = {
					"–ë—Ä–∞—Ç –î–∂–æ–∑–µ—Ñ", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138577] = {
					"–°–æ–∫—Ä—É—à–∞—é—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[134739] = {
					"–ì–æ–ª–µ–º-—á–∏—Å—Ç–∏–ª—å—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139345] = {
					"–ö—É–ª—É –®–µ–ø–æ—Ç –°–º–µ—Ä—Ç–∏", -- [1]
					"", -- [2]
				},
				[135763] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"", -- [2]
				},
				[140113] = {
					"–Ø–¥–æ–∂–∞–ª", -- [1]
					"", -- [2]
				},
				[146766] = {
					"–ë–æ–ª—å—à–æ–π –∑–º–µ–∏–Ω—ã–π —Ç–æ—Ç–µ–º", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139346] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –¥—É—Ö–∞–º–∏ –ì–∞–ª–∞–Ω–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[133461] = {
					"–ñ—Ä–µ—Ü –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[131670] = {
					"–ü—Ä—è–¥–∏–ª—å—â–∏—Ü–∞ –ª–æ–∑ –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138579] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–æ–µ –∫–æ–≥—Ç–µ—â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[145232] = {
					"–°–∫–∞–ª–ª–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139347] = {
					"–ì–æ–ª–∞ –ë–µ—Ä—Å–µ—Ä–∫", -- [1]
					"", -- [2]
				},
				[135765] = {
					"–¢–æ—Ç–µ–º –ø–æ—Ç–æ–∫–æ–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138068] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138836] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"", -- [2]
				},
				[139348] = {
					"–ë–∞–≥–∞ –õ–µ–¥—è–Ω–æ–π –©–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[133463] = {
					"–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146769] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138837] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –≤–∞—è—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[134232] = {
					"–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146770] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138838] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–±–æ–≥–æ–º–æ–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[140630] = {
					"–ù–∞—Ä—è–¥–Ω—ã–π –∏–≥–ª–æ–±—Ä—é—Ö", -- [1]
					"", -- [2]
				},
				[138839] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü —Å–º–µ—Ä—Ç–∏", -- [1]
					"", -- [2]
				},
				[11668] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –æ–≥–Ω—è", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[140375] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Ä–æ–µ–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[140631] = {
					"–°–∫–∞—Ç –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[138840] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[149331] = {
					"–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[135258] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[135770] = {
					"–°—Ç–∞—Ä—à–∏–π —Å–µ—Ä–∂–∞–Ω—Ç –°–ª—ç–π–¥", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140376] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"", -- [2]
				},
				[140632] = {
					"–ß–µ—à—É–π—á–∞—Ç–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[138841] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü –≤–æ–π–Ω—ã", -- [1]
					"SarasIsland", -- [2]
				},
				[139097] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139353] = {
					"–ù–µ–∂–∏–≤–æ–π –≥–µ—Ä–æ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[131677] = {
					"–ü–ª–µ—Ç–µ–ª—å—â–∏—Ü–∞ —Ä—É–Ω –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140377] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138842] = {
					"–¢–∞'–∫–∏–ª –£—Å–∏–ª–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[139354] = {
					"–ë—É—Ç—É–Ω –ö–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"", -- [2]
				},
				[140378] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"", -- [2]
				},
				[138843] = {
					"–í–æ–∂–∞–∫ —Ä–æ—è –°–∫—Ä–∞–∫'–∏–∫", -- [1]
					"", -- [2]
				},
				[139355] = {
					"–ì—É—Ä–∞–Ω –ò–Ω–µ–∏—Å—Ç—ã–π –ö–ª–∏–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[59051] = {
					"–†–∞–∑–¥–æ—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[136541] = {
					"–ñ–µ–ª—á–Ω—ã–π —Å–ª–∏–∑–Ω—é—á–µ–Ω—ã—à", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136797] = {
					"–ì–æ–ª–æ–≤–æ–ª–æ–º –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[149335] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[149591] = {
					"–†–∞—Å—Ç–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138845] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –î–∂–æ'–≤–∞–∫", -- [1]
					"", -- [2]
				},
				[135007] = {
					"–°—Ç—Ä–∞–∂ —Å—Ñ–µ—Ä—ã", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139357] = {
					"–®–∞—Ä–∫—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[128434] = {
					"–ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[148569] = {
					"–°—Ç–∏—Ö–∏–π–Ω—ã–π –≤–æ–ª–Ω–æ–ª–æ–º", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138846] = {
					"–Ø–Ω—Ç–∞—Ä–Ω–æ–∫—Ä—ã–ª—ã–π –ª–æ–≤–µ—Ü —É–º–∞", -- [1]
					"", -- [2]
				},
				[138847] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∏–π –ë–æ–µ–º –ö–∞'–≤–∞–∑", -- [1]
					"", -- [2]
				},
				[56877] = {
					"–†–∞–π–≥–æ–Ω–Ω", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[17252] = {
					"AkraAshak", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[128435] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Å–∞—É—Ä–∏–¥", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[138848] = {
					"–¢–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏ –ó–æ—Ä–ª–∞–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[19459] = {
					"Ripp", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[139360] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[138849] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —É–ª—å—è –í–∏–∫—Å'–∏–∫", -- [1]
					"", -- [2]
				},
				[137058] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ú–∞–≥–æ–¥–∞", -- [1]
					"", -- [2]
				},
				[131685] = {
					"–†—É–Ω–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138338] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[136804] = {
					"–©–µ–±–Ω–µ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[131431] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", -- [1]
					"", -- [2]
				},
				[140643] = {
					"–õ—é—Ç—ã–π –π–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"", -- [2]
				},
				[144993] = {
					"–ë–µ—à–µ–Ω—ã–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—Ö–æ–≤—ã–π –º–µ–¥–≤–µ–¥—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136806] = {
					"–ö–∞–º–Ω–µ–º–∞–≥ –ë–∞—Ä–≥–≥", -- [1]
					"", -- [2]
				},
				[149344] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π —è—Ä–æ—Å—Ç—å—é –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[137830] = {
					"–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[130485] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136295] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[136807] = {
					"–†–∞–∑–≤–µ–¥—á–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[139110] = {
					"–ò—Å–∫—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[127799] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[133482] = {
					"–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136297] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[136809] = {
					"–ö–∞–º–Ω–µ–∫–ª—ã–∫ –ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å –ì–æ—Ä", -- [1]
					"", -- [2]
				},
				[131436] = {
					"–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134251] = {
					"–°–µ–Ω–µ—à–∞–ª—å –ú'–±–∞—Ä–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[136810] = {
					"–ó–µ–º–ª–µ–≥–Ω–µ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[144231] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136811] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[137067] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[3527] = {
					"–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139626] = {
					"–£—Ç–æ–ø—à–∏–π –º–∞—Ç—Ä–æ—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[144232] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[148582] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[136812] = {
					"–ì–µ–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[137068] = {
					"–ö–∞–≤–∞–ª–µ—Ä–∏—Å—Ç–∫–∞ —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[151653] = {
					"–©—É–ø–∞–ª—å—Ü–µ –∏–∑ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[130488] = {
					"–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[145001] = {
					"–õ–∞–Ω–∞—Ä–∞ –õ—É–Ω–Ω—ã–π –°—É–º—Ä–∞–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138349] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[149352] = {
					"–Ø—Ä–∫–∏–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[136047] = {
					"–õ–µ–¥–æ—Å–µ—Ä–¥", -- [1]
					"", -- [2]
				},
				[144747] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –ü–∞'–∫—É", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[134768] = {
					"–ù–µ—É—Ç–æ–º–∏–º—ã–π –ø–µ—Å–æ—á–Ω—ã–π –±–µ–≥—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[119103] = {
					"–ß–µ—Ä–Ω—ã–π –≥–æ–ª–æ–≤–æ—Ä–µ–∑", -- [1]
					"", -- [2]
				},
				[149098] = {
					"–ú–∞–π–µ–≤ –ü–µ—Å–Ω—å –¢–µ–Ω–µ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[137328] = {
					"–≠–ª–∏—Ç–Ω—ã–π –±–æ–µ—Ü –æ–∑–∞—Ä–µ–Ω–Ω—ã—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[136049] = {
					"–°–∞—Ä–≥–∞—Å—Å–∏–π", -- [1]
					"", -- [2]
				},
				[134514] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[149355] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[137585] = {
					"–¢–æ—Ç–µ–º —Ö–≤–∞—Ç–∫–∏ –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[139807] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[131858] = {
					"–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[147439] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[129527] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134914] = {
					"–ü–æ–¥–≤–∞–ª—å–Ω—ã–π –ø–∞—É–∫", -- [1]
					"", -- [2]
				},
				[143215] = {
					"–ö–æ—Å–∞—Ç–∫–∞", -- [1]
					"", -- [2]
				},
				[56863] = {
					"–°–æ–Ω–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[131445] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –±–ª–æ–∫–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[146493] = {
					"–î—É—Ö –±–æ–π–Ω–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[144876] = {
					"\"–ú–∞–∫–∞–∫–æ–º—É—á–∏—Ç–µ–ª—å-3000\"", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[60208] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[140657] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –π–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"", -- [2]
				},
				[61213] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[126845] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∂–æ–ª–ª–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[147440] = {
					"–ü—ã–ª–∞—é—â–∏–π –æ–≥–Ω–µ—Å—Ç—Ä–∞–∂", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[55659] = {
					"–î–∏–∫–∏–π –±–µ—Å", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[135002] = {
					"–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏—Ä–∞–Ω", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[134005] = {
					"–°–ª–∞–Ω—Ü–µ–µ–¥", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[56876] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–ø–µ—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[140658] = {
					"–ñ–µ—Å—Ç–∫–∞—è –®–∫—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[56754] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[149358] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[119052] = {
					"–ë–æ–µ–≤–æ–µ –∑–Ω–∞–º—è", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[140358] = {
					"–ó–æ–≤ –°–∫–æ—Ä–±–∏", -- [1]
					"", -- [2]
				},
				[141938] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59605] = {
					"–û—Ç—É–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[130620] = {
					"–õ–µ–¥–æ–±–æ–µ—Ü –°–µ—Ä–∞—Ñ", -- [1]
					"", -- [2]
				},
				[148262] = {
					"–ü—Ä–∏–ª–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[59794] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª—å —á–∞—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[149359] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"", -- [2]
				},
				[144941] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –ê–∫—É–Ω–¥—ã", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146753] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –º–æ—Ä–ø–µ—Ö", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[141939] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129469] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"", -- [2]
				},
				[59547] = {
					"–¶–∑—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[144754] = {
					"–§–∞'—Ç—É—É–ª –£—Å—Ç—Ä–∞—à–∞—é—â–∏–π", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135975] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[149360] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤–∞—è –≥–ª—ã–±–∞", -- [1]
					"", -- [2]
				},
				[66652] = {
					"–ú–∞–ª–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[147825] = {
					"–ú–µ–¥–∏–∫ 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146251] = {
					"–°–µ—Å—Ç—Ä–∞ –ö—ç—Ç—Ä–∏–Ω", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[65362] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[130621] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –ë—Ä–∞–π—Å–æ–Ω", -- [1]
					"", -- [2]
				},
				[140661] = {
					"–î–æ–ª–∏–Ω–Ω—ã–π –ì—Ä–æ–º", -- [1]
					"", -- [2]
				},
				[56732] = {
					"–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[59544] = {
					"–ö–∏–≤–∞—é—â–∏–π —Ç–∏–≥—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[146756] = {
					"–£—Å–∏–ª–µ–Ω–Ω–∞—è –±—É—Ä—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[137591] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[149569] = {
					"–ê—Ç–∞–ª'–¥–∞–∑–∞—Ä—Å–∫–∞—è –ø–æ—á–∏—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[129470] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[129598] = {
					"–í—å—é—á–Ω—ã–π –º—É–ª –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140662] = {
					"–°—Ç–∞—Ä—ã–π –¥–ª–∏–Ω–Ω–æ–º–µ—Ö", -- [1]
					"", -- [2]
				},
				[138968] = {
					"–°—Ç–∞–ª—å–Ω–æ–π –∑–µ–≤ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[62360] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[132855] = {
					"–ñ–µ–ª–µ–∑–Ω–æ–ø—É—Ç-–±—ã—Å—Ç—Ä–æ–ª–∞–ø", -- [1]
					"", -- [2]
				},
				[147827] = {
					"–ú–æ—Ä–ø–µ—Ö 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146940] = {
					"–ü—Ä–µ–¥–º–∏—Ä–Ω—ã–π –∏—Å–∫–∞–∑–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[144245] = {
					"–ú–∞–Ω—Ç–∞ –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"", -- [2]
				},
				[130622] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –û—Ä–∞–Ω", -- [1]
					"", -- [2]
				},
				[56658] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[61387] = {
					"–¶–∏–π–ª–∏–Ω—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[69792] = {
					"–ö–∞–∑—É–∏—Ä", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139384] = {
					"–ë–æ–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[147828] = {
					"–ö–∞–≤–∞–ª–µ—Ä–∏—Å—Ç–∫–∞ 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138562] = {
					"–õ–∏—á–∏–Ω–∫–∞ –∏–∑ –ë–µ–∑–¥–Ω—ã", -- [1]
					"", -- [2]
				},
				[140152] = {
					"–ì–Ω–∏–ª–æ–∫–æ–≥–æ—Ç—å-—Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[129599] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –Ω–æ–∂–µ–π –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138993] = {
					"–ì—É—Ä–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[59804] = {
					"–•–≤–∞—Ç–∫–∞—è –Ω–µ–Ω–∞–≤–∏—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[7448] = {
					"–•–∏–º–µ—Ä–∞", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[59808] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[61340] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[133663] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134012] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[59751] = {
					"–°—Ç—Ä–∞–∂ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[144759] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –î–∞–≥–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[69791] = {
					"–ö–∞–∑—É–∏—Ä", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138997] = {
					"–ë–µ–∑—É–º–Ω—ã–π –ì—Ä–æ–ª–∞—à", -- [1]
					"", -- [2]
				},
				[137713] = {
					"–ö—Ä–∞–±-–º–∞–≥–Ω–∞—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139813] = {
					"–°—Ç–∞—Ä—à–∏–π –ø—Ä–æ–¥—é—Å–µ—Ä –ì–∏–∫—Å–∏", -- [1]
					"", -- [2]
				},
				[123287] = {
					"–°–æ—Ä–≤–∏–≥–æ–ª–æ–≤–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"", -- [2]
				},
				[134769] = {
					"–ó–∞–∑—É–±—Ä–µ–Ω–Ω–∞—è –∫–ª–µ—à–Ω—è", -- [1]
					"", -- [2]
				},
				[129600] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136828] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[58803] = {
					"–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[56884] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[139387] = {
					"–ù–∞—Å—Å–∞ –•–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[140357] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[139351] = {
					"–ì–ª–∞—à–∞—Ç–∞–π —Ç–µ–Ω–µ–π –ê–Ω–≥–æ–ª–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[122264] = {
					"–°—Ç–∞—Ä–∞—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[146552] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[56678] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –ü–æ—Å–æ—Ö", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[136829] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç–æ–ø–æ—Ä–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[145273] = {
					"–î–µ—Å–Ω–∏—Ü–∞ –ò–Ω'–∑–∞—à–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[129517] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —è—â–µ—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[132126] = {
					"–ü–æ–∑–æ–ª–æ—á–µ–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[127479] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ—Å–∫–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[146553] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å–∏–ª–∞—á", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[129601] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56472] = {
					"–ë–ª–∞–≥–æ—É—Ö–∞—é—â–∏–π –õ–æ—Ç–æ—Å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[136830] = {
					"–û—Ö–æ—Ç–Ω–∏—Ü–∞ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[145274] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –Ø–ª–∞—Ç–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139389] = {
					"–í–æ–ª—à–∞—Å–∏—Å –°—Ç–∞–ª—å–Ω–∞—è –ß–µ—à—É—è", -- [1]
					"", -- [2]
				},
				[138992] = {
					"–ü–∞—á–∫—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[150136] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[146436] = {
					"–°–∏—Ä–µ–Ω–∞-—Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[134214] = {
					"–ö–ª–∏–Ω–æ–∫ –ë–µ–∑–¥–Ω—ã –ö–µ–ª–µ–π–Ω", -- [1]
					"", -- [2]
				},
				[140669] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"", -- [2]
				},
				[136831] = {
					"–ó–Ω–∞—Ö–∞—Ä—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[131009] = {
					"–î—É—Ö –∑–æ–ª–æ—Ç–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[139390] = {
					"–ß–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–∂ –°–∞—Ä—Ä–∏—Å", -- [1]
					"", -- [2]
				},
				[135552] = {
					"–ú–µ—á–µ–Ω–Ω—ã–π —Å–º–µ—Ä—Ç—å—é –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[150137] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[138572] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –£–≤–æ—à", -- [1]
					"", -- [2]
				},
				[129602] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138623] = {
					"–ê–º–∞—Ç–µ—Ç-–ª—É—á–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[136832] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[137940] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–∞—è –∞–∫—É–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[147787] = {
					"–ë–æ–µ–≤–æ–π –º–∞–≥ 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[145616] = {
					"–ö–æ—Ä–æ–ª—å –†–∞—Å—Ç–∞—Ö–∞–Ω", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[148522] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–ª—ã–±–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[145261] = {
					"–†–æ—Å–∫–æ—à—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[126205] = {
					"–ù–∞–∂–∏–≤-–æ-–º–∞—Ç–∏–∫", -- [1]
					"", -- [2]
				},
				[134786] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[136833] = {
					"–ñ—Ä–µ—Ü —è–¥–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[135761] = {
					"–ì—Ä–æ–º–æ–≤–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139392] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[136549] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[150139] = {
					"–ö'—Ç–∫—Å, –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[132740] = {
					"–Ø–¥–æ–≤–∏—Ç–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[138369] = {
					"–§—É—Ç–±–æ–º–±–Ω–∞—è —Ö—É–ª–∏–≥–∞–Ω–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146813] = {
					"–ì—é–Ω—Ç–µ—Ä –°–µ—Ä—ã–π", -- [1]
					"", -- [2]
				},
				[134787] = {
					"–ö—Ä–∞–±-–∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[59892] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–∑–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[139393] = {
					"C—Ç—Ä–∞–∂ –≥–Ω–µ–∑–¥–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[144963] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –ö–∏–º–±—É–ª–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[140078] = {
					"–ì–æ—Ä–∏–ª–ª–∞-–∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148441] = {
					"–ì–Ω–æ–º-–≥–∏—Ä–æ–∏–Ω–∂–µ–Ω–µ—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146894] = {
					"–ö–∞–±–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[138626] = {
					"–ê–º–∞—Ç–µ—Ç-–ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–µ—Ü", -- [1]
					"", -- [2]
				},
				[136835] = {
					"–ö–∏–Ω'—Ç–æ–≥–∞ –ó–≤–µ—Ä–æ–±–æ–π", -- [1]
					"", -- [2]
				},
				[137091] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –∏–∑ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139394] = {
					"–ñ—Ä–µ—Ü —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[151630] = {
					"–ö–æ—à–º–∞—Ä–Ω—ã–π –≥–Ω–æ–π", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138627] = {
					"–ê–º–∞—Ç–µ—Ç-–∏–µ—Ä–æ—Ñ–∞–Ω—Ç", -- [1]
					"", -- [2]
				},
				[131974] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –í–∞–ª–µ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134789] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[140674] = {
					"–ì—É–ª–∫–æ–≤–æ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[95061] = {
					"–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[129208] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139395] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[139651] = {
					"–ì–ª—É–±–∏–Ω–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[144767] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –ì–æ–Ω–∫–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[140675] = {
					"–ú–∞—Ç—å —Å—Ç–∞–∏ –ú—É–≥–æ", -- [1]
					"", -- [2]
				},
				[148607] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –ü–∞'–∫—É –ö–∞–ª–∏'—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138628] = {
					"–ê–º–∞—Ç–µ—Ç-–∂—Ä–µ—Ü", -- [1]
					"", -- [2]
				},
				[136837] = {
					"–Ø–¥–æ–º–∞–Ω—Ç –ê–Ω—Ç'—Å—É", -- [1]
					"", -- [2]
				},
				[126918] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139396] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[139652] = {
					"–ë–µ—Ä–µ–≥–æ–≤–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[151098] = {
					"–¢–µ–º–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146893] = {
					"–ú–∏—Å—Ç–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[139539] = {
					"–¢–∞–≤–æ–∫, –ú–æ–ª–æ—Ç –ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü—ã", -- [1]
					"", -- [2]
				},
				[138629] = {
					"–í–∏–∫–∞—Ä–∏–π –î–∂–æ—Å–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[136838] = {
					"–ó–≥–æ—Ä–¥–æ –ñ–∏–≤–æ–¥–µ—Ä", -- [1]
					"", -- [2]
				},
				[138255] = {
					"–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139397] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[146911] = {
					"–ß—É–º–Ω–∞—è –≥–æ–Ω—á–∞—è –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59764] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[134024] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134280] = {
					"–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω", -- [1]
					"", -- [2]
				},
				[148610] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132745] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[135048] = {
					"–ó–∞–ø–∞—á–∫–∞–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é –ø–æ—Ä–æ—Å–µ–Ω–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139398] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[56439] = {
					"–®–∞ –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[135816] = {
					"–ú–µ—Ä–∑–æ—Ç–µ–Ω—å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[120651] = {
					"–í–∑—Ä—ã–≤—á–∞—Ç–∫–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56631] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[138631] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –ö–≤–∞–¥–∏–º", -- [1]
					"", -- [2]
				},
				[132746] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π –º–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"", -- [2]
				},
				[135049] = {
					"–ì—Ä–æ–∑–Ω–æ–∫—Ä—ã–ª—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139399] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[139655] = {
					"–ü—Ä–æ–≤–∏–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135817] = {
					"–ó–µ—Ñ–∏—Ä", -- [1]
					"", -- [2]
				},
				[128455] = {
					"–¢'–ª–æ–Ω–¥–∂–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[148611] = {
					"–ô–æ—Ä—É'—á–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138632] = {
					"–°—Ç—Ä–∞–∂ –ê–∑—É–¥–∞", -- [1]
					"", -- [2]
				},
				[134794] = {
					"–¢–µ–º–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[137097] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[149635] = {
					"–¶–≤–µ—Ç—É—â–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139656] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135818] = {
					"–ö–ª—É–±—è—â–∏–π—Å—è —Å–æ–ª–¥–∞—Ç", -- [1]
					"", -- [2]
				},
				[133972] = {
					"–¢—è–∂–µ–ª–æ–µ –æ—Ä—É–¥–∏–µ", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[134283] = {
					"–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞", -- [1]
					"", -- [2]
				},
				[138889] = {
					"–£–≤—É–ª—å–¥ –ü—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"", -- [2]
				},
				[134795] = {
					"–°–∫—Ä—ã—Ç—ã–π –æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[145026] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[62005] = {
					"–ó–≤–µ—Ä—å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[139657] = {
					"–ì–∞—Ä–ø—É–Ω–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135819] = {
					"–ñ–∏–≤–æ–µ —Ç–æ—Ä–Ω–∞–¥–æ", -- [1]
					"", -- [2]
				},
				[148613] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –ë—Ä–æ—É–¥—Å–∞–π–¥", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[134284] = {
					"–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[140861] = {
					"–ü—ã–ª–µ–≤–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134796] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"", -- [2]
				},
				[135052] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[127049] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ—É—Å–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139658] = {
					"–¢–µ–º–Ω–æ–∂–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[131726] = {
					"–ì—É–Ω–Ω–æ–ª—å—Ñ –Ø—Ä–æ—Å—Ç–Ω—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[136076] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω–æ–µ –æ–±–ª–∞–∫–æ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[148614] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –∫–∞–Ω–æ–Ω–∏—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138635] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –•—É—Å–∞–Ω", -- [1]
					"", -- [2]
				},
				[58807] = {
					"–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[130581] = {
					"–ü–µ—Å–æ—á–Ω—ã–π –≥–ª–∞–∑", -- [1]
					"", -- [2]
				},
				[149311] = {
					"–®–∞–Ω–¥—Ä–∏—Å–∞ –û–ø–µ—Ä–µ–Ω–Ω–∞—è –õ—É–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[143753] = {
					"–í–∞–∑—É–Ω –ì–æ–≤–æ—Ä—è—â–∏–π —Å–æ –∑–≤–µ–∑–¥–∞–º–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[131727] = {
					"–§–µ–Ω—Ä–∞ –ö–æ–≤–∞—Ä–Ω–∞—è", -- [1]
					"SarasIsland", -- [2]
				},
				[57080] = {
					"–ü—Ä–æ–∫–ª—è—Ç—ã–π —Å–≤–∏—Ç–æ–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[134286] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[128969] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136845] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç–æ–ø–æ—Ä–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"", -- [2]
				},
				[133007] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134932] = {
					"–ó–ª–æ—Å–µ—Ç–Ω–∞—è –º–∞—Ç—å —Å—Ç–∞–∏", -- [1]
					"", -- [2]
				},
				[139660] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[131728] = {
					"–†–∞—É–ª—å –°—Ç–æ–π–∫–∏–π", -- [1]
					"SarasIsland", -- [2]
				},
				[138829] = {
					"–ò–Ω–≥–µ–ª—å –ü—Ä–æ–≤–æ—Ä–Ω–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132885] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"", -- [2]
				},
				[140344] = {
					"–ù–µ–±–µ—Å–Ω–∞—è –ì–∞–¥—é–∫–∞", -- [1]
					"", -- [2]
				},
				[136846] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"", -- [2]
				},
				[132074] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö—Ä–∏–∫—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139405] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –≤–æ–ª–Ω –°–µ–∑–∑–µ—Å'–∞–Ω", -- [1]
					"", -- [2]
				},
				[139661] = {
					"–î–æ–±—ã—Ç—á–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[131729] = {
					"–õ–∏–∫–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[132491] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[148617] = {
					"–ê–∫—É–Ω–¥–∞ –†–µ–≤–Ω–æ—Å—Ç–Ω–∞—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[145035] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ª–∏—Å", -- [1]
					"", -- [2]
				},
				[136847] = {
					"–¢–µ–º–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"", -- [2]
				},
				[137103] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[133345] = {
					"–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139662] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –¥–æ–∂–¥—è –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"", -- [2]
				},
				[146827] = {
					"–î–∏–∫–∞—è —Å–æ–±–∞–∫–∞", -- [1]
					"", -- [2]
				},
				[122605] = {
					"–û–∫–∞–º–µ–Ω–µ–≤—à–∏–π –≤—Ä–∞–≥", -- [1]
					"", -- [2]
				},
				[148618] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –ê–Ω–¥—Ä–µ–Ω–∏–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136592] = {
					"–§–ª–∏–Ω–Ω –§—ç–π—Ä–≤–∏–Ω–¥", -- [1]
					"", -- [2]
				},
				[136934] = {
					"–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[123853] = {
					"–í–æ–ª—à–µ–±–Ω–∏—Ü–∞ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139407] = {
					"–ö–ª—ã–∫–æ—Å—Ç—Ä–∞—Ö", -- [1]
					"", -- [2]
				},
				[139663] = {
					"–í—è–∑–∞–ª—å—â–∏–∫ –∫–∞–º—ã—à–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[59752] = {
					"–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[61239] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[148619] = {
					"–ü—Ä–æ–µ–∫—Ü–∏—è –ê–∫—É–Ω–¥—ã", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146828] = {
					"–î–∏–∫–∏–π —â–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[132755] = {
					"–ü–∞–¥–∞–ª—å—â–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[151144] = {
					"Hati", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[138996] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –∑–µ–º–ª–µ–π –î–∂—É–≤–∞", -- [1]
					"", -- [2]
				},
				[139664] = {
					"–ó–ª–æ–±–Ω–æ–ø–ª–∞–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[131669] = {
					"–®–∏–ø–∞—Å—Ç–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[144782] = {
					"–ë—Ä–∞—Ç –ë—Ä—é–Ω", -- [1]
					"", -- [2]
				},
				[140432] = {
					"–°–∫–∞–ª—å–Ω—ã–π –ø—Ä—ã–≥—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[146829] = {
					"–ù–µ—Å–º–µ—Ä—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[144842] = {
					"–ü—Ä–∏–±—Ä–µ–∂–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[145228] = {
					"–í–∞–ª—å—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140850] = {
					"–®–∞–ª–æ–≤–ª–∏–≤—ã–π –∑–µ–º–ª–µ–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[138642] = {
					"–ö–≤–∞–ª–¥–∏—Ä-—Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[8889] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[136083] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[148621] = {
					"–î–∂–µ–∫'–∫–≤–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[140689] = {
					"–ü–æ–ª–∑—É–Ω-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[134908] = {
					"–ö—Ä–æ–≤–æ–∂–≤–∞–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[127019] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139410] = {
					"–í–∏—Å –ë–µ—Å—à—É–º–Ω—ã–π –ö–ª–∏–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[136043] = {
					"–ë—Ä–∞–∫–∏—à", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136250] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[138643] = {
					"–ö–≤–∞–ª–¥–∏—Ä-–±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"", -- [2]
				},
				[148622] = {
					"–ü—Ä–æ–µ–∫—Ü–∏—è –ö–∏–º–±—É–ª–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146831] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[56762] = {
					"–Æ–π-–ª—É–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[139411] = {
					"–ú–Ω–æ–≥–æ–∑—É–±", -- [1]
					"SarasIsland", -- [2]
				},
				[56890] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[99541] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[148623] = {
					"–ü—Ä–æ–µ–∫—Ü–∏—è –ì–æ–Ω–∫–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146320] = {
					"–ü—Ä–µ–ª–∞—Ç –ó–∞'–ª–∞–Ω", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[61240] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[138644] = {
					"–ö–≤–∞–ª–¥–∏—Ä-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[12101] = {
					"–õ–∞–≤–æ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[138481] = {
					"–•—Ä–æ–º–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[139412] = {
					"–ì–∞—à–∞—Å", -- [1]
					"SarasIsland", -- [2]
				},
				[140434] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—Ä–æ–≥", -- [1]
					"SarasIsland", -- [2]
				},
				[135830] = {
					"–Ø—Ä–æ—Å—Ç—å —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134807] = {
					"–î—Ä–µ–≤–Ω—è—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[148624] = {
					"–ü—Ä–æ–µ–∫—Ü–∏—è –ü–∞'–∫—É", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138645] = {
					"–ö–≤–∞–ª–¥–∏—Ä - —Ä–∞–∑–¥–∏—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à", -- [1]
					"SarasIsland", -- [2]
				},
				[132760] = {
					"–†–∞–≤–Ω–∏–Ω–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[145298] = {
					"–î–∏–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[139413] = {
					"–ü—Ä–æ—Ä–æ–∫ –æ–∞–∑–∏—Å–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[146834] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–º–∞–≥–∏—Å—Ç—Ä", -- [1]
					"", -- [2]
				},
				[129640] = {
					"–ó–ª–æ–±–Ω—ã–π –ø–æ—Ä—Ç–æ–≤—ã–π –ø–µ—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146322] = {
					"–°—Ç–µ–Ω–æ–ª–æ–º –†–æ–∫–∫–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[148625] = {
					"–ü—Ä–æ–µ–∫—Ü–∏—è –ö—Ä–∞–≥'–≤—ã", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138646] = {
					"–ö–≤–∞–ª–¥–∏—Ä - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç—É–º–∞–Ω–æ–≤", -- [1]
					"", -- [2]
				},
				[146409] = {
					"–õ–µ–¥–∏ –î–∂–∞–π–Ω–∞ –ü—Ä–∞—É–¥–º—É—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138281] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139414] = {
					"–ñ—Ä–µ—Ü —Ç–æ–ø–∏ –í–∞—Å—Å", -- [1]
					"SarasIsland", -- [2]
				},
				[139670] = {
					"–ú–æ—Ä–≥–æ–∫", -- [1]
					"", -- [2]
				},
				[146835] = {
					"–í—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[134041] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[58810] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[140694] = {
					"–ñ–∞–¥–Ω–∞—è –ü–∞—Å—Ç—å", -- [1]
					"", -- [2]
				},
				[66413] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[26125] = {
					"–ú–æ–∑–≥–æ–ª–æ–≤", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139415] = {
					"–°–ª–∏–∑–µ—à–∫—É—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[136798] = {
					"–ö–æ—Å—Ç–µ–≥—Ä—ã–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[137880] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139416] = {
					"–í–æ–ª—à–∞—Å", -- [1]
					"SarasIsland", -- [2]
				},
				[130638] = {
					"–ö—Ä–æ–∫–æ–ª–∏—Å–∫-–∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"", -- [2]
				},
				[138648] = {
					"–°–∏–≥—Ä–∏–¥ –¢–∫–∞—á–∏—Ö–∞ –ü–æ–∫—Ä–æ–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[129231] = {
					"–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[126928] = {
					"–ö–æ—Ä—Å–∞—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[135322] = {
					"–ó–æ–ª–æ—Ç–æ–π –ó–º–µ–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139672] = {
					"–ë–∞—Ä–º–∞—à–ª–µ–ø", -- [1]
					"SarasIsland", -- [2]
				},
				[137881] = {
					"–†—ã—Ü–∞—Ä—å –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[130639] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[144071] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138649] = {
					"–í—É–ª—å—Ñ –ë—É—Ä–µ–±–µ—Ä–µ–∂–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[136858] = {
					"–î–∂–∞–Ω'–ª–∏", -- [1]
					"", -- [2]
				},
				[61945] = {
					"–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[139674] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π —Ö–æ–¥–æ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[137626] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137882] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[146326] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏ –ì–∞–ª'–≤–∞–Ω–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[136347] = {
					"–£—á–µ–Ω–∏—Ü–∞ –∂—Ä–µ—Ü–æ–≤ –º–æ—Ä—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138650] = {
					"–ó–∞—Ç–µ—Ä—è–≤—à–∏–π—Å—è —Å—Ä–µ–¥–∏ –≤–æ–ª–Ω –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[137627] = {
					"–°–∂–∏–º–∞—é—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145303] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139418] = {
					"–ù–µ–¥–≤–∏–∂–Ω—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[131486] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π —ç–∫–∑–∞—Ä—Ö –¢—É—Ä–∞–ª–∏–æ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134791] = {
					"–°–∏—è—é—â–∏–π –ø–æ–ª–∑—É–Ω", -- [1]
					"", -- [2]
				},
				[132892] = {
					"–í–µ—Ç—Ä–æ–ª–∏—Å—Ç", -- [1]
					"", -- [2]
				},
				[140442] = {
					"–ú—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[138651] = {
					"–°–∏–ª—å–≤–µ—Ä–∏—è –ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –†–∏—Ñ–æ–≤", -- [1]
					"", -- [2]
				},
				[56764] = {
					"–í—Å–µ–ø–æ–≥–ª–æ—â–∞—é—â–∏–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[145304] = {
					"–î–∏–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[137614] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139675] = {
					"–ò—Å–∫–∞—Ç–µ–ª—å –ì–ª—É–±–∏–Ω", -- [1]
					"", -- [2]
				},
				[140108] = {
					"–°–∫–æ—Ä–ø–∏–¥-—Å–º–µ—Ä—Ç–µ–∂–∞–ª", -- [1]
					"", -- [2]
				},
				[61242] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[148631] = {
					"–ù–µ—Ä–∞–∑–æ—Ä–≤–∞–≤—à–∏–π—Å—è –∑–∞—Ä—è–¥", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146840] = {
					"–°–∫–µ–ª–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[130896] = {
					"–ë–æ—á–∫–∞ —á–µ—Ä–Ω–æ–π –ø–µ–ª–µ–Ω—ã", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[145305] = {
					"–î–∏–∫–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"", -- [2]
				},
				[148120] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –º–æ—Ä–ø–µ—Ö", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139676] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –≤–æ–ª–Ω–∞–º–∏ –û—Ä–º—Ä–≥", -- [1]
					"SarasIsland", -- [2]
				},
				[135838] = {
					"–ü–µ–ø–ª–æ–≤–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[149144] = {
					"–ü—Ä–∏–ª–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –î–∂–∞–π–Ω—ã", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[140444] = {
					"–ú–∞—Ç–µ—Ä—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[138653] = {
					"–•–æ—Å–≤–∏—Ä –ì–Ω–∏—é—â–∏–π –û—Å—Ç–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[59835] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[61946] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[139421] = {
					"–ì–µ–∫–∫–∞–∑ –ú—à–∏—Å—Ç–∞—è –ß–µ—à—É—è", -- [1]
					"", -- [2]
				},
				[139677] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –ø—É—á–∏–Ω—ã", -- [1]
					"SarasIsland", -- [2]
				},
				[126291] = {
					"–ü–µ—Ö–æ—Ç–∏–Ω–µ—Ü –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[58108] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[122986] = {
					"–î–∏–∫–∏–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[138647] = {
					"–•—ä—è–Ω–∞ –í–µ—Å—Ç–Ω–∏—Ü–∞ –¢—É–º–∞–Ω–æ–≤", -- [1]
					"", -- [2]
				},
				[147098] = {
					"–î—É—Ö –°—é—ç–Ω—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[56765] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[139422] = {
					"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –∫—Ä–æ–ª—É—Å–∫–æ–≤", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139678] = {
					"–ë—Ä–µ–≥–æ—Å—Ç—É–ø", -- [1]
					"SarasIsland", -- [2]
				},
				[127315] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[134602] = {
					"–°–∫—Ä—ã—Ç–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[56637] = {
					"–£–∫-–£–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[144796] = {
					"–ì–ª–∞–≤–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∫ –ú–µ–≥–≥–∞–∫—Ä—É—Ç", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[136864] = {
					"–£–≥—É—É –£—Å—Ç—Ä–∞—à–∞—é—â–∏–π", -- [1]
					"", -- [2]
				},
				[123292] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135329] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136799] = {
					"–°–∫–∞–ª–æ–ª–æ–º", -- [1]
					"", -- [2]
				},
				[145402] = {
					"–û–¥–∏—á–∞–≤—à–∞—è –±–µ–∑—É–º–∏—Ü–∞", -- [1]
					"", -- [2]
				},
				[61243] = {
					"–ì–µ–∫–∫–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[136353] = {
					"–û–≥—Ä–æ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146844] = {
					"–û–ª—å—Ñ–∫—Ä–∏–≥ –ü–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[140670] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π —Å–∏–ª–∞—á", -- [1]
					"", -- [2]
				},
				[136044] = {
					"–Ø–¥–æ–∑—ã–±—å", -- [1]
					"", -- [2]
				},
				[137764] = {
					"–û–ø—ã—Ç–Ω–∞—è –≤–æ–ª—à–µ–±–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[131492] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[132893] = {
					"–î—É—Ö –æ–≥–Ω—è", -- [1]
					"SarasIsland", -- [2]
				},
				[144286] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞–∫—Ç–∏–≤–∞–º–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146843] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[146845] = {
					"–†–≤–∞–Ω—ã–π –î–∂–∞—Ä–µ–¥", -- [1]
					"", -- [2]
				},
				[124583] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"SarasIsland", -- [2]
				},
				[61947] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[139425] = {
					"–ë–µ—à–µ–Ω–∞—è –Ω–∞—Å–µ–¥–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140443] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[148584] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –ú–æ—Ä–¥–µ–Ω—Ç –í–µ—á–µ—Ä–Ω—è—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134139] = {
					"–•—Ä–∞–º–æ–≤–Ω–∏–∫ –∏–∑ –°–≤—è—Ç–∏–ª–∏—â–∞ –®—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146833] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"", -- [2]
				},
				[148893] = {
					"–ó–∞–º—É—á–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[147614] = {
					"–®–∞–º–∞–Ω —Å—Ç–∏—Ö–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[134600] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[122967] = {
					"–ñ—Ä–∏—Ü–∞ –ê–ª—É–Ω'–∑–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[130661] = {
					"–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146832] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[136100] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138659] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"", -- [2]
				},
				[146847] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –õ–∞–Ω–∏–µ–ª–ª–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[56766] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[32517] = {
					"–ì–¥–µ–º–æ—è—Å–∞—Å–∏—Å", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139659] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[133379] = {
					"–ì—é—Ä–∑–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[135764] = {
					"–í–∑—Ä—ã–≤–Ω–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[136688] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146881] = {
					"–í–µ–¥—É–Ω –ë—Ä–∏–Ω–≤—É–ª—å—Ñ", -- [1]
					"", -- [2]
				},
				[65402] = {
					"–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[134822] = {
					"–ú–∞—Ç—Ä–∏–∞—Ä—Ö –ø–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã—Ö –≤–∞—Å–∏–ª–∏—Å–∫–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138660] = {
					"–¢—É–º–∞–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"", -- [2]
				},
				[122968] = {
					"–Ø–∑–º–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[124581] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–µ–ø–∫–æ—Ö–≤–∞—Ç", -- [1]
					"", -- [2]
				},
				[135846] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130319] = {
					"–ì–æ–ø–ª–∏—Ç –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[140452] = {
					"–û—Å—Ç—Ä–æ—Ä–æ–≥ –î—Ä–µ–º–ª—é—â–∏–π", -- [1]
					"", -- [2]
				},
				[146849] = {
					"–í–ª–∞–¥—ã—á–∏—Ü–∞ –¥—É—Ö–æ–≤ –†–æ–≤–µ–Ω–∞", -- [1]
					"", -- [2]
				},
				[145058] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"", -- [2]
				},
				[140430] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–ª–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[139429] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≤–æ–∏–Ω", -- [1]
					"", -- [2]
				},
				[135366] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[126423] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"", -- [2]
				},
				[134056] = {
					"–ê–∫–≤–∞'—Å–∏—Ä—Ä", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140995] = {
					"–†—É–∏–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[146850] = {
					"–í–µ–ª–∏–∫–∏–π –º–∞–≥–∏—Å—Ç—Ä –£–ª—å—Ä–∏—Ö", -- [1]
					"", -- [2]
				},
				[145059] = {
					"–•–∏—Ç—Ä—ã–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[138888] = {
					"–í–æ—Ä–æ–∂–µ–π –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[122969] = {
					"–ó–∞–Ω—á—É–ª—å—Å–∫–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[56511] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[129366] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139431] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–∫–ª–µ–ø–∞", -- [1]
					"", -- [2]
				},
				[146112] = {
					"–ß–µ—Ä–Ω–∏–ª—å–Ω–∞—è –®–∫—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[131527] = {
					"–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[145060] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"", -- [2]
				},
				[139459] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"", -- [2]
				},
				[11673] = {
					"–î—Ä–µ–≤–Ω—è—è –≥–æ–Ω—á–∞—è –Ω–µ–¥—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[144160] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –ö—Ä–∞—Å–Ω–æ–∫—Ä—é–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139014] = {
					"–î–∏–∫–∏–π –ª—É–Ω–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[134058] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–æ–≤ –§—ç–π", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140455] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã—á–æ–∫", -- [1]
					"", -- [2]
				},
				[146852] = {
					"–ö–æ–Ω—Ä–∞–¥ –ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[145061] = {
					"–í–∏–∑–∂–∞—â–∏–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[138438] = {
					"–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å –≤–æ–ª–Ω –°—Ç–∞–ª–µ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[122970] = {
					"–ö—Ä–∞–¥—É—â–∏–π—Å—è —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[59518] = {
					"–†–∞–∑–¥—É–≤—à–∏–π—Å—è –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[129367] = {
					"–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137625] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140456] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –º—É—Å–∫–µ–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148894] = {
					"–ó–∞–±–ª—É–¥—à–∞—è –¥—É—à–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[140968] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –∫—É—Å–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135562] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139433] = {
					"–°–µ—Å—Ç—Ä–∞ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è", -- [1]
					"", -- [2]
				},
				[133870] = {
					"–ë–æ–ª—å–Ω–æ–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[131246] = {
					"–ê–ª–∞–Ω–∞–∞", -- [1]
					"", -- [2]
				},
				[134060] = {
					"–õ–æ—Ä–¥ –®—Ç–æ—Ä–º—Å–æ–Ω–≥", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140457] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä–∞—è –∫–æ—Ä–æ–≤–∞", -- [1]
					"", -- [2]
				},
				[146854] = {
					"–ß–µ—Ä–Ω–æ–ª–∞–ø–∞—è –°—Ç–µ–ª–ª–∞", -- [1]
					"", -- [2]
				},
				[134828] = {
					"–í–æ–¥–µ–Ω—ã—à", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139690] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –≤–æ–ª–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[122971] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[56448] = {
					"–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[139946] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140106] = {
					"–°–º–µ—Ä—Ç–µ–∂–∞–ª - —Å—Ç—Ä–∞–∂ –∫–ª–∞–¥–∫–∏", -- [1]
					"", -- [2]
				},
				[140458] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫", -- [1]
					"", -- [2]
				},
				[146855] = {
					"–ê–∫–∏–Ω–∞", -- [1]
					"", -- [2]
				},
				[140970] = {
					"–°–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[98035] = {
					"–ó–ª–æ–≤–µ—â–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[126424] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –ø—Ä–∏–ª–∏–≤–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[139691] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[122984] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[61245] = {
					"–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[61246] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø–æ–≥—Ä–æ–º—â–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[136330] = {
					"–®–∏–ø—ã –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[145065] = {
					"–û–ø–µ—Ä–∏–≤—à–∏–π—Å—è —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[134788] = {
					"–ò–≥–ª–æ—Ö–≤–∞—Ç-—Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[122972] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∞–≤–≥—É—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[139692] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —Å—Ç–∞—Ä–µ–π—à–∏–Ω–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[129369] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134063] = {
					"–ë—Ä–∞—Ç –ê–π—Ä–æ–Ω—Ö–∞–ª–ª", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[134423] = {
					"–û–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[145064] = {
					"–û–≥–æ–Ω–µ–∫", -- [1]
					"", -- [2]
				},
				[139011] = {
					"–î–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[144776] = {
					"–ê–π—Ä–∏–Ω –ë—ã—Å—Ç—Ä–æ–Ω–æ–≥–∞—è", -- [1]
					"", -- [2]
				},
				[134912] = {
					"–õ–∏–ª–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[122076] = {
					"–°–Ω–µ–∂–Ω–∞—è —Å—Ñ–µ—Ä–∞", -- [1]
					"", -- [2]
				},
				[139949] = {
					"–ß—É–º–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130521] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[145067] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[122973] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –¥—É—Ö–æ–≤–Ω–∏–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[140973] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[147370] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞ –ö–∞–¥–∂–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139438] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –¥—É—Ö–æ–≤ –¢–æ–≥–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[139694] = {
					"–ï–¥–∫–∏–π –ü–∞–Ω—Ü–∏—Ä—å", -- [1]
					"SarasIsland", -- [2]
				},
				[129370] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132530] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140991] = {
					"–ú–æ–∑–≥–æ–ø–ª–µ—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146859] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"SarasIsland", -- [2]
				},
				[136880] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[140974] = {
					"–°—Ç–∞—Ä–æ–∑–æ–±", -- [1]
					"", -- [2]
				},
				[139439] = {
					"–ó–∞–∫–∞—Ç–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –î–∑—É—É–Ω", -- [1]
					"", -- [2]
				},
				[139695] = {
					"–®—É—Å—Ç—Ä–æ–∫–ª–µ—à–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[134338] = {
					"–ñ—Ä–µ—Ü –º–æ—Ä—è - –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[130522] = {
					"–ú–æ—Ä—è—á–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[61247] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∑–µ–ª–µ–Ω–æ—Ä–æ–≥", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[146860] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[140975] = {
					"–ú–ª–∞–¥–æ–∑–æ–±", -- [1]
					"", -- [2]
				},
				[122263] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"", -- [2]
				},
				[143011] = {
					"–ü–µ—Å–æ—á–Ω—ã–π –æ–∫—É–Ω—å", -- [1]
					"", -- [2]
				},
				[135474] = {
					"–í–µ–¥—å–º–∞-–ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[129371] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–æ–≤ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136882] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[133556] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"", -- [2]
				},
				[132532] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140976] = {
					"–ß–µ—Ä–≤—å-–±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[130011] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[132802] = {
					"–ô–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"", -- [2]
				},
				[139697] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π —à–∞–º–∞–Ω –ö–ª–∞–∫—Å–∏–∫–∞—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[142000] = {
					"–ó–ª–æ–≤–µ—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[126429] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[140977] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"", -- [2]
				},
				[146862] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136883] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à–∏–ø–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[132481] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137395] = {
					"–û–ø—ã—Ç–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[133557] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"", -- [2]
				},
				[129372] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å —á–µ—Ä–Ω–æ–π —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134069] = {
					"–í–æ–ª'–∑–∏—Ç –®–µ–ø—á—É—â–∞—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140978] = {
					"–°—Ç—Ä–∞—Ö–æ—Ç—É–Ω", -- [1]
					"", -- [2]
				},
				[146863] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136884] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –±–æ–µ–≤–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[130012] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127048] = {
					"–ó–µ–º–ª–µ–∫–æ–ø –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ—É—Å–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[61056] = {
					"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139340] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[146118] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[136885] = {
					"–®–∏–ø–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[146864] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–µ–º–ª–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[140979] = {
					"–î–ª–∏–Ω–Ω–æ–∑—É–±", -- [1]
					"", -- [2]
				},
				[147376] = {
					"–ë–∞—Ä—å–µ—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139444] = {
					"–ù–µ–∫—Ä–æ–ª–æ—Ä–¥ –¶–∑—ã–∞–Ω—å", -- [1]
					"", -- [2]
				},
				[139700] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —à–∞–º–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[129373] = {
					"–ü–æ—Ä—Ç–æ–≤–∞—è –∑–∞–≤–æ–¥—á–∏—Ü–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146838] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"", -- [2]
				},
				[146874] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–µ—Ç—Ä–æ–≤ –ú–∞—Ä–∞–π—è", -- [1]
					"", -- [2]
				},
				[136249] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140980] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"", -- [2]
				},
				[138432] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤ –ù–µ—Å—Å–∞", -- [1]
					"", -- [2]
				},
				[139445] = {
					"–¢—É–º–∞—Ç", -- [1]
					"", -- [2]
				},
				[139701] = {
					"–ù–∏–∑—à–∏–π –æ–∫–µ–∞–Ω—Å–∫–∏–π –æ—Ä–∞–∫—É–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[136802] = {
					"–£–≥–ª–µ–∫—É—Å", -- [1]
					"", -- [2]
				},
				[132744] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"", -- [2]
				},
				[130653] = {
					"–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146866] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[130909] = {
					"–°–º—Ä–∞–¥–Ω–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139442] = {
					"–¶–∑—É–∫–∞–Ω –°–ø–∏–Ω–æ–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[138819] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[136391] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[138511] = {
					"–õ–∞–∑—É—Ä–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[126919] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129758] = {
					"–ì—Ä–µ–Ω–∞–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146867] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136888] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –≥—Ä—è–∑–∏ –ë–∞—Ä—Ä—É–ª", -- [1]
					"", -- [2]
				},
				[11658] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[60197] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139400] = {
					"–†–µ—á–Ω–æ–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[137405] = {
					"–¶–µ–ø–∫–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136839] = {
					"–ú—Ä–æ–≥–∞–Ω", -- [1]
					"", -- [2]
				},
				[136190] = {
					"–¢–µ–º–Ω—ã–π —Ä–∞–∑–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[139460] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ç–∫–∞—á –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[140983] = {
					"–•–ª–∞–¥–æ–±—É—Ä-—Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[141495] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59458] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[59522] = {
					"–ü–µ–Ω–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[146869] = {
					"–ì—é—Ä—É–º –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"SarasIsland", -- [2]
				},
				[146104] = {
					"–ñ–∏–≤–∞—è –±–æ–º–±–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[63808] = {
					"–¢—É—Å–∫–ª—ã–π —Å–∞–º–æ—Ü–≤–µ—Ç", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[59778] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–µ—Ü", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[140984] = {
					"–ß–µ—Ä–≤—å-—Ö–ª–∞–¥–æ–±—É—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[138625] = {
					"–ê–º–∞—Ç–µ—Ç-–∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[131261] = {
					"–î–∞—Ä–∫–∏—Å", -- [1]
					"", -- [2]
				},
				[132797] = {
					"–ï–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[136891] = {
					"–ö–ª—ã–∫–æ–ª–æ–º –ë—ã–≤–∞–ª—ã–π", -- [1]
					"", -- [2]
				},
				[136892] = {
					"–ë—Ä—É—Ç–∞—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[130655] = {
					"–ë–æ–±–±–∏ –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[146870] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ –û–Ω–∞–∑–∞–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[140985] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"", -- [2]
				},
				[135050] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –í–∞–Ω–¥–µ–≥—Ä–∏–º", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[128967] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133389] = {
					"–ì–∞–ª—å–≤–∞–∑–∑—Ç", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[146103] = {
					"–ñ–∏–≤–∞—è –±–æ–º–±–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[140294] = {
					"–í–æ–ª–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[138427] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[146871] = {
					"–ú–∞—Ç—Ä–∏–∞—Ä—Ö –ù–∞—Å'–Ω–∞–π—è", -- [1]
					"", -- [2]
				},
				[140986] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[135470] = {
					"–ê–∫–∞'–∞–ª–∏ –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140678] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"", -- [2]
				},
				[136890] = {
					"–ñ–µ–ª–µ–∑–Ω—ã–π –û—Ä–∫–∞—Å", -- [1]
					"", -- [2]
				},
				[130400] = {
					"–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134331] = {
					"–ö–æ—Ä–æ–ª—å –†–∞—É'–∞–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138428] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[136889] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –∫–æ–ª–¥—É–Ω –¢–∞–∫", -- [1]
					"", -- [2]
				},
				[136893] = {
					"–ó–µ–º–ª–µ—Ç—Ä—è—Å –ê–≥–≥–∞–Ω", -- [1]
					"", -- [2]
				},
				[61442] = {
					"–ö—É–∞–π –ë–µ—Å—á–µ–ª–æ–≤–µ—á–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[59459] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[136976] = {
					"–¢'–∑–∞–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[136186] = {
					"–ñ—Ä–∏—Ü–∞ –º–æ—Ä—è - —Å–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140982] = {
					"–õ–µ–¥–æ–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[138429] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[146873] = {
					"–£–±–∏–π—Å—Ç–≤–µ–Ω–Ω–∞—è –±—É—Ä—è", -- [1]
					"SarasIsland", -- [2]
				},
				[140988] = {
					"–°—Ç–∞–ª–µ—Ä–µ–∑", -- [1]
					"", -- [2]
				},
				[122963] = {
					"–†–µ–∑–∞–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[132864] = {
					"–ú–æ–ª–æ–¥–æ–π –∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"", -- [2]
				},
				[145850] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π —Å–∞–ø–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136207] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∑–∞—â–∏—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[130318] = {
					"–ü—Ä–æ—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[148665] = {
					"–†–∞—Å—Ç–∞—Ä—Å–∫–∏–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[148921] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140989] = {
					"–ö–æ—Å—Ç–µ—á–µ—à—É–π–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139188] = {
					"–°—Ç–∞–ª—å–Ω–æ–π –ú–µ—Ö", -- [1]
					"", -- [2]
				},
				[134157] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[145851] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π - –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –≥–∏–ø–ø–æ–≥—Ä–∏—Ñ–µ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139015] = {
					"–î–∏–∫–∏–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"", -- [2]
				},
				[56706] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[136881] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[146875] = {
					"–í–∞–ª–∏–º–æ–∫ –ó–ª–æ–≤—Ä–µ–¥–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[140990] = {
					"–ö–æ—Å—Ç–µ—á–µ—à—É–π–Ω—ã–π –ø–ª–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[128651] = {
					"–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133944] = {
					"–ê—Å–ø–∏–¥–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[122086] = {
					"–°—Ç–∞–ª–µ—à–∫—É—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[132868] = {
					"–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"", -- [2]
				},
				[148907] = {
					"–ü—Ä–∏–∑–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±—Ä–∞–∑", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[148667] = {
					"–†–∞—Å—Ç–∞—Ä—Å–∫–∏–π –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146876] = {
					"–ú–∞—á–∏—Ç—É –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"", -- [2]
				},
				[132803] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π –≤–µ–Ω–¥–∏–≥–æ", -- [1]
					"", -- [2]
				},
				[131402] = {
					"–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[59460] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[140356] = {
					"–Ø—Ä–∫–∞—è –ß–µ—à—É–π–∫–∞", -- [1]
					"", -- [2]
				},
				[134686] = {
					"–í–∑—Ä–æ—Å–ª—ã–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[146365] = {
					"–ü—ã–ª–∞—é—â–∏–π –æ–≥–Ω–µ—Å—Ç—Ä–∞–∂", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[137375] = {
					"–≠–∫–∑–æ—Å–∫–µ–ª–µ—Ç –æ–∑–∞—Ä–µ–Ω–Ω—ã—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139337] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[139010] = {
					"–°–≤–∏—Ä–µ–ø—ã–π –æ—Å—Ç—Ä–æ–∫–æ–≥–æ—Ç—å", -- [1]
					"", -- [2]
				},
				[131383] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139457] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ü–∏–π–ª–∏–Ω—å", -- [1]
					"", -- [2]
				},
				[126181] = {
					"–†–∞–º—É—Ç –ß–µ—Ä–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[136990] = {
					"–ê–Ω–∫–∞–ª–∏ –ü—Ä–æ–∫–ª—è—Ç–∞—è", -- [1]
					"", -- [2]
				},
				[146366] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[138434] = {
					"–í–µ–¥—å–º–∞ –±—É—Ä—å –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[136643] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140993] = {
					"–¢–µ–º–Ω–æ–ø–æ–ª–∑-–æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[126093] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[144807] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146884] = {
					"–í–æ–µ–≤–æ–¥–∞ –•—å–µ–ª—å—Å–∫–∞—Ä–¥", -- [1]
					"", -- [2]
				},
				[147621] = {
					"–ë–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146367] = {
					"–£–≥'–æ–ª—å–º", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[118175] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –±—É—Ä–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140447] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131847] = {
					"–ì—É–ª—è–∫–∞ –∏–∑ –¥–æ–º–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138830] = {
					"–¢—Ä–æ–≤–∞—Å—Ç –í–µ–¥–æ–º—ã–π –ó–≤–µ–∑–¥–∞–º–∏", -- [1]
					"", -- [2]
				},
				[135365] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ê–ª—å–º–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[122088] = {
					"–¢–∏—Ö–æ—Å—Ç—É–ø –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[130404] = {
					"–ö—Ä—ã—Å–æ–ª–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138641] = {
					"–ö–≤–∞–ª–¥–∏—Ä-—É–∂–∞—Å–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[138436] = {
					"–õ–æ—Ä–¥ –ó–º–µ–µ–ø–ª–∞–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146880] = {
					"–ì–æ–ª–≤—Ä–∞–Ω –ó–∞–≥–∞–¥–æ—á–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[132807] = {
					"–¶–∏–π–ª–∏–Ω—å –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[61444] = {
					"–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[59461] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[133510] = {
					"–ü–∞–ª–∞–¥–∏–Ω –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[135706] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[140441] = {
					"–ú–æ–ª–æ–¥–æ–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[138437] = {
					"–°–∑–µ—Ä–∏—Å –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[134599] = {
					"–£—Å–∏–ª–µ–Ω–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140427] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–µ–ª - –≤–æ–∂–∞–∫ —Å—Ç–∞–¥–∞", -- [1]
					"", -- [2]
				},
				[144772] = {
					"–õ–µ–¥–∏ –¢–∞–º–∞–∫–∏–Ω", -- [1]
					"", -- [2]
				},
				[139461] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–∫–∞–ª–æ–≥—Ä—ã–∑", -- [1]
					"", -- [2]
				},
				[122089] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[131785] = {
					"–ñ—É–∂–∂–∞—â–∏–π —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[146370] = {
					"–ë–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[148673] = {
					"–°–æ—Å—É–¥ –ë–≤–æ–Ω—Å–∞–º–¥–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146882] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∞—è —á—É–º–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139339] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[130437] = {
					"–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139462] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≥–ª–∏–Ω–æ—á–µ—Ç", -- [1]
					"", -- [2]
				},
				[134909] = {
					"–°—Ç—Ä–µ–∫–æ—á—É—â–∏–π –ø–∞—É–∫-–ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[138561] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –±–∏—á–µ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"", -- [2]
				},
				[146371] = {
					"–®–∞–º–∞–Ω —Å—Ç–∏—Ö–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[131666] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[146883] = {
					"–ü—Å–∞—Ä—å –ê–Ω–≥–≤–æ–ª—å–¥", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139680] = {
					"–õ–æ–≤–µ—Ü –∏–∑ —Ç–µ–º–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[11659] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –Ω–µ–¥—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[139463] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[122090] = {
					"–°–∞—Ä–∞—à–∞—Å –†–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146116] = {
					"–ò–≥–ª–æ—Å–ø–∏–Ω-–¥–æ–±—ã—Ç—á–∏–∫", -- [1]
					"", -- [2]
				},
				[139341] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[58812] = {
					"–ó–ª–æ–±–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[144837] = {
					"–û–ª–µ–Ω—å c –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[122965] = {
					"–í–æ–ª'–∫–∞–∞–ª", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[61445] = {
					"–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[139464] = {
					"–†–µ–≤—É–Ω –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[135839] = {
					"–ë–æ–ª–æ—Ç–Ω—ã–π –≥–∞–∑–æ–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[133835] = {
					"–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[130640] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-—Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138441] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è –ø–µ–≤—É–Ω—å—è", -- [1]
					"", -- [2]
				},
				[146885] = {
					"–ì–Ω–∏–ª–æ–≤—Ä–∞–Ω", -- [1]
					"", -- [2]
				},
				[56636] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –†–∏'–º–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[135263] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129232] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[126185] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[133836] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[136139] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[135834] = {
					"–ü–∞–≥—É–±–Ω–æ–µ –æ–±–ª–∞–∫–æ", -- [1]
					"", -- [2]
				},
				[144839] = {
					"–ë–µ–ª–æ—Ö–≤–æ—Å—Ç–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[126847] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –†–∞—É–ª—å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129000] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"", -- [2]
				},
				[139466] = {
					"–ö–æ–±–∞–ª—å—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[56763] = {
					"–ù–∞–±–∏—Ä–∞—é—â–∏–π —Å–∏–ª—ã —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[146119] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[138187] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138443] = {
					"–ß–µ—à—É–µ—Å—Ç—Ä–∞–∂ –ë—É–ª–µ—Ç", -- [1]
					"", -- [2]
				},
				[144840] = {
					"–ü—è—Ç–Ω–∏—Å—Ç—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140679] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π –≤–µ–Ω–¥–∏–≥–æ", -- [1]
					"", -- [2]
				},
				[130024] = {
					"–ú–æ–∫—Ä–∞—è –∫–æ—Ä–∞–±–µ–ª—å–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138493] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140038] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π —É–≥–æ—Ä—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140691] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[138019] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138444] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –í–µ—Å–ø–∞—Ä–∞–∫", -- [1]
					"", -- [2]
				},
				[140690] = {
					"–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[129830] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π –ö–ª–∞—Ü-–ö–ª–∞—Ü", -- [1]
					"SarasIsland", -- [2]
				},
				[127482] = {
					"–°—Ç–æ—á–Ω—ã–π –∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139468] = {
					"–•—Ä–µ–±—Ç–æ–¥–µ—Ä –ö—É-–ö–æ–Ω", -- [1]
					"", -- [2]
				},
				[145865] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π –º—É—à–∫–µ—Ç–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[130635] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[128649] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140855] = {
					"–ö–∞–ø–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146889] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[138890] = {
					"–î–∞—Ä–≥—É–ª—å—Ñ –ò—Å–∫–∞—Ç–µ–ª—å –î—É—Ö–æ–≤", -- [1]
					"", -- [2]
				},
				[130025] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[129227] = {
					"–ê–∑–µ—Ä–æ–∫–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132713] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140431] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–µ–ª", -- [1]
					"", -- [2]
				},
				[147965] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[138446] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—É—á–∏–Ω –ó–µ–ª–∏—Å—Å–∞", -- [1]
					"", -- [2]
				},
				[146890] = {
					"–†—É–Ω–æ–º–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[140676] = {
					"–ë–æ–ª—å—à–æ–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[149356] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[139470] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –∑–º–µ–µ–≤ –°–∏—à–æ", -- [1]
					"", -- [2]
				},
				[133585] = {
					"–î–∏–Ω–∞ \"–î–∏–∑–∑–∏\" –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∞", -- [1]
					"", -- [2]
				},
				[140076] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-–≤–æ–∂–∞–∫", -- [1]
					"", -- [2]
				},
				[124582] = {
					"–£—â–µ–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[138447] = {
					"–í–æ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –°–∞–ª–∞—Ä–∏—è", -- [1]
					"", -- [2]
				},
				[56713] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[138469] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π —á–µ—à—É–π—á–∞—Ç—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[130026] = {
					"–ú–æ—Ä—Å–∫–æ–π –∫–æ–ª–¥—É–Ω –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[145033] = {
					"–ü–æ–ª—è—Ä–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[148615] = {
					"–î–∏–≤'–∏–∞–Ω", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[132913] = {
					"–û—Å—Ç—Ä–æ–≤–Ω–æ–π —ç—Ç—Ç–∏–Ω", -- [1]
					"", -- [2]
				},
				[132051] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –∫–ª–µ—â", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[129016] = {
					"–ú—É—à–∫–µ—Ç–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"", -- [2]
				},
				[146892] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[132819] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[138887] = {
					"–ú–∏—Å—Ç–∏–∫ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[59464] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[134793] = {
					"–•—Ä–µ–±—Ç–æ—Å–≤–µ—Ç", -- [1]
					"", -- [2]
				},
				[140619] = {
					"–ë–µ—Ä–µ–≥–æ–≤–æ–π —è—Ä–¥–æ–∑—É–±", -- [1]
					"", -- [2]
				},
				[127480] = {
					"–ñ–∞–ª—è—â–∏–π –ø–∞—Ä–∞–∑–∏—Ç", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[61338] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[148940] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∞—è —Ö–∏–º–µ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132820] = {
					"–ü–æ—Ä–æ—Å–µ–Ω–æ–∫-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[130027] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139473] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –º–∞—à–∏–Ω–∏—Å—Ç –ù—É-–°–∏–Ω—å", -- [1]
					"", -- [2]
				},
				[133588] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–∑—Ä—ã–≤—á–∞—Ç–∫–æ—Å—Ç—Ä–µ–ª", -- [1]
					"", -- [2]
				},
				[144755] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –ó–∞—ä–∫—Å–∞—à", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[129214] = {
					"–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[148483] = {
					"–î—Ä–µ–≤–Ω–∏–π –º—Å—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[134612] = {
					"–¶–µ–ø–∫–∏–µ —â—É–ø–∞–ª—å—Ü–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[148442] = {
					"–ì–Ω–æ–º–∫–∞-–¥–∏–≤–µ—Ä—Å–∞–Ω—Ç–∫–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[145371] = {
					"–£—É'–Ω–∞—Ç", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139474] = {
					"–¶–æ—Ä-–°–∏–Ω—å –û—Ä–∞–∫—É–ª –ó–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[136834] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∑–∞ —Å–∫–∞–ª—å–ø–∞–º–∏ –ë–∞–∑—É—É–ª—É", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135892] = {
					"–í—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ –ø–ª–∞–º—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[24207] = {
					"–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146256] = {
					"–õ–∞–º–∏–Ω–∞—Ä–∏—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[146895] = {
					"–í–∞–Ω–¥–∞–ª –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[138994] = {
					"–î—Ä–µ–≤–æ—Ä—É–∫", -- [1]
					"", -- [2]
				},
				[130028] = {
					"–ñ—Ä–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[56906] = {
					"–î–∏–≤–µ—Ä—Å–∞–Ω—Ç –ö–∏–ø'—Ç–∏–ª–∞–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[126190] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[135893] = {
					"–ü—ã–ª–∞—é—â–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[135254] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138465] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[65414] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[5925] = {
					"–¢–æ—Ç–µ–º –∑–∞–∑–µ–º–ª–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[148254] = {
					"–õ–µ–¥—è–Ω–æ–π –æ—Å–∫–æ–ª–æ–∫", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[139476] = {
					"–ö–∞–º–µ–Ω–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"", -- [2]
				},
				[100943] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[135894] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132056] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140854] = {
					"–î—É—Ö –æ—Ç–ª–∏–≤–∞", -- [1]
					"", -- [2]
				},
				[125828] = {
					"–ó—ë–±–µ–¥–∞–º", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[134895] = {
					"–ñ–µ–ª–µ–∑–Ω–æ–ø—É—Ç-–ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[56747] = {
					"–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[58198] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[131545] = {
					"–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[135895] = {
					"–û—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω–∞—è –∏—Å–∫—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[139761] = {
					"–°—Ç–∞—Ä—à–∏–π –º–∞—Ç—Ä–æ—Å –û'–†—É—Ä–∫", -- [1]
					"", -- [2]
				},
				[129552] = {
					"–ú–æ–Ω–∑—É–º–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[134616] = {
					"–ü–æ–¥—Ä–∞—Å—Ç–∞—é—â–∏–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[135959] = {
					"–ó–µ–º–ª–µ—Ç—Ä—è—Å –†–æ–∫–æ—á—É—â–∏–π", -- [1]
					"", -- [2]
				},
				[137478] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –£–∞—Å–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[56395] = {
					"–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[133593] = {
					"–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139000] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –Æ—Ä", -- [1]
					"", -- [2]
				},
				[138827] = {
					"–ë–æ–¥–∞–ª—å—Ñ –°–∏–ª—å–Ω—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[61392] = {
					"–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[134617] = {
					"–î–µ—Ç–µ–Ω—ã—à –∫—Ä–æ–ª—É—Å–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[129526] = {
					"–ú–æ—Ä—è—á–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129471] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"", -- [2]
				},
				[56719] = {
					"–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[138998] = {
					"–¢–æ–ª—Å—Ç–æ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[127503] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö–æ—Ä–≥–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[136000] = {
					"–ë–µ—Ä–∏–ª–ª—É—Å", -- [1]
					"", -- [2]
				},
				[61337] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[136665] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[126832] = {
					"–ù–µ–±–µ—Å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω –ö—Ä–∞–≥–≥", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[143985] = {
					"–ü–æ–≥–ª–æ—â–∞—Ç–æ—Ä", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[139480] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[61398] = {
					"–°–∏–Ω—å –ú–∞—Å—Ç–µ—Ä –ë–æ—è", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[58319] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[59873] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[56792] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç —Å–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140760] = {
					"–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"", -- [2]
				},
				[138969] = {
					"–î—É—Ö –º–æ–≥—É –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[59555] = {
					"–ù–∞–≤—è–∑—á–∏–≤—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[59546] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Ä—ã–±–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[148194] = {
					"–õ–µ–¥—è–Ω–æ–π –±–∞—Ä—å–µ—Ä", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[133852] = {
					"–ñ–∏–≤–∞—è –≥–Ω–∏–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[126449] = {
					"–ò–ª–æ–ø–ª—é–π", -- [1]
					"SarasIsland", -- [2]
				},
				[134364] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫ - —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —è–∏—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[89] = {
					"–ò–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[138970] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"SarasIsland", -- [2]
				},
				[56875] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–ø–æ–¥—Ä—ã–≤–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[61216] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[56589] = {
					"–ë–æ–µ—Ü –ì–∞'–¥–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[144637] = {
					"–ì—Ä–æ–Ω–≥", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –î–∞–∑–∞—Ä'–∞–ª–æ—Ä", -- [2]
				},
				[140250] = {
					"–ï–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[56930] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –≤–µ—Å—Ç–Ω–∏–∫ —Ä–æ—è", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[144972] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–æ—Ö–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138971] = {
					"–ó–º–µ–π –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[141283] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[56718] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[135248] = {
					"–ë—Ä–∏–æ–Ω–∞ –ö—Ä–æ–≤–æ–∂–∞–¥–Ω–∞—è", -- [1]
					"", -- [2]
				},
				[59551] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[146910] = {
					"–ß—É–º–Ω–æ–π –≤–æ—Ä–æ–Ω –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.501960784313726, -- [1]
				0.501960784313726, -- [2]
				0.501960784313726, -- [3]
			},
			["minor_width_scale"] = 0.490000009536743,
			["health_statusbar_texture"] = "PlaterTexture",
			["dps"] = {
				["colors"] = {
					["noaggro"] = {
						0.113725490196078, -- [1]
						0.117647058823529, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.025",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "0",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.1",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateSelfTopInset"] = "0.5",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "0.4",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateSelfAlpha"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowSelf"] = "0",
				["NamePlateVerticalScale"] = "1",
			},
			["number_region_first_run"] = true,
			["patch_version"] = 6,
			["aura_height"] = 18,
			["aura_alpha"] = 0.799999952316284,
			["captured_spells"] = {
				[269279] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[263275] = {
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["npcID"] = 134012,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[271579] = {
					["npcID"] = 130661,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["encounterID"] = 2105,
				},
				[58875] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–µ—Ä–±–µ–¥–∂–∏",
					["npcID"] = 0,
				},
				[258622] = {
					["npcID"] = 129227,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["encounterID"] = 2106,
				},
				[268898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[262383] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133463,
				},
				[279885] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[225919] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[264173] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[267367] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
					["npcID"] = 130485,
				},
				[257410] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[271711] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[271456] = {
					["npcID"] = 129232,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
				},
				[109128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[259455] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—ã–Ω–∞–Ω—É—Å–∞",
					["npcID"] = 0,
				},
				[262515] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133436,
				},
				[260669] = {
					["npcID"] = 129231,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["encounterID"] = 2107,
				},
				[268904] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[259456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–π—Ç–µ–Ω",
					["npcID"] = 0,
				},
				[264178] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[228477] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[23881] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[57934] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bac√∂n-Ysondre",
					["npcID"] = 0,
				},
				[257413] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–≥–æ—Ä—É–∫",
					["npcID"] = 0,
				},
				[258627] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["npcID"] = 129802,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2106,
				},
				[258883] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[207400] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[80354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–ª—å–∫–∞–¥–æ—Ä",
					["npcID"] = 0,
				},
				[257415] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞—è–∫—ç—Ä—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[138927] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É—Å—å–∑–∞–æ–ø—É",
					["npcID"] = 0,
				},
				[262268] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133432,
				},
				[126664] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[30213] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã",
					["npcID"] = 17252,
				},
				[288330] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[3600] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏",
					["npcID"] = 2630,
				},
				[257544] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["npcID"] = 129802,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2106,
				},
				[2580] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥–∏—Ä—Ä—ç",
					["npcID"] = 0,
				},
				[162243] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[256459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ç—É–∫–ø–ø–≤–æ",
					["npcID"] = 0,
				},
				[269298] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞",
					["npcID"] = 134232,
				},
				[288844] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞",
					["npcID"] = 148716,
				},
				[77130] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[79206] = {
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2107,
				},
				[198589] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[43308] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ç—É–∫–ø–ø–≤–æ",
					["npcID"] = 0,
				},
				[247454] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[269429] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133463,
				},
				[118905] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏",
					["npcID"] = 61245,
				},
				[269302] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞",
					["npcID"] = 134232,
				},
				[210152] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[111400] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[108366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[11426] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–ª—å–∫–∞–¥–æ—Ä",
					["npcID"] = 0,
				},
				[188499] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[260103] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2107,
				},
				[783] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–µ–¥—Ä–æ–ª—ë—Ç",
					["npcID"] = 0,
				},
				[279397] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–π—Ç–µ–Ω",
					["npcID"] = 0,
				},
				[276970] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£—è–∑–≤–∏–º–æ—Å—Ç—å",
					["npcID"] = 0,
				},
				[289362] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–µ—Ç–∞",
					["npcID"] = 0,
				},
				[164547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Å–∫–∞–≥–æ–¥—Ö",
					["npcID"] = 0,
				},
				[108271] = {
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2107,
				},
				[6262] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[288981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["npcID"] = 0,
				},
				[268797] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133432,
				},
				[204598] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[209261] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[262794] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133430,
				},
				[1064] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[105174] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[262412] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
					["npcID"] = 130485,
				},
				[262540] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç",
					["npcID"] = 133593,
				},
				[185245] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[257424] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì—Ä–µ–±—ë–Ω–∫–∞",
					["npcID"] = 0,
				},
				[288091] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[271867] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["npcID"] = 129214,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[2645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[290264] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ç—É–∫–ø–ø–≤–æ",
					["npcID"] = 0,
				},
				[227723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[276212] = {
					["npcID"] = 129232,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
				},
				[259533] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2107,
				},
				[279151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[296142] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞–±–ª—É–¥—à–∞—è –¥—É—à–∞",
					["npcID"] = 148894,
				},
				[260811] = {
					["npcID"] = 129232,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
				},
				[259853] = {
					["type"] = "DEBUFF",
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["npcID"] = 129231,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2107,
				},
				[5308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[100] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[260813] = {
					["npcID"] = 129232,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
				},
				[196555] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[269831] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[158486] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ—è",
					["npcID"] = 0,
				},
				[259856] = {
					["npcID"] = 129231,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["encounterID"] = 2107,
				},
				[89751] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Zerikdhun",
					["npcID"] = 17252,
				},
				[262092] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞",
					["npcID"] = 130435,
				},
				[212653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–∞—Ä–µ–º–∞",
					["npcID"] = 0,
				},
				[185123] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[259474] = {
					["npcID"] = 129231,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["encounterID"] = 2107,
				},
				[281844] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[262554] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç",
					["npcID"] = 133593,
				},
				[30151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã",
					["npcID"] = 17252,
				},
				[263066] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì—Ä–æ—Ç–µ—Å–∫–Ω—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç",
					["npcID"] = 133345,
				},
				[268815] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞",
					["npcID"] = 133963,
				},
				[262811] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–∞–ø–ª—è-–ø–∏—è–≤–∫–∞",
					["npcID"] = 133753,
				},
				[5394] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[179057] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[260881] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ñ—Ç—ç—Ä—à–æ–∫",
					["npcID"] = 0,
				},
				[279164] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–Ω–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[262940] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–ø–ª—è-–ø–∏—è–≤–∫–∞",
					["npcID"] = 133753,
				},
				[281721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[89753] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Zerikdhun",
					["npcID"] = 17252,
				},
				[276229] = {
					["npcID"] = 141303,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "\"–ë–£–ú–ë–û–¢\"",
					["encounterID"] = 2108,
				},
				[260372] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133436,
				},
				[270481] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏—Ä–∞–Ω",
					["npcID"] = 135002,
				},
				[178740] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[263583] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["npcID"] = 134012,
				},
				[257371] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[184362] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[263074] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì—Ä–æ—Ç–µ—Å–∫–Ω—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç",
					["npcID"] = 133345,
				},
				[263202] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 130661,
				},
				[267546] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞",
					["npcID"] = 144231,
				},
				[263586] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["npcID"] = 134012,
				},
				[24858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["npcID"] = 0,
				},
				[104318] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–∏–∫–∏–π –±–µ—Å",
					["npcID"] = 55659,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[268953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[268954] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[184364] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[264689] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["npcID"] = 0,
				},
				[115008] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†—ã–ø–ø",
					["npcID"] = 0,
				},
				[268955] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[289523] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[204157] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[162264] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[268956] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[289524] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[293946] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–Ω–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[271194] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[51505] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["encounterID"] = 2105,
				},
				[273238] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[268702] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["npcID"] = 130635,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[263209] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø",
					["npcID"] = 130437,
				},
				[203720] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[245686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–Ω—Ñ–∞—Ä",
					["npcID"] = 0,
				},
				[256453] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∏–ª–ª–∏–º–∞–Ω–∂–∞—Ä–æ",
					["npcID"] = 0,
				},
				[12042] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–∞—Ä–µ–º–∞",
					["npcID"] = 0,
				},
				[165961] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—É–Ω—Ö–∞–Ω",
					["npcID"] = 0,
				},
				[108280] = {
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2106,
				},
				[190411] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[188838] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[164545] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Å–∫–∞–≥–æ–¥—Ö",
					["npcID"] = 0,
				},
				[184367] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[242551] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ä–∞–º—ç–Ω–¥–±–µ–π—Å",
					["npcID"] = 0,
				},
				[203819] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[271843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[278359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[277904] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–ª—å–∫–∞–¥–æ—Ä",
					["npcID"] = 0,
				},
				[280773] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[280204] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Å–∫–∞–≥–æ–¥—Ö",
					["npcID"] = 0,
				},
				[269090] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç",
					["npcID"] = 137029,
				},
				[53390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[29175] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–∫–∞–Ω—Ç–∏—Ä",
					["npcID"] = 0,
				},
				[192225] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ—Ä–±–∞—á—ä–µ–≤",
					["npcID"] = 0,
				},
				[265187] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[275351] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[268836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[260280] = {
					["type"] = "BUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["npcID"] = 129232,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
				[269092] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç",
					["npcID"] = 137029,
				},
				[268709] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 130661,
				},
				[271903] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["npcID"] = 129214,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[260189] = {
					["type"] = "BUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["npcID"] = 129232,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
				[267560] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–≤–∞—Ä–∏—É—Å",
					["npcID"] = 0,
				},
				[206151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[20707] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[267433] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π",
					["npcID"] = 130488,
				},
				[61295] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[263601] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["npcID"] = 134012,
				},
				[257597] = {
					["type"] = "BUFF",
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["npcID"] = 129227,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2106,
				},
				[260190] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["npcID"] = 129232,
				},
				[207685] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[260829] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–æ–≤—á–∏–π —Å–∞–º–æ–Ω–∞–≤–æ–¥—è—â–∏–π—Å—è —Ä–∞–∫–µ—Ç—ã",
					["npcID"] = 132338,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
				[204490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[289277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†—É–±—â–∏–∫–º—è—Å–∞",
					["npcID"] = 0,
				},
				[207682] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[262270] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133432,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ñ—ë—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[203981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[281744] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ª–∏—Å–∞—Ç—Ç–æ",
					["npcID"] = 0,
				},
				[279956] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[267551] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["npcID"] = 129214,
				},
				[288388] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞",
					["npcID"] = 148716,
				},
				[264761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[288644] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[273232] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[201427] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[85288] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[264057] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[260384] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ–≥–∞–∑–ª–µ—Ü",
					["npcID"] = 0,
				},
				[281621] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π",
					["npcID"] = 130488,
				},
				[105771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[290121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–æ—Ä—Ä–æ–≤",
					["npcID"] = 0,
				},
				[279902] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[268887] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[686] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[271784] = {
					["npcID"] = 138369,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§—É—Ç–±–æ–º–±–Ω—ã–π —Ö—É–ª–∏–≥–∞–Ω",
					["encounterID"] = 2105,
				},
				[268846] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è",
					["npcID"] = 136934,
				},
				[32216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[2825] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[8004] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[288333] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[95988] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§—É—á–∞–∞–π",
					["npcID"] = 0,
				},
				[261764] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ–≥–∞–∑–ª–µ—Ü",
					["npcID"] = 0,
				},
				[212799] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–∞—Ä–µ–º–∞",
					["npcID"] = 0,
				},
				[264760] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[281240] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—Ä—É–≥—Ç–∞–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[104773] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[279584] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ñ—ë—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[204021] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[203538] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∫–º–º—Ä",
					["npcID"] = 0,
				},
				[212800] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[265273] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[5672] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞",
					["npcID"] = 3527,
				},
				[73920] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[258920] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[280604] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["npcID"] = 136470,
				},
				[268854] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[203539] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–∫—Ç–∞",
					["npcID"] = 0,
				},
				[288653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[264764] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[1490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[203795] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[274346] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[292359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–±–∫–∏—É—Å",
					["npcID"] = 0,
				},
				[26297] = {
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2106,
				},
				[257420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—Ç–∞",
					["npcID"] = 0,
				},
				[7744] = {
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2107,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—Ä—É–≥—Ç–∞–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[269493] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["npcID"] = 129214,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[231390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í—ç–ª—Ä–æ–∫",
					["npcID"] = 0,
				},
				[222256] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–µ—Ä—Ä–º–∏–æ–Ω–∞",
					["npcID"] = 0,
				},
				[292361] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ–¥—Ä–æ–ª—ë—Ç",
					["npcID"] = 0,
				},
				[289423] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ—É–∂–∞–¥–æ–±—Ä–∞",
					["npcID"] = 0,
				},
				[101643] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∏—Å—Ç—Ä",
					["npcID"] = 0,
				},
				[269239] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[268856] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[280409] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[143625] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥–∏—Ä—Ä—ç",
					["npcID"] = 0,
				},
				[108446] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Zerikdhun",
					["npcID"] = 17252,
				},
				[287790] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—É–Ω—Ö–∞–Ω",
					["npcID"] = 0,
				},
				[263262] = {
					["npcID"] = 134005,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–∞–Ω—Ü–µ–µ–¥",
					["encounterID"] = 2105,
				},
				[285976] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[260838] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
				[285721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–Ω–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[255996] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["encounterID"] = 2105,
				},
				[263103] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç",
					["npcID"] = 133345,
				},
				[6789] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[85739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[30283] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[269313] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["npcID"] = 130653,
				},
				[403] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["encounterID"] = 2106,
				},
				[207744] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[280615] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[285979] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ª–∏—Å–∞—Ç—Ç–æ",
					["npcID"] = 0,
				},
				[275907] = {
					["npcID"] = 129227,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["encounterID"] = 2106,
				},
				[257582] = {
					["npcID"] = 129802,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["encounterID"] = 2106,
				},
				[266018] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[288024] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[30146] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[264774] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–∫–∞–Ω—Ç–∏—Ä",
					["npcID"] = 0,
				},
				[262347] = {
					["npcID"] = 129214,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["encounterID"] = 2105,
				},
				[285981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–Ω–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[69179] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[262348] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞",
					["npcID"] = 133482,
				},
				[260202] = {
					["npcID"] = 129232,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
				},
				[263215] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["npcID"] = 130635,
				},
				[2383] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["npcID"] = 0,
				},
				[202140] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[233375] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§—É—á–∞–∞–π",
					["npcID"] = 0,
				},
				[285472] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[251836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–Ω–∏–ø—É—Ñ",
					["npcID"] = 0,
				},
				[268865] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è",
					["npcID"] = 136934,
				},
				[198103] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[204255] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[263628] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
					["npcID"] = 130485,
				},
				[162794] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[196718] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[119914] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[97462] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["encounterID"] = 2106,
				},
				[251837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["npcID"] = 0,
				},
				[290468] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∏—Å—Ç—Ä",
					["npcID"] = 0,
				},
				[210053] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞—è–∫—ç—Ä—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[111898] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[281843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[252350] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–Ω–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[46352] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–∞—Ä–µ–º–∞",
					["npcID"] = 0,
				},
				[1459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–æ–ª—é—à–∫–∞",
					["npcID"] = 0,
				},
				[272260] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[269099] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133463,
				},
				[205146] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[119085] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–ª–æ—Ä–º—É–Ω–∫",
					["npcID"] = 0,
				},
				[270277] = {
					["type"] = "DEBUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["npcID"] = 129232,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
				[268998] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[89766] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã",
					["npcID"] = 17252,
				},
				[97463] = {
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2106,
				},
				[1719] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[277943] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[263636] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞",
					["npcID"] = 130435,
				},
				[267211] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[210320] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞—Å–∏—á–∫–∞",
					["npcID"] = 0,
				},
				[202719] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[251839] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ç—É–∫–ø–ø–≤–æ",
					["npcID"] = 0,
				},
				[215111] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–ª–æ–≤–µ—â–∏–π –æ—Ö–æ—Ç–Ω–∏–∫",
					["npcID"] = 98035,
				},
				[268362] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["npcID"] = 130653,
				},
				[171804] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–∞—Ç—Ä–∏—Å—Å–∏—è",
					["npcID"] = 0,
				},
				[288675] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[209746] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Å–∫–∞–≥–æ–¥—Ö",
					["npcID"] = 0,
				},
				[278134] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[52174] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[268810] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞",
					["npcID"] = 133963,
				},
				[263637] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞",
					["npcID"] = 130435,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–æ—Ä—Ä–æ–≤",
					["npcID"] = 0,
				},
				[277179] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[118000] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[258674] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫",
					["npcID"] = 130436,
				},
				[270661] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ–±–ª–∏–Ω—Ö–∏–ª",
					["npcID"] = 0,
				},
				[200166] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[278326] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[111771] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î—Ä–µ–∫–ª–∏–≤",
					["npcID"] = 0,
				},
				[8690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[102383] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["npcID"] = 0,
				},
				[270657] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[36213] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏",
					["npcID"] = 95072,
				},
				[256493] = {
					["type"] = "BUFF",
					["source"] = "–ê–∑–µ—Ä–∏—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–º–±–∞",
					["npcID"] = 129246,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[77472] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[57723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö—É—Ä–æ–º–∏–∫–æ",
					["npcID"] = 0,
				},
				[212048] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[98008] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[221885] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥—Ä–µ—Ü",
					["npcID"] = 0,
				},
				[268899] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[263642] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[183752] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[176151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ç–æ–∫–∞–∫–æ–∫–∞",
					["npcID"] = 0,
				},
				[187827] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[261616] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 132969,
				},
				[271526] = {
					["npcID"] = 129802,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["encounterID"] = 2106,
				},
				[287916] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–∏—Å—é–¥–∞–±–ª—è—Ç—å",
					["npcID"] = 0,
				},
				[273526] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[225080] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[257337] = {
					["npcID"] = 129214,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["encounterID"] = 2105,
				},
				[104316] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[5246] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[275398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[257593] = {
					["npcID"] = 129227,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["encounterID"] = 2106,
				},
				[204513] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[262804] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 133430,
				},
				[6552] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[285719] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Tuch-Frostwolf",
					["npcID"] = 0,
				},
				[265946] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[192058] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[280205] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞–ø–∏–≥–µ—Ä–ª",
					["npcID"] = 0,
				},
				[261602] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–æ–±–∞–ª–∏",
					["npcID"] = 0,
				},
				[280605] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["npcID"] = 136470,
				},
				[102417] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–µ–¥—Ä–æ–ª—ë—Ç",
					["npcID"] = 0,
				},
				[280602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π",
					["npcID"] = 130488,
				},
				[2983] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†—É–±—â–∏–∫–º—è—Å–∞",
					["npcID"] = 0,
				},
				[210391] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞—Å–∏—á–∫–∞",
					["npcID"] = 0,
				},
				[57724] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[198013] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[267354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞",
					["npcID"] = 134232,
				},
				[267547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["npcID"] = 129214,
				},
				[271698] = {
					["npcID"] = 129227,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["encounterID"] = 2106,
				},
				[185736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É—Å—å–∑–∞–æ–ø—É",
					["npcID"] = 0,
				},
				[195457] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–¥–∏—Å—é–¥–∞–±–ª—è—Ç—å",
					["npcID"] = 0,
				},
				[114282] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–µ–Ω—å—Ç—Ä–∏—Ç—Ä–∏",
					["npcID"] = 0,
				},
				[77762] = {
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[259161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–∫–∫–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2484] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[268712] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["npcID"] = 130653,
				},
				[260279] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
				[256739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bimbo-Dalaran",
					["npcID"] = 0,
				},
				[184092] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–±—É–ª—å–∫–∞",
					["npcID"] = 0,
				},
				[225921] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[272121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏—Ä–µ–Ω–Ω",
					["npcID"] = 0,
				},
				[260318] = {
					["npcID"] = 129232,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
				},
				[196277] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "R√°zu-TwistingNether",
					["npcID"] = 0,
				},
				[280772] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "S√∏ulight-Dalaran",
					["npcID"] = 0,
				},
				[190784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–≥—Ä–µ—Ü",
					["npcID"] = 0,
				},
				[288693] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞–º—É—á–µ–Ω–Ω–∞—è –¥—É—à–∞",
					["npcID"] = 148893,
				},
				[292653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–∫–æ—Ä–æ–≤",
					["npcID"] = 0,
				},
				[262377] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞",
					["npcID"] = 133482,
				},
				[268130] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["npcID"] = 136470,
				},
				[268905] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≤–≤–∞—Ä–∞",
					["npcID"] = 0,
				},
				[268893] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[247456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∏–ª–ª–∏–º–∞–Ω–∂–∞—Ä–æ",
					["npcID"] = 0,
				},
				[202602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–≥–æ—Ä—É–∫",
					["npcID"] = 0,
				},
				[263276] = {
					["type"] = "DEBUFF",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["npcID"] = 134012,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2105,
				},
				[113899] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–µ –≤—Ä–∞—Ç–∞",
					["npcID"] = 59262,
				},
				[276304] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞",
					["npcID"] = 136005,
				},
				[113900] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–µ –≤—Ä–∞—Ç–∞",
					["npcID"] = 59271,
				},
				[248473] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–æ—Ä–º–∞–Ω–Ω–∞",
					["npcID"] = 0,
				},
				[198837] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø",
					["npcID"] = 99541,
				},
				[268129] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["npcID"] = 136470,
				},
				[262513] = {
					["type"] = "DEBUFF",
					["source"] = "–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["npcID"] = 132056,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2108,
				},
			},
			["aura_timer"] = false,
			["plate_config"] = {
				["friendlynpc"] = {
					["big_actorname_text_size"] = 13,
					["health_incombat"] = {
						100, -- [1]
					},
					["big_actortitle_text_size"] = 13,
					["quest_enabled"] = false,
					["actorname_text_size"] = 11,
					["percent_show_percent"] = false,
					["percent_text_enabled"] = true,
				},
				["enemyplayer"] = {
					["health_incombat"] = {
						nil, -- [1]
						13, -- [2]
					},
				},
				["friendlyplayer"] = {
					["health_incombat"] = {
						nil, -- [1]
						1, -- [2]
					},
					["percent_text_ooc"] = true,
					["only_damaged"] = false,
					["actorname_use_class_color"] = true,
					["health"] = {
						nil, -- [1]
						1, -- [2]
					},
					["actorname_text_size"] = 15,
					["only_thename"] = true,
					["actorname_text_spacing"] = 14,
				},
				["enemynpc"] = {
					["power_percent_text_anchor"] = {
						["y"] = 0,
						["x"] = 0,
						["side"] = 9,
					},
					["power_percent_text_color"] = {
						0.9, -- [1]
						0.9, -- [2]
						0.9, -- [3]
						1, -- [4]
					},
					["power_percent_text_font"] = "Arial Narrow",
					["cast"] = {
						nil, -- [1]
						14, -- [2]
					},
					["power_enabled"] = true,
					["mana_incombat"] = {
						150, -- [1]
						10, -- [2]
					},
					["pvp_always_incombat"] = true,
					["castbar_enabled"] = true,
					["power_percent_text_enabled"] = true,
					["healthbar_enabled"] = true,
					["power_percent_text_outline"] = "OUTLINE",
					["y_position_offset"] = -50,
					["power_percent_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["power_percent_text_alpha"] = 1,
					["health_incombat"] = {
						nil, -- [1]
						13, -- [2]
					},
					["healthbar_color_by_hp"] = false,
					["mana"] = {
						150, -- [1]
						10, -- [2]
					},
					["healthbar_color"] = {
						0.564706, -- [1]
						0.933333, -- [2]
						0.564706, -- [3]
						1, -- [4]
					},
					["click_through"] = false,
					["power_percent_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["power_percent_text_size"] = 9,
				},
			},
			["indicator_enemyclass"] = true,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
		},
		["Default"] = {
			["tank"] = {
				["colors"] = {
					["aggro"] = {
						0, -- [1]
						0.686274509803922, -- [2]
						0.0196078431372549, -- [3]
						1, -- [4]
					},
					["nocombat"] = {
						0.301960784313726, -- [1]
						0.00392156862745098, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["anothertank"] = {
						1, -- [1]
						0, -- [2]
						0.905882352941177, -- [3]
						1, -- [4]
					},
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Color Change"] = 1,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Aura Border Color"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Unit - Important"] = 5,
				["Blink by Time Left"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 367,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1535473591,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 74,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 10);\nend\n\n\n",
					["Icon"] = 136048,
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show the energy amount above the nameplate",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1528748982,
					["PlaterCore"] = 1,
					["Name"] = "UnitPower [Plater]",
					["ScriptType"] = 3,
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 183,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1537397927,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
						260954, -- [3]
						257739, -- [4]
						257314, -- [5]
						266107, -- [6]
						257582, -- [7]
						262377, -- [8]
						257407, -- [9]
					},
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Icon"] = 1029718,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 176,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1533663248,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 553,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1535417117,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 354,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["Time"] = 1534625053,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend",
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["Desc"] = "Add the buff name in the trigger box.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Bombad£o-Azralon",
					["ScriptType"] = 2,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Name"] = "Explosion Affix M+ [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Time"] = 1540663131,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 87,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1534625053,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 359,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1535048199,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 135,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1535048441,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 149,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1535815768,
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 135996,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Icon"] = 841383,
					["Author"] = "Tecno-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["Time"] = 1543250950,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Fixate On You [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 122,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    --layout\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = 2000853,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1542816185,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \n    if (timeLeft < envTable.TimeLeftToBlink) then\n        Plater.SetNameplateColor (unitFrame, \"red\")\n    else\n        Plater.SetNameplateColor (unitFrame, \"white\")\n    end\n    \n    \n    \nend",
					["Name"] = "Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["Time"] = 1543253273,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1543680853,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["Time"] = 1547991413,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [16]
			},
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["first_run2"] = true,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 101,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the transparency of nameplates that isn't your target. You might want to disable 'Use Range Check' in the General Settings tab when using this hook.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)\n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)    \n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --stup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.4 --40%\n    envTable.AlphaTarget = 1.0 --100%\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1542481682,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 132177,
					["Name"] = "No Target Alpha [Plater]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 95,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Set a different color when a unit is targetting a Black Ox Statue",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ncpID for the black ox statue\n    envTable.OxStatusNpcID = 61146\n    \n    --the color to use in the nameplate when the unit is targetting an ox statue\n    envTable.NameplateColor = \"olive\"\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the unit target target\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    if (targetGUID) then\n        \n        --get the npcID of the target and check if the npcID is the Black Ox Status npcID\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        if (npcID == envTable.OxStatusNpcID) then\n            \n            --the unit is targetting the status, change the color of the nameplate\n            Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n        end\n    end\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1541606185,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
							[19994] = true,
							["Enabled"] = true,
						},
						["group"] = {
						},
						["class"] = {
							["MONK"] = true,
							["Enabled"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[268] = true,
							["Enabled"] = true,
						},
					},
					["Icon"] = 627607,
					["Name"] = "Attacking Monk Statue [Plater]",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 88,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1548077443,
					["PlaterCore"] = 1,
					["Name"] = "Reorder Nameplate [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 574574,
					["LastHookEdited"] = "",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133689,
					["LastHookEdited"] = "",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 135426,
					["Name"] = "Combo Points [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["Name"] = "Current Target Color [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 878211,
					["LastHookEdited"] = "",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["LastHookEdited"] = "",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["LastHookEdited"] = "",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["Name"] = "Jaina Encounter [Plater]",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 135358,
					["LastHookEdited"] = "",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["LastHookEdited"] = "",
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 239,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 1\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --auras should grow to right or left?\n    envTable.GrowDirection = \"right\" --insert 'left' to grow to the left side\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1548004596,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["LastHookEdited"] = "",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1549937733,
					["PlaterCore"] = 1,
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 136207,
					["LastHookEdited"] = "",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["Name"] = "M+ Bwonsamdi Reaping",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 2446016,
					["LastHookEdited"] = "",
				}, -- [16]
			},
			["last_news_time"] = 1543749097,
			["first_run3"] = true,
			["aura_cache_by_name"] = {
				["–∑–Ω–∞–º—è –æ—Ä–¥—ã"] = {
					61574, -- [1]
					70535, -- [2]
					77951, -- [3]
					79064, -- [4]
					81679, -- [5]
					82259, -- [6]
					86591, -- [7]
					87093, -- [8]
					133801, -- [9]
					134106, -- [10]
					135871, -- [11]
					178685, -- [12]
					178687, -- [13]
					178688, -- [14]
					178689, -- [15]
					193926, -- [16]
					270445, -- [17]
					61574, -- [18]
					70535, -- [19]
					77951, -- [20]
					79064, -- [21]
					81679, -- [22]
					82259, -- [23]
					86591, -- [24]
					87093, -- [25]
					133801, -- [26]
					134106, -- [27]
					135871, -- [28]
					178685, -- [29]
					178687, -- [30]
					178688, -- [31]
					178689, -- [32]
					193926, -- [33]
					270445, -- [34]
				},
				["–∑–Ω–∞–º—è –∞–ª—å—è–Ω—Å–∞"] = {
					61573, -- [1]
					87214, -- [2]
					133808, -- [3]
					134107, -- [4]
					178686, -- [5]
					178691, -- [6]
					178692, -- [7]
					178693, -- [8]
					61573, -- [9]
					87214, -- [10]
					133808, -- [11]
					134107, -- [12]
					178686, -- [13]
					178691, -- [14]
					178692, -- [15]
					178693, -- [16]
				},
				["–º–æ—â—å –ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–∞"] = {
					206150, -- [1]
					206150, -- [2]
				},
				["—Å–∏–º–±–∏–æ—Ç –≥'—É—É–Ω–∞"] = {
					277242, -- [1]
					277261, -- [2]
					277264, -- [3]
					277566, -- [4]
				},
			},
			["hook_auto_imported"] = {
				["Blockade Encounter"] = 1,
				["Reorder Nameplate"] = 3,
				["Dont Have Aura"] = 1,
				["Monk Statue"] = 2,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Execute Range"] = 1,
				["Jaina Encounter"] = 6,
				["Targetting Alpha"] = 3,
				["Combo Points"] = 3,
				["Extra Border"] = 2,
				["Hide Neutral Units"] = 1,
				["Players Targetting Amount"] = 4,
				["Target Color"] = 3,
				["Aura Reorder"] = 1,
				["Attacking Specific Unit"] = 1,
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["npc_cache"] = {
				[141283] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130333] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[129471] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"", -- [2]
				},
				[144286] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞–∫—Ç–∏–≤–∞–º–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[145372] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—É–Ω—ã", -- [1]
					"", -- [2]
				},
				[130621] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –ë—Ä–∞–π—Å–æ–Ω", -- [1]
					"", -- [2]
				},
				[130653] = {
					"–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137516] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏—Ü–∞ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[141285] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130334] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∑–æ—Ä–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[144160] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –ö—Ä–∞—Å–Ω–æ–∫—Ä—é–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146843] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[140839] = {
					"–î—É—Ö –≤–æ–¥—ã", -- [1]
					"", -- [2]
				},
				[130622] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –û—Ä–∞–Ω", -- [1]
					"", -- [2]
				},
				[133430] = {
					"–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134005] = {
					"–°–ª–∞–Ω—Ü–µ–µ–¥", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139690] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –≤–æ–ª–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[130335] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –∫—Ä–∏—Å—Ç–∞–ª–∏—Å–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140968] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –∫—É—Å–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[139691] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136881] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[133432] = {
					"–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139692] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —Å—Ç–∞—Ä–µ–π—à–∏–Ω–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[147932] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"", -- [2]
				},
				[140970] = {
					"–°–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[137521] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137585] = {
					"–¢–æ—Ç–µ–º —Ö–≤–∞—Ç–∫–∏ –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[147933] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"", -- [2]
				},
				[139438] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –¥—É—Ö–æ–≤ –¢–æ–≥–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[139694] = {
					"–ï–¥–∫–∏–π –ü–∞–Ω—Ü–∏—Ä—å", -- [1]
					"SarasIsland", -- [2]
				},
				[129826] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∫–ª–µ—à–Ω–µ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[145060] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"", -- [2]
				},
				[138481] = {
					"–•—Ä–æ–º–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[139695] = {
					"–®—É—Å—Ç—Ä–æ–∫–ª–µ—à–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[147935] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"", -- [2]
				},
				[140334] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"", -- [2]
				},
				[136885] = {
					"–®–∏–ø–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[133436] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[144231] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[148894] = {
					"–ó–∞–±–ª—É–¥—à–∞—è –¥—É—à–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[147936] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[140335] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"", -- [2]
				},
				[140974] = {
					"–°—Ç–∞—Ä–æ–∑–æ–±", -- [1]
					"", -- [2]
				},
				[144232] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139697] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π —à–∞–º–∞–Ω –ö–ª–∞–∫—Å–∏–∫–∞—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[147938] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[140337] = {
					"–î–µ—Ç–µ–Ω—ã—à —Ç–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç–æ–≥–æ –∫—Ä—ã–ª–∞—Ç–æ–≥–æ –∑–º–µ—è", -- [1]
					"", -- [2]
				},
				[140976] = {
					"–ß–µ—Ä–≤—å-–±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[130435] = {
					"–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132481] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136889] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –∫–æ–ª–¥—É–Ω –¢–∞–∫", -- [1]
					"", -- [2]
				},
				[139700] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —à–∞–º–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[136890] = {
					"–ñ–µ–ª–µ–∑–Ω—ã–π –û—Ä–∫–∞—Å", -- [1]
					"", -- [2]
				},
				[130436] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[128967] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146855] = {
					"–ê–∫–∏–Ω–∞", -- [1]
					"", -- [2]
				},
				[136891] = {
					"–ö–ª—ã–∫–æ–ª–æ–º –ë—ã–≤–∞–ª—ã–π", -- [1]
					"", -- [2]
				},
				[129830] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π –ö–ª–∞—Ü-–ö–ª–∞—Ü", -- [1]
					"SarasIsland", -- [2]
				},
				[132740] = {
					"–Ø–¥–æ–≤–∏—Ç–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[140980] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"", -- [2]
				},
				[132868] = {
					"–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"", -- [2]
				},
				[136190] = {
					"–¢–µ–º–Ω—ã–π —Ä–∞–∑–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[136829] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç–æ–ø–æ—Ä–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[130661] = {
					"–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[128649] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134786] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[137405] = {
					"–¶–µ–ø–∫–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[128969] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146859] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"SarasIsland", -- [2]
				},
				[142324] = {
					"–î–µ–ª—å—Ñ–∏–Ω-—Å–∏–Ω–µ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[136831] = {
					"–ó–Ω–∞—Ö–∞—Ä—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[129640] = {
					"–ó–ª–æ–±–Ω—ã–π –ø–æ—Ä—Ç–æ–≤—ã–π –ø–µ—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140792] = {
					"–°—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[129832] = {
					"–•—Ä—É—Å—Ç—è–∫", -- [1]
					"", -- [2]
				},
				[134788] = {
					"–ò–≥–ª–æ—Ö–≤–∞—Ç-—Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140984] = {
					"–ß–µ—Ä–≤—å-—Ö–ª–∞–¥–æ–±—É—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[122263] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"", -- [2]
				},
				[149352] = {
					"–Ø—Ä–∫–∏–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134214] = {
					"–ö–ª–∏–Ω–æ–∫ –ë–µ–∑–¥–Ω—ã –ö–µ–ª–µ–π–Ω", -- [1]
					"", -- [2]
				},
				[134789] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[128651] = {
					"–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[147948] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[134215] = {
					"–õ–æ—Ä–∏–Ω–∞—Å, –ë–µ–≥—É—â–∏–π –≤ —Å—É–º—Ä–∞–∫–µ", -- [1]
					"", -- [2]
				},
				[122264] = {
					"–°—Ç–∞—Ä–∞—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[138623] = {
					"–ê–º–∞—Ç–µ—Ç-–ª—É—á–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[146863] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[134216] = {
					"–¢–µ–º–Ω–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ó–∞—Ä—Ä–∞", -- [1]
					"", -- [2]
				},
				[148716] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136005] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[149355] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[146864] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–µ–º–ª–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[129802] = {
					"–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[119103] = {
					"–ß–µ—Ä–Ω—ã–π –≥–æ–ª–æ–≤–æ—Ä–µ–∑", -- [1]
					"", -- [2]
				},
				[131726] = {
					"–ì—É–Ω–Ω–æ–ª—å—Ñ –Ø—Ä–æ—Å—Ç–Ω—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[136006] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[126449] = {
					"–ò–ª–æ–ø–ª—é–π", -- [1]
					"SarasIsland", -- [2]
				},
				[144949] = {
					"–¢–µ–Ω–µ–ª—é–±–∏–≤—ã–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[131727] = {
					"–§–µ–Ω—Ä–∞ –ö–æ–≤–∞—Ä–Ω–∞—è", -- [1]
					"SarasIsland", -- [2]
				},
				[133963] = {
					"–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146866] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[135241] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131728] = {
					"–†–∞—É–ª—å –°—Ç–æ–π–∫–∏–π", -- [1]
					"SarasIsland", -- [2]
				},
				[122266] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[146867] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[131729] = {
					"–õ–∏–∫–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[132879] = {
					"–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[149359] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"", -- [2]
				},
				[145399] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥", -- [1]
					"", -- [2]
				},
				[140353] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"", -- [2]
				},
				[134796] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"", -- [2]
				},
				[123289] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–º–µ—Ä—Ç–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[131411] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[145975] = {
					"–ú–æ–ª–æ–¥–æ–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[130635] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146870] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ –û–Ω–∞–∑–∞–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[138247] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145976] = {
					"–¢–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[123290] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ç—Ä–µ—â–æ—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[136012] = {
					"–ì–æ—Ä—É—Å –ù–µ—Å–¥–≤–∏–≥–∞–µ–º—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[147957] = {
					"–ê–∑–µ—Ä–∏–∑–∞–ª–∏–¥–∞", -- [1]
					"", -- [2]
				},
				[145977] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∏–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[132755] = {
					"–ü–∞–¥–∞–ª—å—â–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[134991] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[129231] = {
					"–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[123291] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[129232] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139337] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[123292] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[138635] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –•—É—Å–∞–Ω", -- [1]
					"", -- [2]
				},
				[132056] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130638] = {
					"–ö—Ä–æ–∫–æ–ª–∏—Å–∫-–∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"", -- [2]
				},
				[138061] = {
					"–î–æ–∫–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137614] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133463] = {
					"–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138254] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139340] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[130639] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138063] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138255] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139341] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[146112] = {
					"–ß–µ—Ä–Ω–∏–ª—å–Ω–∞—è –®–∫—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[140619] = {
					"–ë–µ—Ä–µ–≥–æ–≤–æ–π —è—Ä–¥–æ–∑—É–±", -- [1]
					"", -- [2]
				},
				[126424] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –ø—Ä–∏–ª–∏–≤–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[133593] = {
					"–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[147965] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[139342] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[134807] = {
					"–î—Ä–µ–≤–Ω—è—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[134616] = {
					"–ü–æ–¥—Ä–∞—Å—Ç–∞—é—â–∏–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139343] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[134617] = {
					"–î–µ—Ç–µ–Ω—ã—à –∫—Ä–æ–ª—É—Å–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[144071] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139536] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[147968] = {
					"–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[139345] = {
					"–ö—É–ª—É –®–µ–ø–æ—Ç –°–º–µ—Ä—Ç–∏", -- [1]
					"", -- [2]
				},
				[137940] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–∞—è –∞–∫—É–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[147202] = {
					"–û–∂–∏–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"SarasIsland", -- [2]
				},
				[135258] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[135961] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135962] = {
					"–°–∫–∞–ª—å–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[139348] = {
					"–ë–∞–≥–∞ –õ–µ–¥—è–Ω–æ–π –©–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[134941] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[138838] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–±–æ–≥–æ–º–æ–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[129366] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133345] = {
					"–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137625] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137626] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[126205] = {
					"–ù–∞–∂–∏–≤-–æ-–º–∞—Ç–∏–∫", -- [1]
					"", -- [2]
				},
				[130325] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —à—É—Å—Ç—Ä—ã–π –∫—Ä–∞–±", -- [1]
					"", -- [2]
				},
				[135263] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129367] = {
					"–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131431] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", -- [1]
					"", -- [2]
				},
				[126429] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[138841] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü –≤–æ–π–Ω—ã", -- [1]
					"SarasIsland", -- [2]
				},
				[134990] = {
					"–ó–∞—Ä—è–∂–µ–Ω–Ω–∞—è –ø–µ—Å—á–∞–Ω–∞—è –¥—å—è–≤–æ–ª–∏—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[129208] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132532] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138369] = {
					"–§—É—Ç–±–æ–º–±–Ω–∞—è —Ö—É–ª–∏–≥–∞–Ω–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[129227] = {
					"–ê–∑–µ—Ä–æ–∫–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139353] = {
					"–ù–µ–∂–∏–≤–æ–π –≥–µ—Ä–æ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[134012] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138970] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"SarasIsland", -- [2]
				},
				[136643] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140631] = {
					"–°–∫–∞—Ç –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[146827] = {
					"–î–∏–∫–∞—è —Å–æ–±–∞–∫–∞", -- [1]
					"", -- [2]
				},
				[130437] = {
					"–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140609] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –º–∞–∫–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[136139] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130485] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140977] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"", -- [2]
				},
				[147225] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[140632] = {
					"–ß–µ—à—É–π—á–∞—Ç–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[146828] = {
					"–î–∏–∫–∏–π —â–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[140760] = {
					"–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"", -- [2]
				},
				[137713] = {
					"–ö—Ä–∞–±-–º–∞–≥–Ω–∞—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137029] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[129369] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140979] = {
					"–î–ª–∏–Ω–Ω–æ–∑—É–±", -- [1]
					"", -- [2]
				},
				[137716] = {
					"–î–æ–Ω–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140982] = {
					"–õ–µ–¥–æ–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[146838] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"", -- [2]
				},
				[146845] = {
					"–†–≤–∞–Ω—ã–π –î–∂–∞—Ä–µ–¥", -- [1]
					"", -- [2]
				},
				[124583] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"SarasIsland", -- [2]
				},
				[132713] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136470] = {
					"–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[133379] = {
					"–ì—é—Ä–∑–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139097] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[149344] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π —è—Ä–æ—Å—Ç—å—é –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[134602] = {
					"–°–∫—Ä—ã—Ç–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134600] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130640] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-—Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[139357] = {
					"–®–∞—Ä–∫—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[129370] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137058] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ú–∞–≥–æ–¥–∞", -- [1]
					"", -- [2]
				},
				[136483] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130488] = {
					"–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[145298] = {
					"–î–∏–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[133944] = {
					"–ê—Å–ø–∏–¥–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140827] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[148893] = {
					"–ó–∞–º—É—á–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140444] = {
					"–ú–∞—Ç–µ—Ä—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[138464] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[141938] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133482] = {
					"–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146832] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[129786] = {
					"–û–∫–µ–∞–Ω—Å–∫–∞—è –º–∞–∫—Ä—É—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[135763] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"", -- [2]
				},
				[138848] = {
					"–¢–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏ –ó–æ—Ä–ª–∞–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[129371] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–æ–≤ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138465] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145058] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"", -- [2]
				},
				[136549] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146833] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"", -- [2]
				},
				[141939] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139807] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[139360] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[124581] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–µ–ø–∫–æ—Ö–≤–∞—Ç", -- [1]
					"", -- [2]
				},
				[138466] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[138019] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140441] = {
					"–ú–æ–ª–æ–¥–æ–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[139701] = {
					"–ù–∏–∑—à–∏–π –æ–∫–µ–∞–Ω—Å–∫–∏–π –æ—Ä–∞–∫—É–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[129828] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —â–µ–ª–∫—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[146849] = {
					"–í–ª–∞–¥—ã—á–∏—Ü–∞ –¥—É—Ö–æ–≤ –†–æ–≤–µ–Ω–∞", -- [1]
					"", -- [2]
				},
				[138467] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[140447] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136934] = {
					"–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137517] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140443] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[146835] = {
					"–í—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[141495] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129372] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å —á–µ—Ä–Ω–æ–π —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136880] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[145067] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[138468] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[140983] = {
					"–•–ª–∞–¥–æ–±—É—Ä-—Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135975] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132491] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140768] = {
					"–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä", -- [1]
					"", -- [2]
				},
				[131311] = {
					"–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[135245] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129373] = {
					"–ü–æ—Ä—Ç–æ–≤—ã–π –∑–∞–≤–æ–¥—á–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138469] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π —á–µ—à—É–π—á–∞—Ç—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[137511] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129827] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∫—Ä–æ—à–∏—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[145304] = {
					"–î–∏–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[134232] = {
					"–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[128652] = {
					"–í–∏–∫'–ì–æ—Ç", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145305] = {
					"–î–∏–∫–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"", -- [2]
				},
				[141565] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138470] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"", -- [2]
				},
				[132913] = {
					"–û—Å—Ç—Ä–æ–≤–Ω–æ–π —ç—Ç—Ç–∏–Ω", -- [1]
					"", -- [2]
				},
				[129214] = {
					"–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132530] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[123146] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"SarasIsland", -- [2]
				},
				[141566] = {
					"–ö–∏—à–∫–æ–¥–µ—Ä–∫–∞ –∏–∑ –±–∞–Ω–¥—ã –†–µ–∑—á–∏–∫–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140355] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"", -- [2]
				},
				[134940] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[140973] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[142336] = {
					"–û—Å—å–º–∏–Ω–æ–∂–µ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[136882] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[136883] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à–∏–ø–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[141282] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136884] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –±–æ–µ–≤–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[130620] = {
					"–õ–µ–¥–æ–±–æ–µ—Ü –°–µ—Ä–∞—Ñ", -- [1]
					"", -- [2]
				},
				[134939] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ª—é–¥–æ–µ–¥", -- [1]
					"SarasIsland", -- [2]
				},
				[141284] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∞—è —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132744] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"", -- [2]
				},
				[149331] = {
					"–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[146840] = {
					"–°–∫–µ–ª–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[145402] = {
					"–û–¥–∏—á–∞–≤—à–∞—è –±–µ–∑—É–º–∏—Ü–∞", -- [1]
					"", -- [2]
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["captured_spells"] = {
				[269279] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263275] = {
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134012,
				},
				[271579] = {
					["encounterID"] = 2105,
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130661,
				},
				[268130] = {
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 136470,
				},
				[263276] = {
					["type"] = "DEBUFF",
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134012,
				},
				[139176] = {
					["source"] = "–í–∞–∑–≥–∞—Ä–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[79968] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61839,
				},
				[155145] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[262383] = {
					["source"] = "–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133463,
				},
				[115834] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[633] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[289467] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279503] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267367] = {
					["source"] = "–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130485,
				},
				[257410] = {
					["source"] = "–í–∞–∑–≥–∞—Ä–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255941] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[254472] = {
					["type"] = "BUFF",
					["source"] = "Froziro-TarrenMill",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[219788] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262515] = {
					["source"] = "–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133436,
				},
				[260669] = {
					["encounterID"] = 2107,
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129231,
				},
				[124682] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268904] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1022] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268905] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260734] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57934] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119381] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[258627] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["encounterID"] = 2106,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129802,
				},
				[79140] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[235313] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–º–ª–∫—Å-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[642] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270058] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256456] = {
					["source"] = "–ê—Å–ø–∏—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80354] = {
					["source"] = "–ê–Ω–¥–∂–µ–ª–∏–Ω—É—à–∫–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289349] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49998] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[60234] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288839] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257415] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259140] = {
					["source"] = "–ê–∞–¥–º–∏—Ä–∞–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[184662] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195457] = {
					["source"] = "–ö–∏–∫–º—ç–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288841] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51723] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257544] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["encounterID"] = 2106,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129802,
				},
				[262270] = {
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133432,
				},
				[290121] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269298] = {
					["source"] = "–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134232,
				},
				[288844] = {
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 148716,
				},
				[270576] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280413] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115008] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257418] = {
					["source"] = "–¢—ç–¥—ç—É–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43308] = {
					["source"] = "–ë—É–µ–Ω–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109132] = {
					["source"] = "–§–∞–π—ç—Ä–æ–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118905] = {
					["source"] = "–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61245,
				},
				[269302] = {
					["source"] = "–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134232,
				},
				[781] = {
					["source"] = "–ö—Ä–µ–π—Ä–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[111400] = {
					["source"] = "–ú–∏—Å—Ç—ç–π—Ä–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108366] = {
					["source"] = "–•–µ–ª–Ω—É—Ä–∞–∫—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257420] = {
					["source"] = "–ê—Ç—ã–Ω–∏—á–æ—Ç–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260103] = {
					["encounterID"] = 2107,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116670] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[261764] = {
					["source"] = "–ë—É–µ–Ω–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289362] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53385] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[36554] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108271] = {
					["type"] = "BUFF",
					["source"] = "–®–µ–º–∞—è",
					["encounterID"] = 2108,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288981] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268797] = {
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133432,
				},
				[55078] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262794] = {
					["source"] = "–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133430,
				},
				[262412] = {
					["source"] = "–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130485,
				},
				[262540] = {
					["source"] = "–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133593,
				},
				[1833] = {
					["encounterID"] = 2105,
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257424] = {
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271867] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129214,
				},
				[126892] = {
					["source"] = "–ú–æ—Ö–Ω–∞—Ç—ã–µ–ª–∞–ø—ã-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2645] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290264] = {
					["source"] = "–ö—É—Ä–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276212] = {
					["encounterID"] = 2108,
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129232,
				},
				[259533] = {
					["encounterID"] = 2107,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191634] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256148] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1329] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198533] = {
					["source"] = "–°—Ç–∞—Ç—É—è –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 60849,
				},
				[119611] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288989] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279153] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271105] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79977] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61840,
				},
				[33697] = {
					["type"] = "BUFF",
					["source"] = "–®–µ–º–∞—è",
					["encounterID"] = 2107,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271107] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260813] = {
					["encounterID"] = 2108,
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129232,
				},
				[279028] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262804] = {
					["source"] = "–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133430,
				},
				[188443] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279029] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279924] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268810] = {
					["source"] = "–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133963,
				},
				[262092] = {
					["source"] = "–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130435,
				},
				[108211] = {
					["source"] = "–õ—é–Ω—è—à–∫–∞-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[117952] = {
					["encounterID"] = 2108,
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[24450] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 149663,
				},
				[1856] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[220510] = {
					["source"] = "–ê—Ç—ã–Ω–∏—á–æ—Ç–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[165961] = {
					["source"] = "–ö–æ–∞–ª–µ—Å—Ü–µ–Ω—Ü–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279033] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3714] = {
					["source"] = "–õ–µ–¥–æ–∫–æ–∂–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53563] = {
					["source"] = "–õ–æ—É—Ä–∞–≥–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262554] = {
					["source"] = "–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133593,
				},
				[49028] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263066] = {
					["source"] = "–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133345,
				},
				[272903] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262811] = {
					["source"] = "–ö–∞–ø–ª—è-–ø–∏—è–≤–∫–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133753,
				},
				[260881] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279164] = {
					["source"] = "–ö—Ä–∏–æ–Ω–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[262940] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133753,
				},
				[281209] = {
					["source"] = "–ö–∞—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115175] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[11327] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186403] = {
					["source"] = "–°–∞—à–∫–∏–Ω–∞–¥–∞—à–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[224001] = {
					["source"] = "–ê—Ç—ã–Ω–∏—á–æ—Ç–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[284277] = {
					["source"] = "–≠–π–ª—à—Ç–æ—Ä–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276229] = {
					["encounterID"] = 2108,
					["source"] = "\"–ë–£–ú–ë–û–¢\"",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141303,
				},
				[156064] = {
					["source"] = "–§–∞–π—ç—Ä–æ–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260372] = {
					["source"] = "–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133436,
				},
				[242551] = {
					["source"] = "–ü–∏—Ä—Å–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[208693] = {
					["source"] = "–°–∞—à–∫–∏–Ω–∞–¥–∞—à–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263583] = {
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134012,
				},
				[58875] = {
					["source"] = "–¶—É–∑–∞–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[291944] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79976] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61840,
				},
				[293946] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏—Ä–µ–∏–¥–∞",
					["npcID"] = 0,
				},
				[24275] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[114250] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186406] = {
					["source"] = "–í–∞–≤–µ–ª–ø–æ—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["source"] = "–î—Ä–∞–Ω–∫–µ–Ω—à—Ç–µ–π–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263202] = {
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130661,
				},
				[286581] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267546] = {
					["source"] = "–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 144231,
				},
				[263586] = {
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134012,
				},
				[280412] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[24858] = {
					["source"] = "–ö–∞–±–æ–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["source"] = "–í–∞–∑–≥–∞—Ä–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256459] = {
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131347] = {
					["source"] = "–Æ–Ω–∏–≤–µ—Ä—Å–∞–ª–∏—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[259161] = {
					["source"] = "–¶—É–∑–∞–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[408] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[191837] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269429] = {
					["source"] = "–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133463,
				},
				[45181] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2094] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278736] = {
					["source"] = "–°–≤–µ–ª–æ–≥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "–ö–∞–±–æ–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271456] = {
					["encounterID"] = 2108,
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129232,
				},
				[289523] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288693] = {
					["source"] = "–ó–∞–º—É—á–µ–Ω–Ω–∞—è –¥—É—à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148893,
				},
				[260280] = {
					["type"] = "BUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129232,
				},
				[188389] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267551] = {
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129214,
				},
				[258622] = {
					["encounterID"] = 2106,
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129227,
				},
				[257597] = {
					["type"] = "BUFF",
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["encounterID"] = 2106,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129227,
				},
				[160029] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108199] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268702] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130635,
				},
				[263209] = {
					["source"] = "–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130437,
				},
				[269313] = {
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130653,
				},
				[245686] = {
					["source"] = "–¢–∑–∞–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[129597] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[43265] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[114018] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259853] = {
					["type"] = "DEBUFF",
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["encounterID"] = 2107,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129231,
				},
				[191840] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262513] = {
					["source"] = "–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133436,
				},
				[87024] = {
					["source"] = "–ë—É—Ä–∞–Ω–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81256] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[182387] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20271] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116680] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[291170] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269831] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286976] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45182] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269090] = {
					["source"] = "–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 137029,
				},
				[271698] = {
					["encounterID"] = 2106,
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129227,
				},
				[267558] = {
					["source"] = "–†–∞–π—è–Ω–∞—â–∏—Ç—É–µ—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280205] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®–∏–∫–∫–∏",
					["npcID"] = 0,
				},
				[194844] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256739] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263215] = {
					["source"] = "–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130635,
				},
				[267354] = {
					["source"] = "–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134232,
				},
				[287999] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268709] = {
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130661,
				},
				[289277] = {
					["source"] = "–¢—Ä–∏–Ω–∏–≥–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260189] = {
					["type"] = "BUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129232,
				},
				[183436] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206151] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274459] = {
					["type"] = "BUFF",
					["source"] = "–®–µ–º–∞—è",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198103] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[222695] = {
					["source"] = "–ë—Ç—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263601] = {
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134012,
				},
				[292463] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260190] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129232,
				},
				[260318] = {
					["encounterID"] = 2108,
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129232,
				},
				[260829] = {
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["encounterID"] = 2108,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 132338,
				},
				[203277] = {
					["source"] = "–ë—É—Ä–∞–Ω–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["source"] = "–ê–Ω–¥–∂–µ–ª–∏–Ω—É—à–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102417] = {
					["source"] = "–ê–∞–¥–º–∏—Ä–∞–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[154797] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É–Ω–¥–∞–ª–∏-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[267433] = {
					["source"] = "–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130488,
				},
				[281744] = {
					["source"] = "–°–∞–π–ª–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280204] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271903] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129214,
				},
				[96231] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[209858] = {
					["source"] = "–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130436,
				},
				[278296] = {
					["source"] = "–ö–æ–∞–ª–µ—Å—Ü–µ–Ω—Ü–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48792] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271526] = {
					["encounterID"] = 2106,
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129802,
				},
				[85256] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[269099] = {
					["source"] = "–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133463,
				},
				[268836] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228318] = {
					["source"] = "–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130436,
				},
				[185311] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289524] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2818] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287790] = {
					["source"] = "–ö–∞–±–æ–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188196] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2823] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271784] = {
					["encounterID"] = 2105,
					["source"] = "–§—É—Ç–±–æ–º–±–Ω—ã–π —Ö—É–ª–∏–≥–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138369,
				},
				[268846] = {
					["source"] = "–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136934,
				},
				[2825] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115310] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[21562] = {
					["source"] = "–ê—Ö—É–ª–ª–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197277] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50613] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[197916] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210053] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É–±–±—É",
					["npcID"] = 0,
				},
				[264760] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281240] = {
					["source"] = "–¢—ç–¥—ç—É–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251316] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–π–∑—É–Ω–∞",
					["npcID"] = 0,
				},
				[280602] = {
					["source"] = "–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130488,
				},
				[115151] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[61999] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[35395] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195292] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[113746] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116844] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[250870] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188592] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264764] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203539] = {
					["source"] = "–•–æ–ª–∏–∫—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263103] = {
					["source"] = "–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133345,
				},
				[272940] = {
					["source"] = "–û—Ä–∏—Ö–æ—Ä–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48707] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[143625] = {
					["source"] = "–ê—Å–ø–∏—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[250871] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–∞–π–≤—É—à–∞",
					["npcID"] = 0,
				},
				[257593] = {
					["encounterID"] = 2106,
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129227,
				},
				[197919] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292361] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292360] = {
					["source"] = "–ú–∞–Ω—Ç–∏–∫–æ—Ä—É—à–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269493] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129214,
				},
				[1943] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[256493] = {
					["type"] = "BUFF",
					["source"] = "–ê–∑–µ—Ä–∏—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–º–±–∞",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129246,
				},
				[49576] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[289423] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1330] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288146] = {
					["source"] = "–ê—Å–ø–∏—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[703] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[19750] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[193641] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108446] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 17252,
				},
				[290085] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260838] = {
					["encounterID"] = 2108,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285976] = {
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228645] = {
					["source"] = "–†—É–Ω–∏—á–µ—Å–∫–æ–µ –æ—Ä—É–∂–∏–µ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 27893,
				},
				[292364] = {
					["source"] = "–ò–º–µ—Ä–∞–ª—å–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100780] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115313] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118922] = {
					["source"] = "–ö—Ä–µ–π—Ä–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267326] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203538] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—á—É–Ω–∞–º–∞—Ä—Å",
					["npcID"] = 0,
				},
				[180612] = {
					["type"] = "BUFF",
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["encounterID"] = 2105,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267327] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203975] = {
					["source"] = "–ò–º–µ—Ä–∞–ª—å–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285979] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–π–∫—É",
					["npcID"] = 0,
				},
				[290467] = {
					["source"] = "–≠–ª–µ–≤–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257582] = {
					["encounterID"] = 2106,
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129802,
				},
				[288024] = {
					["source"] = "–ò–º–µ—Ä–∞–ª—å–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131493] = {
					["source"] = "Fuzzywuzzul-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273974] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267329] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262347] = {
					["encounterID"] = 2105,
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129214,
				},
				[285981] = {
					["source"] = "–í–∞–∑–≥–∞—Ä–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206930] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267330] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260202] = {
					["encounterID"] = 2108,
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129232,
				},
				[853] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "–ö–∞–±–æ–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267331] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5277] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3408] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3409] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268865] = {
					["source"] = "–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136934,
				},
				[184575] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[262348] = {
					["source"] = "–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133482,
				},
				[263628] = {
					["source"] = "–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130485,
				},
				[280605] = {
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136470,
				},
				[231843] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251836] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[250878] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273977] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196840] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[269571] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1459] = {
					["source"] = "–ì–æ–ø–Ω–∏–∫—é—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[25771] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57994] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[251837] = {
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100784] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263637] = {
					["source"] = "–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130435,
				},
				[280604] = {
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136470,
				},
				[126462] = {
					["source"] = "–í–∞–∑–≥–∞—Ä–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281517] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193456] = {
					["source"] = "–≠—à–∫–µ—Ç—á—É–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[89798] = {
					["source"] = "–õ–æ—Ä–¥ –í–∏–∫—Ç–æ—Ä –ù–µ—Ñ–∞—Ä–∏–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 49799,
				},
				[116849] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195181] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276025] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119085] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107428] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270277] = {
					["type"] = "DEBUFF",
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["encounterID"] = 2108,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129232,
				},
				[221562] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[258674] = {
					["source"] = "–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130436,
				},
				[251839] = {
					["source"] = "–ö–∞—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195182] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268362] = {
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130653,
				},
				[245388] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270661] = {
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263636] = {
					["source"] = "–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130435,
				},
				[294935] = {
					["source"] = "–ê—Å–ø–∏—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251838] = {
					["source"] = "–¶–∞—Ä–µ–≤–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101546] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77535] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[72968] = {
					["source"] = "–ö–∞—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245389] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51399] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281621] = {
					["source"] = "–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130488,
				},
				[31224] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206931] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[81141] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8690] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[27576] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[32645] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[36213] = {
					["source"] = "–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 95072,
				},
				[267325] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290468] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®—Ç—Ä–∞—Ñ–æ—Å–ª–æ—Ç",
					["npcID"] = 0,
				},
				[57723] = {
					["source"] = "–†–∏–∫–∞—Ä–¥–æ–≥–≥–µ—Ä—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188031] = {
					["source"] = "–ê—Ç—ã–Ω–∏—á–æ—Ç–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[56222] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290469] = {
					["source"] = "–ö–∞—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279902] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[167898] = {
					["source"] = "–®–∏–Ω—Ñ—Ä–æ—Å—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278159] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–ª—É–¥—Ñ–∏—Å—Ç",
					["npcID"] = 0,
				},
				[268712] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130653,
				},
				[275907] = {
					["encounterID"] = 2106,
					["source"] = "–ê–∑–µ—Ä–æ–∫–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129227,
				},
				[231895] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287916] = {
					["source"] = "–ú–æ—Ö–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115191] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[225080] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257337] = {
					["encounterID"] = 2105,
					["source"] = "–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129214,
				},
				[51505] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77505] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255996] = {
					["encounterID"] = 2105,
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263262] = {
					["encounterID"] = 2105,
					["source"] = "–°–ª–∞–Ω—Ü–µ–µ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134005,
				},
				[115450] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268815] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133963,
				},
				[288388] = {
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 148716,
				},
				[48265] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259856] = {
					["encounterID"] = 2107,
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129231,
				},
				[192058] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[212051] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273947] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[47528] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115192] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188290] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2983] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8143] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[57724] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188035] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[268887] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20707] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—ç–π–¥—Ä–∞",
					["npcID"] = 0,
				},
				[55233] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296142] = {
					["source"] = "–ó–∞–±–ª—É–¥—à–∞—è –¥—É—à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148894,
				},
				[201641] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–µ–¥–∞–º",
					["npcID"] = 0,
				},
				[57984] = {
					["source"] = "–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 95061,
				},
				[77762] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257371] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2484] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[3600] = {
					["source"] = "–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 2630,
				},
				[260279] = {
					["encounterID"] = 2108,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277960] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260811] = {
					["encounterID"] = 2108,
					["source"] = "–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129232,
				},
				[53365] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290608] = {
					["source"] = "–ö–∞–π–∞–∑–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50842] = {
					["source"] = "–í–∞—Å–∏–ª–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8042] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286393] = {
					["source"] = "Froziro-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190784] = {
					["encounterID"] = 2105,
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202090] = {
					["source"] = "–§–∞—Å—Ç–≤—É–ª—å–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259474] = {
					["encounterID"] = 2107,
					["source"] = "–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129231,
				},
				[262377] = {
					["source"] = "–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133482,
				},
				[255937] = {
					["source"] = "Froziro-TarrenMill",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[59628] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268893] = {
					["source"] = "Sneakylynx-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256453] = {
					["source"] = "–•–æ–ª–∏–∫—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210714] = {
					["source"] = "–®–µ–º–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202602] = {
					["source"] = "–ë—Ç—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198067] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[262268] = {
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133432,
				},
				[1766] = {
					["source"] = "Sneakylynx-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257422] = {
					["source"] = "–¶–∞—Ä–µ–≤–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–≤–Ω–∏–Ω–≥",
					["npcID"] = 0,
				},
				[783] = {
					["source"] = "–¢–æ—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268129] = {
					["source"] = "–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136470,
				},
				[61882] = {
					["source"] = "–®–µ–º–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.501960784313726, -- [1]
				0.501960784313726, -- [2]
				0.501960784313726, -- [3]
			},
			["health_statusbar_texture"] = "PlaterTexture",
			["dps"] = {
				["colors"] = {
					["noaggro"] = {
						0.113725490196078, -- [1]
						0.117647058823529, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateSelfTopInset"] = "0.79",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.15",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateShowSelf"] = "0",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateSelfScale"] = "1.0",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateSelfAlpha"] = "0.75",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowAll"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateGlobalScale"] = "1.0",
				["NamePlateVerticalScale"] = "1",
			},
			["minor_width_scale"] = 0.490000009536743,
			["number_region_first_run"] = true,
			["patch_version"] = 6,
			["aura_alpha"] = 0.799999952316284,
			["aura_height"] = 18,
			["aura_timer"] = false,
			["plate_config"] = {
				["enemynpc"] = {
					["cast"] = {
						nil, -- [1]
						14, -- [2]
					},
					["health_incombat"] = {
						nil, -- [1]
						13, -- [2]
					},
				},
				["enemyplayer"] = {
					["health_incombat"] = {
						nil, -- [1]
						13, -- [2]
					},
				},
				["friendlyplayer"] = {
					["percent_text_ooc"] = true,
					["only_damaged"] = false,
					["health"] = {
						nil, -- [1]
						1, -- [2]
					},
					["actorname_text_size"] = 15,
					["health_incombat"] = {
						nil, -- [1]
						1, -- [2]
					},
					["actorname_text_spacing"] = 14,
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 15,
					["actorname_text_size"] = 11,
					["percent_text_enabled"] = true,
					["all_names"] = true,
					["quest_enabled"] = false,
					["big_actortitle_text_size"] = 15,
					["health_incombat"] = {
						100, -- [1]
					},
					["percent_show_percent"] = false,
					["only_names"] = false,
					["relevance_state"] = 4,
				},
			},
			["indicator_enemyclass"] = true,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
		},
		["MainProfile"] = {
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 367,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1535473591,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 74,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Author"] = "Celian-Sylvanas",
					["ScriptType"] = 3,
					["Desc"] = "Show the energy amount above the nameplate",
					["Name"] = "UnitPower [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1528748982,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Icon"] = 136048,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 10);\nend\n\n\n",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 183,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
						260954, -- [3]
						257739, -- [4]
						257314, -- [5]
						266107, -- [6]
						257582, -- [7]
						262377, -- [8]
						257407, -- [9]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1537397927,
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 176,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Add the debuff name in the trigger box.",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1533663248,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 553,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1535417117,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 354,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend",
					["Time"] = 1534625053,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["Time"] = 1540663131,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 87,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1534625053,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 359,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1535048199,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 135,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1535048441,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 149,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Name"] = "Unit - Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1535815768,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 841383,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 122,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \n    if (timeLeft < envTable.TimeLeftToBlink) then\n        Plater.SetNameplateColor (unitFrame, \"red\")\n    else\n        Plater.SetNameplateColor (unitFrame, \"white\")\n    end\n    \n    \n    \nend",
					["Time"] = 1542816185,
					["PlaterCore"] = 1,
					["Name"] = "Blink by Time Left [Plater]",
					["ScriptType"] = 1,
					["Icon"] = 2000853,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    --layout\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["PlaterCore"] = 1,
					["Name"] = "Color Change [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 135024,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Border Color [Plater]",
					["ScriptType"] = 1,
					["Icon"] = 133006,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["ScriptType"] = 1,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
				}, -- [16]
			},
			["aura_cache_by_name"] = {
				["–∑–Ω–∞–º—è –æ—Ä–¥—ã"] = {
					61574, -- [1]
					70535, -- [2]
					77951, -- [3]
					79064, -- [4]
					81679, -- [5]
					82259, -- [6]
					86591, -- [7]
					87093, -- [8]
					133801, -- [9]
					134106, -- [10]
					135871, -- [11]
					178685, -- [12]
					178687, -- [13]
					178688, -- [14]
					178689, -- [15]
					193926, -- [16]
					270445, -- [17]
					61574, -- [18]
					70535, -- [19]
					77951, -- [20]
					79064, -- [21]
					81679, -- [22]
					82259, -- [23]
					86591, -- [24]
					87093, -- [25]
					133801, -- [26]
					134106, -- [27]
					135871, -- [28]
					178685, -- [29]
					178687, -- [30]
					178688, -- [31]
					178689, -- [32]
					193926, -- [33]
					270445, -- [34]
				},
				["–∑–Ω–∞–º—è –∞–ª—å—è–Ω—Å–∞"] = {
					61573, -- [1]
					87214, -- [2]
					133808, -- [3]
					134107, -- [4]
					178686, -- [5]
					178691, -- [6]
					178692, -- [7]
					178693, -- [8]
					61573, -- [9]
					87214, -- [10]
					133808, -- [11]
					134107, -- [12]
					178686, -- [13]
					178691, -- [14]
					178692, -- [15]
					178693, -- [16]
				},
				["–º–æ—â—å –ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–∞"] = {
					206150, -- [1]
					206150, -- [2]
				},
				["—Å–∏–º–±–∏–æ—Ç –≥'—É—É–Ω–∞"] = {
					277242, -- [1]
					277261, -- [2]
					277264, -- [3]
					277566, -- [4]
				},
			},
			["plate_config"] = {
				["friendlyplayer"] = {
					["actorname_use_class_color"] = true,
					["only_damaged"] = false,
					["actorname_text_size"] = 15,
					["actorname_text_spacing"] = 14,
					["health_incombat"] = {
						nil, -- [1]
						1, -- [2]
					},
					["health"] = {
						nil, -- [1]
						1, -- [2]
					},
					["only_thename"] = true,
					["percent_text_ooc"] = true,
				},
				["enemynpc"] = {
					["cast"] = {
						nil, -- [1]
						14, -- [2]
					},
					["health_incombat"] = {
						nil, -- [1]
						13, -- [2]
					},
				},
				["enemyplayer"] = {
					["health_incombat"] = {
						nil, -- [1]
						13, -- [2]
					},
				},
				["friendlynpc"] = {
					["big_actortitle_text_size"] = 13,
					["percent_show_percent"] = false,
					["actorname_text_size"] = 11,
					["big_actorname_text_size"] = 13,
					["quest_enabled"] = false,
					["health_incombat"] = {
						100, -- [1]
					},
					["percent_text_enabled"] = true,
				},
			},
			["first_run2"] = true,
			["npc_cache"] = {
				[138972] = {
					"–û–±–ª–∞—á–Ω—ã–π —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[135903] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[126451] = {
					"–ö–ª–µ—à–Ω–µ–¥—Ä–æ–±", -- [1]
					"SarasIsland", -- [2]
				},
				[146650] = {
					"–ß–∞—Å–æ–≤–∞—è-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[126963] = {
					"–ì–≤–∏–Ω–¥—Ä–∞ –ì—Ä–æ–º–æ–≤–æ–π –ú–æ–ª–æ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[133345] = {
					"–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136160] = {
					"–ö–æ—Ä–æ–ª—å –î–∞–∑–∞—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[145372] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—É–Ω—ã", -- [1]
					"", -- [2]
				},
				[138464] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[147932] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"", -- [2]
				},
				[131812] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[146653] = {
					"–ü—Ä–æ—Å–ª–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140768] = {
					"–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä", -- [1]
					"", -- [2]
				},
				[147933] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"", -- [2]
				},
				[138466] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140769] = {
					"–ó–æ–ª–æ—Ç–∞—è –ñ–∏–ª–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[127477] = {
					"–ú–æ—Ä—Å–∫–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138467] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[134629] = {
					"–ß–µ—à—É–π—á–∞—Ç—ã–π –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –∫—Ä–æ–ª—É—Å–∫–µ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[141282] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[147935] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"", -- [2]
				},
				[140259] = {
					"–ö—Ä—É–ø–Ω—ã–π —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[138468] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[416] = {
					"Volrot", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[417] = {
					"Pryynum", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[147936] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[140260] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[146657] = {
					"–ß–∞—Å–æ–≤–æ–π-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136934] = {
					"–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[141284] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –ø—Ä–∏–ª–∏–≤–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131817] = {
					"–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138470] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"", -- [2]
				},
				[145123] = {
					"–ú–∏–∞—Ä–∞ –ü–µ—Å–Ω—è –ù–æ—á–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[141285] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[147938] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[131818] = {
					"–ú–µ—á–µ–Ω–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[132074] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö—Ä–∏–∫—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[11661] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[131819] = {
					"–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140263] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[127480] = {
					"–ñ–∞–ª—è—â–∏–π –ø–∞—Ä–∞–∑–∏—Ç", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[131821] = {
					"–ë–µ–∑–ª–∏–∫–∞—è –¥–µ–≤–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140777] = {
					"–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[126969] = {
					"–¢—Ä–æ—Ç–∞–∫", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140266] = {
					"–ö–æ–ª–æ—Ç—ã–π –†–æ–≥", -- [1]
					"", -- [2]
				},
				[134893] = {
					"–ü–∞—É–∫-–∂–µ–ª–µ–∑–Ω–æ–ø—É—Ç", -- [1]
					"", -- [2]
				},
				[131311] = {
					"–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[131823] = {
					"–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134894] = {
					"–ñ–µ–ª–µ–∑–Ω–æ–ø—É—Ç-—Ç–∫–∞—á", -- [1]
					"", -- [2]
				},
				[135406] = {
					"–û–∂–∏–≤—à–µ–µ –∑–æ–ª–æ—Ç–æ", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131824] = {
					"–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[127482] = {
					"–°—Ç–æ—á–Ω—ã–π –∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[134895] = {
					"–ñ–µ–ª–µ–∑–Ω–æ–ø—É—Ç-–ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[131825] = {
					"–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[133361] = {
					"–ò–∑–Ω—É—Ä–µ–Ω–Ω—ã–π —Å–ª—É–≥–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[129786] = {
					"–û–∫–µ–∞–Ω—Å–∫–∞—è –º–∞–∫—Ä—É—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[130298] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"", -- [2]
				},
				[138224] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –°–≤–µ—Ç–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134898] = {
					"–Ø–¥–æ–∫–ª—ã–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[147948] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[137969] = {
					"–ü–æ–≥—Ä–µ–±–∞–ª—å–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[127484] = {
					"–î–∂–µ—Å –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[148716] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134899] = {
					"–Ø–¥–æ–∫–ª—ã–∫-—Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[137458] = {
					"–ì–Ω–∏—é—â–∞—è —Å–ø–æ—Ä–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[130299] = {
					"–ö–∞–ø–ª—è", -- [1]
					"", -- [2]
				},
				[134388] = {
					"–ö–ª—É–±–æ–∫ –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[126845] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∂–æ–ª–ª–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[131318] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[127485] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[134389] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[129788] = {
					"–ú—è—Å–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[137204] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[137716] = {
					"–î–æ–Ω–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134390] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134902] = {
					"–¢–µ–Ω–µ–ø–ª–µ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[127486] = {
					"–û—Ñ–∏—Ü–µ—Ä –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[134903] = {
					"–ò—Å—Ç–æ—â–∞—é—â–∏–π —É–∂–∞—Å", -- [1]
					"", -- [2]
				},
				[142324] = {
					"–î–µ–ª—å—Ñ–∏–Ω-—Å–∏–Ω–µ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[134904] = {
					"–¢–µ–º–Ω–æ–ª–æ–≤", -- [1]
					"", -- [2]
				},
				[134137] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å —Ö—Ä–∞–º–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[126848] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –Æ–¥–æ—Ä–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[133627] = {
					"–¢–∞–ª–ª–∏ –ë—ã—Å—Ç—Ä–æ—Ü–∞–ø", -- [1]
					"", -- [2]
				},
				[127488] = {
					"–ú–∞–≥ –æ–≥–Ω—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138489] = {
					"–¢–µ–Ω—å –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140792] = {
					"–°—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[139001] = {
					"–í–µ–¥–º–µ–¥—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[147957] = {
					"–ê–∑–µ—Ä–∏–∑–∞–ª–∏–¥–∞", -- [1]
					"", -- [2]
				},
				[146678] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–µ –¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139002] = {
					"–¢–æ—Ç–µ–º–∏—Å—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[145399] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥", -- [1]
					"", -- [2]
				},
				[140794] = {
					"–ö–æ–≥—Ç–µ—à—Ä–∞–º", -- [1]
					"", -- [2]
				},
				[139003] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[140795] = {
					"–ú—Ä–∞—á–Ω—ã–π –ö—Ä—É–∂–∞—á", -- [1]
					"", -- [2]
				},
				[139004] = {
					"–®–∞–º–∞–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[127106] = {
					"–û—Ñ–∏—Ü–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127490] = {
					"–†—ã—Ü–∞—Ä—å-–∫–∞–ø–∏—Ç–∞–Ω –í–∞–ª–∏—Ä–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138493] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[132864] = {
					"–ú–æ–ª–æ–¥–æ–π –∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"", -- [2]
				},
				[135167] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131585] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134144] = {
					"–ñ–∏–≤–æ–π –ø–æ—Ç–æ–∫", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[134912] = {
					"–õ–∏–ª–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[141565] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131586] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –±–∞–Ω–∫–µ—Ç–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140798] = {
					"–°–∫–∞–ª–æ–∫–∞—Ä", -- [1]
					"", -- [2]
				},
				[139007] = {
					"–î–∏–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[135169] = {
					"–¢–æ—Ç–µ–º –ø–æ–≥–ª–æ—â–µ–Ω–∏—è –¥—É—Ö–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[141566] = {
					"–ö–∏—à–∫–æ–¥–µ—Ä –∏–∑ –±–∞–Ω–¥—ã –†–µ–∑—á–∏–∫–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131587] = {
					"–ó–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140799] = {
					"–í–µ—Ç—Ä–æ–ª–æ–≤", -- [1]
					"", -- [2]
				},
				[139008] = {
					"–î—Ä–µ–≤–Ω–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[137473] = {
					"–ö–∞–ø–∏—Ç–∞–Ω —Å—Ç—Ä–∞–∂–∏ –ê—Ç—É", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138497] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—à—É–µ–∫–ª—è—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[140800] = {
					"–û–±–ª–∞—á–Ω–æ–∫—Ä—ã–ª –ü–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[132868] = {
					"–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"", -- [2]
				},
				[137474] = {
					"–ö–æ—Ä–æ–ª—å –¢–∏–º–∞–ª–¥–∂–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[130307] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ç–∞–π—Ñ—É–Ω", -- [1]
					"", -- [2]
				},
				[130435] = {
					"–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[142336] = {
					"–û—Å—å–º–∏–Ω–æ–∂–µ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[139010] = {
					"–°–≤–∏—Ä–µ–ø—ã–π –æ—Å—Ç—Ä–æ–∫–æ–≥–æ—Ç—å", -- [1]
					"", -- [2]
				},
				[139011] = {
					"–î–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[131847] = {
					"–ì—É–ª—è–∫–∞ –∏–∑ –¥–æ–º–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134150] = {
					"–†–µ–∑—á–∏–∫ —Ä—É–Ω –°–æ—Ä–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139012] = {
					"–î–∏–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[147968] = {
					"–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[137989] = {
					"–ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140292] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"", -- [2]
				},
				[138501] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[146945] = {
					"–ö–ª—É–±—è—â–µ–µ—Å—è –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139013] = {
					"–ë–µ—à–µ–Ω—ã–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"", -- [2]
				},
				[139269] = {
					"–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[137478] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –£–∞—Å–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131849] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140293] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"", -- [2]
				},
				[147202] = {
					"–û–∂–∏–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"SarasIsland", -- [2]
				},
				[126983] = {
					"–ö—Ä–∞—Å–∞–≤—á–∏–∫ –•–∞—Ä–ª–∞–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127111] = {
					"–ë–æ–µ—Ü –Ω–∞ –≤–µ—Å–ª–∞—Ö –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140038] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π —É–≥–æ—Ä—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138247] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139015] = {
					"–î–∏–∫–∏–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"", -- [2]
				},
				[140295] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[136713] = {
					"–†–∞–±–æ—Ç–Ω–∏–∫ —Å –Ω–∞–≥–æ—Ä—å—è –ê—Ä–∞—Ç–∏", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[143622] = {
					"–î–∏–∫–∏–π –±–µ—Å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[123146] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"SarasIsland", -- [2]
				},
				[139017] = {
					"–ë—É–π–Ω–æ–≥—Ä–∏–≤", -- [1]
					"", -- [2]
				},
				[139529] = {
					"–ú—É–∫–ª–∞–π", -- [1]
					"", -- [2]
				},
				[140297] = {
					"–ù–æ–∫-–∞—Ä–∞–∫", -- [1]
					"", -- [2]
				},
				[139530] = {
					"–ó–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω–æ–ª–æ–º", -- [1]
					"", -- [2]
				},
				[145927] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥ –≠–ª–ª–∞–Ω–∞", -- [1]
					"", -- [2]
				},
				[134157] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139019] = {
					"–ò–≥–ª–æ–≥—Ä–∏–≤", -- [1]
					"", -- [2]
				},
				[137484] = {
					"–ö–æ—Ä–æ–ª—å –ê'–∞–∫—É–ª", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[134158] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138508] = {
					"–í–æ—Ä—Ç–∞–∫—Å –ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[132879] = {
					"–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[137485] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π –∫—Ä–æ–≤—å—é —à–ø–∏–æ–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146185] = {
					"–û–≥–Ω–µ–∂–∞–ª-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[137486] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ü–∞—Ç–ª–∞–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138254] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[2630] = {
					"–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[137487] = {
					"–û—Ö–æ—Ç–Ω–∏—á–∏–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131858] = {
					"–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138255] = {
					"–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134417] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[129802] = {
					"–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139023] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π –ö—Ä–æ–≤–æ–∑–µ–≤", -- [1]
					"", -- [2]
				},
				[126092] = {
					"–ì–ª–∞–¥–∏–∞—Ç–æ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[134418] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[137233] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139536] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[78116] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[129547] = {
					"–ö–∞—Å—Ç–µ—Ç–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139025] = {
					"–õ—É–Ω–Ω–∞—è –ü–µ—Å–Ω—å", -- [1]
					"", -- [2]
				},
				[139537] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–∫—É–Ω—å—á—É–Ω", -- [1]
					"", -- [2]
				},
				[135699] = {
					"–¢—é—Ä–µ–º—â–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[128652] = {
					"–í–∏–∫'–ì–æ—Ç", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132885] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"", -- [2]
				},
				[139538] = {
					"–°—Ç–µ–Ω–æ–ª–æ–º –•–∞'–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[129548] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[127757] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[126094] = {
					"–í–æ–ª–Ω–æ–≥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[131863] = {
					"–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[132887] = {
					"–î–µ—Ç–µ–Ω—ã—à —Å–º–µ—Ä—Ç–µ–∂–∞–ª–∞", -- [1]
					"", -- [2]
				},
				[139284] = {
					"–ß—É–º–Ω–æ–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[131864] = {
					"–ì–æ—Ä–∞–∫ –¢—É–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136214] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Å –≤–µ—Ç—Ä–∞–º–∏ –•–µ–ª–¥–∏—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[136470] = {
					"–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134935] = {
					"–ú–∞—Ç—å –í–∏—à–∏—Å", -- [1]
					"", -- [2]
				},
				[137238] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏–∫ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[126095] = {
					"–í—É–ª–∏—Å—Å", -- [1]
					"", -- [2]
				},
				[133912] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[151056] = {
					"–í–∞—Ä–∞–Ω–∫'—É–ª –ú–æ–≥—É—á–∏–π", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135192] = {
					"–ü–æ—á–∏—Ç–∞–µ–º—ã–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[127119] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129550] = {
					"–¢–∏—Ö–æ–ª–∞–ø–∫–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136984] = {
					"–†–µ–±–∞–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139799] = {
					"–£—á–µ–Ω–∏–∫ –ê–π—Ä–æ–Ω—Ö–∞–ª–ª–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135961] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[151058] = {
					"–ë—É—Ä–ª—è—â–∞—è –∫—Ä–æ–≤—å", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139800] = {
					"–£—á–µ–Ω–∏–∫ –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü—ã —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135962] = {
					"–°–∫–∞–ª—å–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[151059] = {
					"–í–µ—á–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[134939] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ª—é–¥–æ–µ–¥", -- [1]
					"SarasIsland", -- [2]
				},
				[133660] = {
					"\"–ë–æ–º-–±–æ—Ç 9000\"", -- [1]
					"", -- [2]
				},
				[135963] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[134940] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135964] = {
					"–ì—Ä–µ–º—è—â–∏–π –∑–µ–º–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"", -- [2]
				},
				[134173] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140826] = {
					"–î—É—Ö-—á–µ—Ä—Ç–æ–ø–æ–ª–æ—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134941] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[134174] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140827] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134942] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É—á–æ–∫", -- [1]
					"", -- [2]
				},
				[139804] = {
					"–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[147225] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[137246] = {
					"–û—Å–∞–¥–Ω–∞—è –º–∞—à–∏–Ω–∞ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139805] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"", -- [2]
				},
				[136735] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139806] = {
					"–í–∑—Ä—ã–≤–æ—Ç–µ—Ö–Ω–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[136224] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139807] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[127124] = {
					"–û—Ñ–∏—Ü–∏–∞–Ω—Ç–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139808] = {
					"–î—É–±–æ–ª–æ–º –∏–∑ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[134691] = {
					"–ù–∞—ç–ª–µ–∫—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ä–≤–∏—à", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139809] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—é –∞–∫—Ç–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[135971] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫-–Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[136483] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[151068] = {
					"–ì–æ–ª–æ–≤–æ–Ω–æ–≥–∏–π –∂—Ä–µ—Ü –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135204] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –∂—Ä–µ—Ü-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139810] = {
					"–ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–≤–µ–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[144160] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –ö—Ä–∞—Å–Ω–æ–∫—Ä—é–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134437] = {
					"–†–æ–±–æ—Ç-–ª–µ–∫–∞—Ä—å", -- [1]
					"", -- [2]
				},
				[140834] = {
					"–°–º–µ—é—â–µ–µ—Å—è –ø–ª–∞–º—è", -- [1]
					"SarasIsland", -- [2]
				},
				[139811] = {
					"–ü–æ–º–æ—â–Ω–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞", -- [1]
					"", -- [2]
				},
				[140067] = {
					"–†—ã–∂–µ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"", -- [2]
				},
				[140835] = {
					"–•–∏—Ç—Ä—ã–π –æ–≥–æ–Ω–µ–∫", -- [1]
					"", -- [2]
				},
				[134950] = {
					"–£–∂–∞—Å–Ω—ã–π –ø–∞—É–∫", -- [1]
					"", -- [2]
				},
				[131112] = {
					"–ë–æ–µ—Ü –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139812] = {
					"–ü—Ä–æ–¥—é—Å–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[140068] = {
					"–†—ã–∂–µ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"", -- [2]
				},
				[130325] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —à—É—Å—Ç—Ä—ã–π –∫—Ä–∞–±", -- [1]
					"", -- [2]
				},
				[140069] = {
					"–í–æ–ª–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[137511] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139814] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è–º –•–∞–∑–∑–ª", -- [1]
					"", -- [2]
				},
				[123289] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–º–µ—Ä—Ç–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[140838] = {
					"–ó–ª–æ–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫", -- [1]
					"", -- [2]
				},
				[11665] = {
					"–õ–∞–≤–æ–≤—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[122266] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[130582] = {
					"–û—Ç—á–∞—è–≤—à–∏–π—Å—è –Ω–µ–≥–æ–¥—è–π", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[150818] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π —Å–≥—É—Å—Ç–æ–∫ –∫—Ä–æ–≤–∏", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[140839] = {
					"–î—É—Ö –≤–æ–¥—ã", -- [1]
					"", -- [2]
				},
				[123290] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ç—Ä–µ—â–æ—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[129559] = {
					"–î—É—ç–ª—è–Ω—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[125977] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[883] = {
					"–û–ª–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[123291] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[134701] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[132910] = {
					"–í–∏–∑–≥—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[137516] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏–∫ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130584] = {
					"–ö—Ä–æ–≤–æ—à–∏–ø", -- [1]
					"", -- [2]
				},
				[140843] = {
					"–î—É—Ö –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"", -- [2]
				},
				[132911] = {
					"–¢—Ä–æ–≥–≥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[135470] = {
					"–ê–∫–∞'–∞–ª–∏ –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[141867] = {
					"–ú–∞—Ç—Ä–æ—Å", -- [1]
					"", -- [2]
				},
				[133935] = {
					"–û–∂–∏–≤—à–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140077] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-—Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"", -- [2]
				},
				[137007] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[135472] = {
					"–ó–∞–Ω–∞–∑–∞–ª –ú—É–¥—Ä—ã–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140334] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"", -- [2]
				},
				[140335] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"", -- [2]
				},
				[137521] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140336] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"", -- [2]
				},
				[135475] = {
					"–ö—É–ª–∞ –ñ–∏–≤–æ–¥–µ—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140337] = {
					"–î–µ—Ç–µ–Ω—ã—à —Ç–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç–æ–≥–æ –∫—Ä—ã–ª–∞—Ç–æ–≥–æ –∑–º–µ—è", -- [1]
					"", -- [2]
				},
				[140849] = {
					"–í—Ä–µ–¥–Ω—ã–π –¥—É—Ö –∫–∞–º–Ω—è", -- [1]
					"", -- [2]
				},
				[133685] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[144944] = {
					"–ê–ª—á–Ω—ã–π –∫—Ä–æ–≤–æ—Å–æ—Å", -- [1]
					"SarasIsland", -- [2]
				},
				[132918] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[133430] = {
					"–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[135989] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[132919] = {
					"–ì–∏–≥–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[133943] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[136246] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π —Å–≤—è—â–µ–Ω–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[133432] = {
					"–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130333] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140085] = {
					"–ë–æ–ª—å—à–æ–π –µ–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[135736] = {
					"–†–≤–∞—á", -- [1]
					"", -- [2]
				},
				[140086] = {
					"–ï–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[144948] = {
					"–ö–æ–∂–µ–∫—Ä—ã–ª—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[132922] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –º—É—Ä–ª–æ–∫", -- [1]
					"", -- [2]
				},
				[130334] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∑–æ—Ä–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[140087] = {
					"–ú–æ–ª–æ–¥–∞—è –µ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[140343] = {
					"–û—Å—Ç—Ä–æ–µ –ö—Ä—ã–ª—ã—à–∫–æ", -- [1]
					"", -- [2]
				},
				[144949] = {
					"–¢–µ–Ω–µ–ª—é–±–∏–≤—ã–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[132923] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[146485] = {
					"–ù–µ–≤–∞—Ä–∞ –ù–æ—á–Ω–∞—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[133436] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130335] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –∫—Ä–∏—Å—Ç–∞–ª–∏—Å–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[140345] = {
					"–ö—Ä–∏–∫ –ë—É—Ä–∏", -- [1]
					"", -- [2]
				},
				[140857] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –≤—Å–ø–æ–ª–æ—Ö", -- [1]
					"", -- [2]
				},
				[145975] = {
					"–ú–æ–ª–æ–¥–æ–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[140858] = {
					"–û–≥–Ω–µ–≤–∏—á–æ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[145976] = {
					"–¢–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[138556] = {
					"–ù–µ—á–∏—Å—Ç—ã–π —Å–ª–∏–∑–Ω—é–∫", -- [1]
					"", -- [2]
				},
				[145977] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∏–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"", -- [2]
				},
				[138557] = {
					"–ñ–∏–≤–∞—è —Å–∫–≤–µ—Ä–Ω–∞", -- [1]
					"", -- [2]
				},
				[14465] = {
					"–ë–æ–µ–≤–æ–π —à—Ç–∞–Ω–¥–∞—Ä—Ç –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[135231] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138558] = {
					"–ë–µ–∑–ª–∏–∫–∏–π", -- [1]
					"", -- [2]
				},
				[140861] = {
					"–ü—ã–ª–µ–≤–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140094] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[138559] = {
					"–ü–æ–∑–∞–±—ã—Ç—ã–π", -- [1]
					"", -- [2]
				},
				[129826] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∫–ª–µ—à–Ω–µ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[140095] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[138560] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —É–∂–∞—Å", -- [1]
					"", -- [2]
				},
				[144957] = {
					"–®–∞–ª–∏'–∏", -- [1]
					"", -- [2]
				},
				[135234] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –º–∞—Å—Ç–∏—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140096] = {
					"–í–µ–ø—Ä—å-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[129699] = {
					"–õ—é–¥–≤–∏–≥ —Ñ–æ–Ω –¢–æ—Ä—Ç–æ–ª–ª–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129827] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∫—Ä–æ—à–∏—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135235] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140353] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"", -- [2]
				},
				[140609] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –º–∞–∫–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[140354] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"", -- [2]
				},
				[138563] = {
					"–í—É–¥–∞–∫—Å", -- [1]
					"", -- [2]
				},
				[138819] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[136005] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140355] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"", -- [2]
				},
				[124583] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"SarasIsland", -- [2]
				},
				[138820] = {
					"–í—Ä–∞–π–∫—É–ª –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[149311] = {
					"–®–∞–Ω–¥—Ä–∏—Å–∞ –û–ø–µ—Ä–µ–Ω–Ω–∞—è –õ—É–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136006] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134215] = {
					"–õ–æ—Ä–∏–Ω–∞—Å, –ë–µ–≥—É—â–∏–π –≤ —Å—É–º—Ä–∞–∫–µ", -- [1]
					"", -- [2]
				},
				[138565] = {
					"–ú–∞'–ª—É—Ç", -- [1]
					"", -- [2]
				},
				[138821] = {
					"–í–æ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135239] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140357] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138822] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏—Ü–∞ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[135240] = {
					"–°—É–±—Å—Ç–∞–Ω—Ü–∏—è –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[135496] = {
					"–ö–∞–º–∏ –®–µ—Å—Ç–µ—Ä–∏–∫—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[136264] = {
					"–ù–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–∞—è –º—É–º–∏—è", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138567] = {
					"–®–∞—Ç—Ç–æ—Ç –ö–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138823] = {
					"–°–ª–µ–¥–æ–ø—ã—Ç –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[135241] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[128551] = {
					"–ú–∞—Å—Ç–∏—Ñ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[133963] = {
					"–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140360] = {
					"–Ø—Ä–∫–∞—è –°–ø–∏–Ω–∫–∞", -- [1]
					"", -- [2]
				},
				[138569] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –í–æ—Ä'–∑—É–∫—Å", -- [1]
					"", -- [2]
				},
				[119724] = {
					"–ü—Ä–∏–ª–∏–≤–Ω—ã–π –≤–æ–ª–Ω–æ–ø–ª–µ—Å–∫", -- [1]
					"", -- [2]
				},
				[139337] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136011] = {
					"–ö–∞–º–Ω–µ–∫—Ä–æ–≤", -- [1]
					"", -- [2]
				},
				[138570] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –†–∞–∑–∑–∞–∫–∏", -- [1]
					"", -- [2]
				},
				[140106] = {
					"–°–º–µ—Ä—Ç–µ–∂–∞–ª - —Å—Ç—Ä–∞–∂ –∫–ª–∞–¥–∫–∏", -- [1]
					"", -- [2]
				},
				[138571] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –°–≤–µ—Ç–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[129832] = {
					"–•—Ä—É—Å—Ç—è–∫", -- [1]
					"", -- [2]
				},
				[135245] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131407] = {
					"–ì—Ä–æ–º–∏–ª–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[140107] = {
					"–†–∞–∑—è—â–∏–π —Å–º–µ—Ä—Ç–µ–∂–∞–ª", -- [1]
					"", -- [2]
				},
				[12259] = {
					"–ì–µ–µ–Ω–Ω–∞—Å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[134990] = {
					"–ó–∞—Ä—è–∂–µ–Ω–Ω–∞—è –ø–µ—Å—á–∞–Ω–∞—è –¥—å—è–≤–æ–ª–∏—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139340] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[131408] = {
					"–î—É–±–æ–ª–æ–º –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"", -- [2]
				},
				[140108] = {
					"–°–∫–æ—Ä–ø–∏–¥-—Å–º–µ—Ä—Ç–µ–∂–∞–ª", -- [1]
					"", -- [2]
				},
				[140620] = {
					"–•–∞—Ä–∏–±–¥–∏–¥–∞ –Æ–∂–Ω–æ–≥–æ –º–æ—Ä—è", -- [1]
					"", -- [2]
				},
				[144970] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–ª—É—á–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134991] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139341] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[135759] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[144971] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[127019] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[135760] = {
					"–ú–æ—Ä–ø–µ—Ö 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138063] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138831] = {
					"–•–æ—Ä–≤—É–ª—å–¥ –ë–∏—á –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134993] = {
					"–ú—á–∏–º–±–∞ –ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139343] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[131411] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[135761] = {
					"–ì—Ä–æ–º–æ–≤–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138064] = {
					"–ü–∞—Ñ–æ—Å–Ω–∞—è –∫—É—Ä–æ—Ä—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138576] = {
					"–ë–µ–∑–ª–∏–∫–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[144973] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134994] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138577] = {
					"–°–æ–∫—Ä—É—à–∞—é—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[134739] = {
					"–ì–æ–ª–µ–º-—á–∏—Å—Ç–∏–ª—å—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139345] = {
					"–ö—É–ª—É –®–µ–ø–æ—Ç –°–º–µ—Ä—Ç–∏", -- [1]
					"", -- [2]
				},
				[131669] = {
					"–®–∏–ø–∞—Å—Ç–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140113] = {
					"–Ø–¥–æ–∂–∞–ª", -- [1]
					"", -- [2]
				},
				[139346] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –¥—É—Ö–∞–º–∏ –ì–∞–ª–∞–Ω–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[133461] = {
					"–ñ—Ä–µ—Ü –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[131670] = {
					"–ü—Ä—è–¥–∏–ª—å—â–∏—Ü–∞ –ª–æ–∑ –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138579] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–æ–µ –∫–æ–≥—Ç–µ—â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[139347] = {
					"–ì–æ–ª–∞ –ë–µ—Ä—Å–µ—Ä–∫", -- [1]
					"", -- [2]
				},
				[135765] = {
					"–¢–æ—Ç–µ–º –ø–æ—Ç–æ–∫–æ–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138068] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139348] = {
					"–ë–∞–≥–∞ –õ–µ–¥—è–Ω–æ–π –©–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[133463] = {
					"–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146769] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138837] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –≤–∞—è—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[134232] = {
					"–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146770] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138838] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–±–æ–≥–æ–º–æ–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[140630] = {
					"–ù–∞—Ä—è–¥–Ω—ã–π –∏–≥–ª–æ–±—Ä—é—Ö", -- [1]
					"", -- [2]
				},
				[11668] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –æ–≥–Ω—è", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[140375] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Ä–æ–µ–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[140631] = {
					"–°–∫–∞—Ç –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[138840] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[149331] = {
					"–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[135258] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[135770] = {
					"–°—Ç–∞—Ä—à–∏–π —Å–µ—Ä–∂–∞–Ω—Ç –°–ª—ç–π–¥", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140376] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"", -- [2]
				},
				[140632] = {
					"–ß–µ—à—É–π—á–∞—Ç–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[138841] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü –≤–æ–π–Ω—ã", -- [1]
					"SarasIsland", -- [2]
				},
				[139097] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139353] = {
					"–ù–µ–∂–∏–≤–æ–π –≥–µ—Ä–æ–π", -- [1]
					"SarasIsland", -- [2]
				},
				[131677] = {
					"–ü–ª–µ—Ç–µ–ª—å—â–∏—Ü–∞ —Ä—É–Ω –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140377] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138842] = {
					"–¢–∞'–∫–∏–ª –£—Å–∏–ª–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[139354] = {
					"–ë—É—Ç—É–Ω –ö–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"", -- [2]
				},
				[140378] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"", -- [2]
				},
				[138843] = {
					"–í–æ–∂–∞–∫ —Ä–æ—è –°–∫—Ä–∞–∫'–∏–∫", -- [1]
					"", -- [2]
				},
				[136541] = {
					"–ñ–µ–ª—á–Ω—ã–π —Å–ª–∏–∑–Ω—é—á–µ–Ω—ã—à", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136797] = {
					"–ì–æ–ª–æ–≤–æ–ª–æ–º –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[149335] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151638] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –∑–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[136798] = {
					"–ö–æ—Å—Ç–µ–≥—Ä—ã–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[135007] = {
					"–°—Ç—Ä–∞–∂ —Å—Ñ–µ—Ä—ã", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139357] = {
					"–®–∞—Ä–∫—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[128434] = {
					"–ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[136799] = {
					"–°–∫–∞–ª–æ–ª–æ–º", -- [1]
					"", -- [2]
				},
				[138847] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∏–π –ë–æ–µ–º –ö–∞'–≤–∞–∑", -- [1]
					"", -- [2]
				},
				[17252] = {
					"AkraAshak", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[128435] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Å–∞—É—Ä–∏–¥", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[138848] = {
					"–¢–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏ –ó–æ—Ä–ª–∞–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[19459] = {
					"Ripp", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[139360] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[138849] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —É–ª—å—è –í–∏–∫—Å'–∏–∫", -- [1]
					"", -- [2]
				},
				[137058] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ú–∞–≥–æ–¥–∞", -- [1]
					"", -- [2]
				},
				[131685] = {
					"–†—É–Ω–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138338] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[131431] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", -- [1]
					"", -- [2]
				},
				[136549] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[144993] = {
					"–ë–µ—à–µ–Ω—ã–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—Ö–æ–≤—ã–π –º–µ–¥–≤–µ–¥—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136806] = {
					"–ö–∞–º–Ω–µ–º–∞–≥ –ë–∞—Ä–≥–≥", -- [1]
					"", -- [2]
				},
				[149344] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π —è—Ä–æ—Å—Ç—å—é –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[137830] = {
					"–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[130485] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136295] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[132713] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139110] = {
					"–ò—Å–∫—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[127799] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[133482] = {
					"–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136297] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[131436] = {
					"–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134251] = {
					"–°–µ–Ω–µ—à–∞–ª—å –ú'–±–∞—Ä–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[136810] = {
					"–ó–µ–º–ª–µ–≥–Ω–µ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[144231] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136811] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[137067] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[3527] = {
					"–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139626] = {
					"–£—Ç–æ–ø—à–∏–π –º–∞—Ç—Ä–æ—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[144232] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136812] = {
					"–ì–µ–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[137068] = {
					"–ö–∞–≤–∞–ª–µ—Ä–∏—Å—Ç–∫–∞ —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[151653] = {
					"–©—É–ø–∞–ª—å—Ü–µ –∏–∑ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[130488] = {
					"–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[145001] = {
					"–õ–∞–Ω–∞—Ä–∞ –õ—É–Ω–Ω—ã–π –°—É–º—Ä–∞–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138349] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[149352] = {
					"–Ø—Ä–∫–∏–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[136047] = {
					"–õ–µ–¥–æ—Å–µ—Ä–¥", -- [1]
					"", -- [2]
				},
				[134768] = {
					"–ù–µ—É—Ç–æ–º–∏–º—ã–π –ø–µ—Å–æ—á–Ω—ã–π –±–µ–≥—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[119103] = {
					"–ß–µ—Ä–Ω—ã–π –≥–æ–ª–æ–≤–æ—Ä–µ–∑", -- [1]
					"", -- [2]
				},
				[149098] = {
					"–ú–∞–π–µ–≤ –ü–µ—Å–Ω—å –¢–µ–Ω–µ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[137328] = {
					"–≠–ª–∏—Ç–Ω—ã–π –±–æ–µ—Ü –æ–∑–∞—Ä–µ–Ω–Ω—ã—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[136049] = {
					"–°–∞—Ä–≥–∞—Å—Å–∏–π", -- [1]
					"", -- [2]
				},
				[134514] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[149355] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[137585] = {
					"–¢–æ—Ç–µ–º —Ö–≤–∞—Ç–∫–∏ –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[149356] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[131445] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –±–ª–æ–∫–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[140657] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –π–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"", -- [2]
				},
				[134005] = {
					"–°–ª–∞–Ω—Ü–µ–µ–¥", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140658] = {
					"–ñ–µ—Å—Ç–∫–∞—è –®–∫—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[149358] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[141938] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130620] = {
					"–õ–µ–¥–æ–±–æ–µ—Ü –°–µ—Ä–∞—Ñ", -- [1]
					"", -- [2]
				},
				[149359] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"", -- [2]
				},
				[141939] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[129469] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"", -- [2]
				},
				[144754] = {
					"–§–∞'—Ç—É—É–ª –£—Å—Ç—Ä–∞—à–∞—é—â–∏–π", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[149360] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤–∞—è –≥–ª—ã–±–∞", -- [1]
					"", -- [2]
				},
				[130621] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –ë—Ä–∞–π—Å–æ–Ω", -- [1]
					"", -- [2]
				},
				[144755] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –ó–∞—ä–∫—Å–∞—à", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[137591] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[129470] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[129598] = {
					"–í—å—é—á–Ω—ã–π –º—É–ª –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140662] = {
					"–°—Ç–∞—Ä—ã–π –¥–ª–∏–Ω–Ω–æ–º–µ—Ö", -- [1]
					"", -- [2]
				},
				[130622] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –û—Ä–∞–Ω", -- [1]
					"", -- [2]
				},
				[129471] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"", -- [2]
				},
				[129599] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –Ω–æ–∂–µ–π –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134012] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[129600] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136828] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[136829] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç–æ–ø–æ—Ä–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[129601] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136830] = {
					"–û—Ö–æ—Ç–Ω–∏—Ü–∞ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[150136] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[140669] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"", -- [2]
				},
				[136831] = {
					"–ó–Ω–∞—Ö–∞—Ä—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"", -- [2]
				},
				[135552] = {
					"–ú–µ—á–µ–Ω–Ω—ã–π —Å–º–µ—Ä—Ç—å—é –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[150137] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[129602] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140670] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π —Å–∏–ª–∞—á", -- [1]
					"", -- [2]
				},
				[134786] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[139392] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[150139] = {
					"–ö'—Ç–∫—Å, –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –≤ –£–ª—å–¥–∏—Ä–µ", -- [2]
				},
				[138369] = {
					"–§—É—Ç–±–æ–º–±–Ω–∞—è —Ö—É–ª–∏–≥–∞–Ω–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146813] = {
					"–ì—é–Ω—Ç–µ—Ä –°–µ—Ä—ã–π", -- [1]
					"", -- [2]
				},
				[132740] = {
					"–Ø–¥–æ–≤–∏—Ç–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[139393] = {
					"C—Ç—Ä–∞–∂ –≥–Ω–µ–∑–¥–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[138626] = {
					"–ê–º–∞—Ç–µ—Ç-–ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–µ—Ü", -- [1]
					"", -- [2]
				},
				[134788] = {
					"–ò–≥–ª–æ—Ö–≤–∞—Ç-—Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[137091] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –∏–∑ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139394] = {
					"–ñ—Ä–µ—Ü —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[131974] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –í–∞–ª–µ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138627] = {
					"–ê–º–∞—Ç–µ—Ç-–∏–µ—Ä–æ—Ñ–∞–Ω—Ç", -- [1]
					"", -- [2]
				},
				[134789] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[139395] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[133510] = {
					"–ü–∞–ª–∞–¥–∏–Ω –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138628] = {
					"–ê–º–∞—Ç–µ—Ç-–∂—Ä–µ—Ü", -- [1]
					"", -- [2]
				},
				[126918] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139652] = {
					"–ë–µ—Ä–µ–≥–æ–≤–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[138629] = {
					"–í–∏–∫–∞—Ä–∏–π –î–∂–æ—Å–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[136838] = {
					"–ó–≥–æ—Ä–¥–æ –ñ–∏–≤–æ–¥–µ—Ä", -- [1]
					"", -- [2]
				},
				[139397] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[134024] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134280] = {
					"–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω", -- [1]
					"", -- [2]
				},
				[132745] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[135048] = {
					"–ó–∞–ø–∞—á–∫–∞–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é –ø–æ—Ä–æ—Å–µ–Ω–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139398] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[135816] = {
					"–ú–µ—Ä–∑–æ—Ç–µ–Ω—å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[148610] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[144772] = {
					"–õ–µ–¥–∏ –¢–∞–º–∞–∫–∏–Ω", -- [1]
					"", -- [2]
				},
				[138887] = {
					"–ú–∏—Å—Ç–∏–∫ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[135049] = {
					"–ì—Ä–æ–∑–Ω–æ–∫—Ä—ã–ª—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139399] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[139655] = {
					"–ü—Ä–æ–≤–∏–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135817] = {
					"–ó–µ—Ñ–∏—Ä", -- [1]
					"", -- [2]
				},
				[138632] = {
					"–°—Ç—Ä–∞–∂ –ê–∑—É–¥–∞", -- [1]
					"", -- [2]
				},
				[120651] = {
					"–í–∑—Ä—ã–≤—á–∞—Ç–∫–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[135050] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –í–∞–Ω–¥–µ–≥—Ä–∏–º", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[149635] = {
					"–¶–≤–µ—Ç—É—â–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139656] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135818] = {
					"–ö–ª—É–±—è—â–∏–π—Å—è —Å–æ–ª–¥–∞—Ç", -- [1]
					"", -- [2]
				},
				[136330] = {
					"–®–∏–ø—ã –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[105427] = {
					"–¢–æ—Ç–µ–º –Ω–µ–±–µ—Å–Ω–æ–π —è—Ä–æ—Å—Ç–∏", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[62005] = {
					"–ó–≤–µ—Ä—å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[139657] = {
					"–ì–∞—Ä–ø—É–Ω–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135819] = {
					"–ñ–∏–≤–æ–µ —Ç–æ—Ä–Ω–∞–¥–æ", -- [1]
					"", -- [2]
				},
				[134284] = {
					"–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134796] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"", -- [2]
				},
				[135052] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[127049] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ—É—Å–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139658] = {
					"–¢–µ–º–Ω–æ–∂–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[131726] = {
					"–ì—É–Ω–Ω–æ–ª—å—Ñ –Ø—Ä–æ—Å—Ç–Ω—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[136076] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω–æ–µ –æ–±–ª–∞–∫–æ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[144776] = {
					"–ê–π—Ä–∏–Ω –ë—ã—Å—Ç—Ä–æ–Ω–æ–≥–∞—è", -- [1]
					"", -- [2]
				},
				[143753] = {
					"–í–∞–∑—É–Ω –ì–æ–≤–æ—Ä—è—â–∏–π —Å–æ –∑–≤–µ–∑–¥–∞–º–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[131727] = {
					"–§–µ–Ω—Ä–∞ –ö–æ–≤–∞—Ä–Ω–∞—è", -- [1]
					"SarasIsland", -- [2]
				},
				[134286] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[145033] = {
					"–ü–æ–ª—è—Ä–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[133007] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139660] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[131728] = {
					"–†–∞—É–ª—å –°—Ç–æ–π–∫–∏–π", -- [1]
					"SarasIsland", -- [2]
				},
				[139661] = {
					"–î–æ–±—ã—Ç—á–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[131729] = {
					"–õ–∏–∫–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[145035] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ª–∏—Å", -- [1]
					"", -- [2]
				},
				[137103] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139662] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –¥–æ–∂–¥—è –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"", -- [2]
				},
				[148618] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –ê–Ω–¥—Ä–µ–Ω–∏–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[146827] = {
					"–î–∏–∫–∞—è —Å–æ–±–∞–∫–∞", -- [1]
					"", -- [2]
				},
				[123853] = {
					"–í–æ–ª—à–µ–±–Ω–∏—Ü–∞ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139663] = {
					"–í—è–∑–∞–ª—å—â–∏–∫ –∫–∞–º—ã—à–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[140431] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–µ–ª", -- [1]
					"", -- [2]
				},
				[146828] = {
					"–î–∏–∫–∏–π —â–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[132755] = {
					"–ü–∞–¥–∞–ª—å—â–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"", -- [2]
				},
				[129227] = {
					"–ê–∑–µ—Ä–æ–∫–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140432] = {
					"–°–∫–∞–ª—å–Ω—ã–π –ø—Ä—ã–≥—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[144782] = {
					"–ë—Ä–∞—Ç –ë—Ä—é–Ω", -- [1]
					"", -- [2]
				},
				[8889] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[136083] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[130635] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140689] = {
					"–ü–æ–ª–∑—É–Ω-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[139410] = {
					"–í–∏—Å –ë–µ—Å—à—É–º–Ω—ã–π –ö–ª–∏–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[140434] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—Ä–æ–≥", -- [1]
					"SarasIsland", -- [2]
				},
				[140690] = {
					"–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[138644] = {
					"–ö–≤–∞–ª–¥–∏—Ä-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[135830] = {
					"–Ø—Ä–æ—Å—Ç—å —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138645] = {
					"–ö–≤–∞–ª–¥–∏—Ä - —Ä–∞–∑–¥–∏—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à", -- [1]
					"SarasIsland", -- [2]
				},
				[132760] = {
					"–†–∞–≤–Ω–∏–Ω–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[145298] = {
					"–î–∏–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146834] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–º–∞–≥–∏—Å—Ç—Ä", -- [1]
					"", -- [2]
				},
				[16875] = {
					"–õ–æ—É—Ä", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139670] = {
					"–ú–æ—Ä–≥–æ–∫", -- [1]
					"", -- [2]
				},
				[134041] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[146835] = {
					"–í—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[137880] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[130638] = {
					"–ö—Ä–æ–∫–æ–ª–∏—Å–∫-–∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"", -- [2]
				},
				[138648] = {
					"–°–∏–≥—Ä–∏–¥ –¢–∫–∞—á–∏—Ö–∞ –ü–æ–∫—Ä–æ–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[126928] = {
					"–ö–æ—Ä—Å–∞—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[135322] = {
					"–ó–æ–ª–æ—Ç–æ–π –ó–º–µ–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[129231] = {
					"–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137881] = {
					"–†—ã—Ü–∞—Ä—å –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[95072] = {
					"–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[137626] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[137882] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[136347] = {
					"–£—á–µ–Ω–∏—Ü–∞ –∂—Ä–µ—Ü–æ–≤ –º–æ—Ä—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138650] = {
					"–ó–∞—Ç–µ—Ä—è–≤—à–∏–π—Å—è —Å—Ä–µ–¥–∏ –≤–æ–ª–Ω –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[145303] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[122963] = {
					"–†–µ–∑–∞–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[131486] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π —ç–∫–∑–∞—Ä—Ö –¢—É—Ä–∞–ª–∏–æ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140442] = {
					"–ú—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[138651] = {
					"–°–∏–ª—å–≤–µ—Ä–∏—è –ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –†–∏—Ñ–æ–≤", -- [1]
					"", -- [2]
				},
				[145304] = {
					"–î–∏–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[139675] = {
					"–ò—Å–∫–∞—Ç–µ–ª—å –ì–ª—É–±–∏–Ω", -- [1]
					"", -- [2]
				},
				[130640] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-—Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146840] = {
					"–°–∫–µ–ª–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[130896] = {
					"–ë–æ—á–∫–∞ —á–µ—Ä–Ω–æ–π –ø–µ–ª–µ–Ω—ã", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[145305] = {
					"–î–∏–∫–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"", -- [2]
				},
				[139676] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –≤–æ–ª–Ω–∞–º–∏ –û—Ä–º—Ä–≥", -- [1]
					"SarasIsland", -- [2]
				},
				[135838] = {
					"–ü–µ–ø–ª–æ–≤–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140444] = {
					"–ú–∞—Ç–µ—Ä—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[138653] = {
					"–•–æ—Å–≤–∏—Ä –ì–Ω–∏—é—â–∏–π –û—Å—Ç–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[135839] = {
					"–ë–æ–ª–æ—Ç–Ω—ã–π –≥–∞–∑–æ–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[137375] = {
					"–≠–∫–∑–æ—Å–∫–µ–ª–µ—Ç –æ–∑–∞—Ä–µ–Ω–Ω—ã—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139678] = {
					"–ë—Ä–µ–≥–æ—Å—Ç—É–ø", -- [1]
					"SarasIsland", -- [2]
				},
				[127315] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[146843] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"", -- [2]
				},
				[135329] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140447] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146844] = {
					"–û–ª—å—Ñ–∫—Ä–∏–≥ –ü–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[131492] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[144286] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞–∫—Ç–∏–≤–∞–º–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146845] = {
					"–†–≤–∞–Ω—ã–π –î–∂–∞—Ä–µ–¥", -- [1]
					"", -- [2]
				},
				[139425] = {
					"–ë–µ—à–µ–Ω–∞—è –Ω–∞—Å–µ–¥–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[148893] = {
					"–ó–∞–º—É—á–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[136100] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[148894] = {
					"–ó–∞–±–ª—É–¥—à–∞—è –¥—É—à–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[32517] = {
					"Hachiko", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[138660] = {
					"–¢—É–º–∞–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"", -- [2]
				},
				[135846] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[146849] = {
					"–í–ª–∞–¥—ã—á–∏—Ü–∞ –¥—É—Ö–æ–≤ –†–æ–≤–µ–Ω–∞", -- [1]
					"", -- [2]
				},
				[145058] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"", -- [2]
				},
				[139429] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≤–æ–∏–Ω", -- [1]
					"", -- [2]
				},
				[134056] = {
					"–ê–∫–≤–∞'—Å–∏—Ä—Ä", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146850] = {
					"–í–µ–ª–∏–∫–∏–π –º–∞–≥–∏—Å—Ç—Ä –£–ª—å—Ä–∏—Ö", -- [1]
					"", -- [2]
				},
				[145059] = {
					"–•–∏—Ç—Ä—ã–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[122969] = {
					"–ó–∞–Ω—á—É–ª—å—Å–∫–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[129366] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145060] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"", -- [2]
				},
				[11673] = {
					"–î—Ä–µ–≤–Ω—è—è –≥–æ–Ω—á–∞—è –Ω–µ–¥—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[126424] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –ø—Ä–∏–ª–∏–≤–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[140455] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã—á–æ–∫", -- [1]
					"", -- [2]
				},
				[146852] = {
					"–ö–æ–Ω—Ä–∞–¥ –ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[145061] = {
					"–í–∏–∑–∂–∞—â–∏–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[122970] = {
					"–ö—Ä–∞–¥—É—â–∏–π—Å—è —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[129367] = {
					"–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140456] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –º—É—Å–∫–µ–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140968] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –∫—É—Å–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[139433] = {
					"–°–µ—Å—Ç—Ä–∞ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è", -- [1]
					"", -- [2]
				},
				[134060] = {
					"–õ–æ—Ä–¥ –®—Ç–æ—Ä–º—Å–æ–Ω–≥", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140457] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä–∞—è –∫–æ—Ä–æ–≤–∞", -- [1]
					"", -- [2]
				},
				[146854] = {
					"–ß–µ—Ä–Ω–æ–ª–∞–ø–∞—è –°—Ç–µ–ª–ª–∞", -- [1]
					"", -- [2]
				},
				[134828] = {
					"–í–æ–¥–µ–Ω—ã—à", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[131246] = {
					"–ê–ª–∞–Ω–∞–∞", -- [1]
					"", -- [2]
				},
				[139690] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –≤–æ–ª–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[139946] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140458] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫", -- [1]
					"", -- [2]
				},
				[146855] = {
					"–ê–∫–∏–Ω–∞", -- [1]
					"", -- [2]
				},
				[145064] = {
					"–û–≥–æ–Ω–µ–∫", -- [1]
					"", -- [2]
				},
				[139691] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[145065] = {
					"–û–ø–µ—Ä–∏–≤—à–∏–π—Å—è —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[151739] = {
					"–ú–∞'—Ö–∞–∞—Ç –£–ø–æ—Ä–Ω—ã–π", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[122972] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∞–≤–≥—É—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[139692] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —Å—Ç–∞—Ä–µ–π—à–∏–Ω–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[129369] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134063] = {
					"–ë—Ä–∞—Ç –ê–π—Ä–æ–Ω—Ö–∞–ª–ª", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[151639] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π —á–µ—Ä–≤–∏–Ω—Ç", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[100943] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146940] = {
					"–ü—Ä–µ–¥–º–∏—Ä–Ω—ã–π –∏—Å–∫–∞–∑–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146829] = {
					"–ù–µ—Å–º–µ—Ä—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[145371] = {
					"–£—É'–Ω–∞—Ç", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[151098] = {
					"–¢–µ–º–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139949] = {
					"–ß—É–º–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130521] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[151630] = {
					"–ö–æ—à–º–∞—Ä–Ω—ã–π –≥–Ω–æ–π", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[58959] = {
					"–ì–∏–±'—Ç–æ–∫–æ", -- [1]
					"–ì–æ—Ä–Ω–∏–ª–æ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[145067] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[130437] = {
					"–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139438] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –¥—É—Ö–æ–≤ –¢–æ–≥–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[139694] = {
					"–ï–¥–∫–∏–π –ü–∞–Ω—Ü–∏—Ä—å", -- [1]
					"SarasIsland", -- [2]
				},
				[129370] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132855] = {
					"–ñ–µ–ª–µ–∑–Ω–æ–ø—É—Ç-–±—ã—Å—Ç—Ä–æ–ª–∞–ø", -- [1]
					"", -- [2]
				},
				[129214] = {
					"–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132530] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140974] = {
					"–°—Ç–∞—Ä–æ–∑–æ–±", -- [1]
					"", -- [2]
				},
				[137713] = {
					"–ö—Ä–∞–±-–º–∞–≥–Ω–∞—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[126847] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –†–∞—É–ª—å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139695] = {
					"–®—É—Å—Ç—Ä–æ–∫–ª–µ—à–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[106321] = {
					"–¢–æ—Ç–µ–º –ø–æ–ø—É—Ç–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[130522] = {
					"–ú–æ—Ä—è—á–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134914] = {
					"–ü–æ–¥–≤–∞–ª—å–Ω—ã–π –ø–∞—É–∫", -- [1]
					"", -- [2]
				},
				[146860] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136881] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[139664] = {
					"–ó–ª–æ–±–Ω–æ–ø–ª–∞–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[136044] = {
					"–Ø–¥–æ–∑—ã–±—å", -- [1]
					"", -- [2]
				},
				[127479] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ—Å–∫–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[129371] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–æ–≤ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136802] = {
					"–£–≥–ª–µ–∫—É—Å", -- [1]
					"", -- [2]
				},
				[135263] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132532] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140976] = {
					"–ß–µ—Ä–≤—å-–±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[130011] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138465] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139697] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π —à–∞–º–∞–Ω –ö–ª–∞–∫—Å–∏–∫–∞—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[142000] = {
					"–ó–ª–æ–≤–µ—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"", -- [2]
				},
				[126429] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"SarasIsland", -- [2]
				},
				[60197] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[146862] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136883] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à–∏–ø–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[134769] = {
					"–ó–∞–∑—É–±—Ä–µ–Ω–Ω–∞—è –∫–ª–µ—à–Ω—è", -- [1]
					"", -- [2]
				},
				[139442] = {
					"–¶–∑—É–∫–∞–Ω –°–ø–∏–Ω–æ–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[133557] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"", -- [2]
				},
				[129372] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å —á–µ—Ä–Ω–æ–π —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134069] = {
					"–í–æ–ª'–∑–∏—Ç –®–µ–ø—á—É—â–∞—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[143985] = {
					"–ü–æ–≥–ª–æ—â–∞—Ç–æ—Ä", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[146863] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[140978] = {
					"–°—Ç—Ä–∞—Ö–æ—Ç—É–Ω", -- [1]
					"", -- [2]
				},
				[130012] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[142587] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[131850] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –º–∞—Å—Ç–µ—Ä –≤—ã–∂–∏–≤–∞–Ω–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[129529] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[137625] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136186] = {
					"–ñ—Ä–∏—Ü–∞ –º–æ—Ä—è - —Å–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146864] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–µ–º–ª–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[136885] = {
					"–®–∏–ø–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[139188] = {
					"–°—Ç–∞–ª—å–Ω–æ–π –ú–µ—Ö", -- [1]
					"", -- [2]
				},
				[133379] = {
					"–ì—é—Ä–∑–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139700] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —à–∞–º–∞–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[129373] = {
					"–ü–æ—Ä—Ç–æ–≤–∞—è –∑–∞–≤–æ–¥—á–∏—Ü–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[132481] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139351] = {
					"–ì–ª–∞—à–∞—Ç–∞–π —Ç–µ–Ω–µ–π –ê–Ω–≥–æ–ª–æ", -- [1]
					"SarasIsland", -- [2]
				},
				[127879] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[140980] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"", -- [2]
				},
				[135764] = {
					"–í–∑—Ä—ã–≤–Ω–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139445] = {
					"–¢—É–º–∞—Ç", -- [1]
					"", -- [2]
				},
				[139701] = {
					"–ù–∏–∑—à–∏–π –æ–∫–µ–∞–Ω—Å–∫–∏–π –æ—Ä–∞–∫—É–ª", -- [1]
					"SarasIsland", -- [2]
				},
				[127048] = {
					"–ó–µ–º–ª–µ–∫–æ–ø –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ—É—Å–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139005] = {
					"–°–ª–µ–¥–æ–ø—ã—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[130653] = {
					"–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146866] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞", -- [1]
					"SarasIsland", -- [2]
				},
				[130909] = {
					"–°–º—Ä–∞–¥–Ω–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[135248] = {
					"–ë—Ä–∏–æ–Ω–∞ –ö—Ä–æ–≤–æ–∂–∞–¥–Ω–∞—è", -- [1]
					"", -- [2]
				},
				[139006] = {
					"–§—É—Ä–±–æ–ª–≥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î–∏–∫–æ–π –ì–ª—É—à–∏", -- [1]
					"", -- [2]
				},
				[135254] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139342] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[140619] = {
					"–ë–µ—Ä–µ–≥–æ–≤–æ–π —è—Ä–¥–æ–∑—É–±", -- [1]
					"", -- [2]
				},
				[134423] = {
					"–û–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146867] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"SarasIsland", -- [2]
				},
				[140982] = {
					"–õ–µ–¥–æ–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[11658] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[138061] = {
					"–î–æ–∫–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[131667] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[147965] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"", -- [2]
				},
				[138572] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –£–≤–æ—à", -- [1]
					"", -- [2]
				},
				[135763] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"", -- [2]
				},
				[131666] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140983] = {
					"–•–ª–∞–¥–æ–±—É—Ä-—Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[134283] = {
					"–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞", -- [1]
					"", -- [2]
				},
				[141495] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[128967] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138830] = {
					"–¢—Ä–æ–≤–∞—Å—Ç –í–µ–¥–æ–º—ã–π –ó–≤–µ–∑–¥–∞–º–∏", -- [1]
					"", -- [2]
				},
				[133389] = {
					"–ì–∞–ª—å–≤–∞–∑–∑—Ç", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134331] = {
					"–ö–æ—Ä–æ–ª—å –†–∞—É'–∞–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146869] = {
					"–ì—é—Ä—É–º –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"SarasIsland", -- [2]
				},
				[140984] = {
					"–ß–µ—Ä–≤—å-—Ö–ª–∞–¥–æ–±—É—Ä", -- [1]
					"SarasIsland", -- [2]
				},
				[144972] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–æ—Ö–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[139339] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"", -- [2]
				},
				[128651] = {
					"–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130087] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[136891] = {
					"–ö–ª—ã–∫–æ–ª–æ–º –ë—ã–≤–∞–ª—ã–π", -- [1]
					"", -- [2]
				},
				[130655] = {
					"–ë–æ–±–±–∏ –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[146870] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ –û–Ω–∞–∑–∞–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[140985] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"", -- [2]
				},
				[129517] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —è—â–µ—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[135246] = {
					"–õ–æ—Ç—Ç–∏ –ö–æ–ª—é—á–∫–∞", -- [1]
					"", -- [2]
				},
				[134216] = {
					"–¢–µ–º–Ω–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ó–∞—Ä—Ä–∞", -- [1]
					"", -- [2]
				},
				[140356] = {
					"–Ø—Ä–∫–∞—è –ß–µ—à—É–π–∫–∞", -- [1]
					"", -- [2]
				},
				[146833] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"", -- [2]
				},
				[138427] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[127503] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö–æ—Ä–≥–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[140986] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[129830] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π –ö–ª–∞—Ü-–ö–ª–∞—Ü", -- [1]
					"SarasIsland", -- [2]
				},
				[140691] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[132491] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130400] = {
					"–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134686] = {
					"–í–∑—Ä–æ—Å–ª—ã–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[138428] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[140678] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"", -- [2]
				},
				[136893] = {
					"–ó–µ–º–ª–µ—Ç—Ä—è—Å –ê–≥–≥–∞–Ω", -- [1]
					"", -- [2]
				},
				[134214] = {
					"–ö–ª–∏–Ω–æ–∫ –ë–µ–∑–¥–Ω—ã –ö–µ–ª–µ–π–Ω", -- [1]
					"", -- [2]
				},
				[137405] = {
					"–¶–µ–ø–∫–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138561] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –±–∏—á–µ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"", -- [2]
				},
				[135247] = {
					"–í–∞—Ä–∏–≥–≥", -- [1]
					"", -- [2]
				},
				[138846] = {
					"–Ø–Ω—Ç–∞—Ä–Ω–æ–∫—Ä—ã–ª—ã–π –ª–æ–≤–µ—Ü —É–º–∞", -- [1]
					"", -- [2]
				},
				[138429] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[146873] = {
					"–£–±–∏–π—Å—Ç–≤–µ–Ω–Ω–∞—è –±—É—Ä—è", -- [1]
					"SarasIsland", -- [2]
				},
				[140988] = {
					"–°—Ç–∞–ª–µ—Ä–µ–∑", -- [1]
					"", -- [2]
				},
				[138635] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –•—É—Å–∞–Ω", -- [1]
					"", -- [2]
				},
				[135706] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[145850] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π —Å–∞–ø–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134900] = {
					"–ü–∞—É–∫-—è–¥–æ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[136208] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π –∞—Ä–±–∞–ª–µ—Ç—á–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[146874] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–µ—Ç—Ä–æ–≤ –ú–∞—Ä–∞–π—è", -- [1]
					"", -- [2]
				},
				[148921] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140989] = {
					"–ö–æ—Å—Ç–µ—á–µ—à—É–π–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[130639] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[138646] = {
					"–ö–≤–∞–ª–¥–∏—Ä - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç—É–º–∞–Ω–æ–≤", -- [1]
					"", -- [2]
				},
				[145851] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π - –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –≥–∏–ø–ø–æ–≥—Ä–∏—Ñ–µ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140443] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[136890] = {
					"–ñ–µ–ª–µ–∑–Ω—ã–π –û—Ä–∫–∞—Å", -- [1]
					"", -- [2]
				},
				[140990] = {
					"–ö–æ—Å—Ç–µ—á–µ—à—É–π–Ω—ã–π –ø–ª–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146875] = {
					"–í–∞–ª–∏–º–æ–∫ –ó–ª–æ–≤—Ä–µ–¥–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[132802] = {
					"–ô–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"", -- [2]
				},
				[140854] = {
					"–î—É—Ö –æ—Ç–ª–∏–≤–∞", -- [1]
					"", -- [2]
				},
				[138481] = {
					"–•—Ä–æ–º–∏—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[122086] = {
					"–°—Ç–∞–ª–µ—à–∫—É—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[132892] = {
					"–í–µ—Ç—Ä–æ–ª–∏—Å—Ç", -- [1]
					"", -- [2]
				},
				[134338] = {
					"–ñ—Ä–µ—Ü –º–æ—Ä—è - –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138432] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤ –ù–µ—Å—Å–∞", -- [1]
					"", -- [2]
				},
				[146876] = {
					"–ú–∞—á–∏—Ç—É –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"", -- [2]
				},
				[140991] = {
					"–ú–æ–∑–≥–æ–ø–ª–µ—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[122263] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"", -- [2]
				},
				[146893] = {
					"–ú–∏—Å—Ç–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[136250] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[122965] = {
					"–í–æ–ª'–∫–∞–∞–ª", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[130318] = {
					"–ü—Ä–æ—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[136688] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139539] = {
					"–¢–∞–≤–æ–∫, –ú–æ–ª–æ—Ç –ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü—ã", -- [1]
					"", -- [2]
				},
				[136249] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139422] = {
					"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –∫—Ä–æ–ª—É—Å–∫–æ–≤", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139457] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ü–∏–π–ª–∏–Ω—å", -- [1]
					"", -- [2]
				},
				[126205] = {
					"–ù–∞–∂–∏–≤-–æ-–º–∞—Ç–∏–∫", -- [1]
					"", -- [2]
				},
				[127381] = {
					"–ò–ª—å–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[98035] = {
					"–ó–ª–æ–≤–µ—â–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[138434] = {
					"–í–µ–¥—å–º–∞ –±—É—Ä—å –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[136643] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140993] = {
					"–¢–µ–º–Ω–æ–ø–æ–ª–∑-–æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[124581] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–µ–ø–∫–æ—Ö–≤–∞—Ç", -- [1]
					"", -- [2]
				},
				[146838] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"", -- [2]
				},
				[146832] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[122973] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –¥—É—Ö–æ–≤–Ω–∏–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[122264] = {
					"–°—Ç–∞—Ä–∞—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[140979] = {
					"–î–ª–∏–Ω–Ω–æ–∑—É–±", -- [1]
					"", -- [2]
				},
				[146112] = {
					"–ß–µ—Ä–Ω–∏–ª—å–Ω–∞—è –®–∫—É—Ä–∞", -- [1]
					"", -- [2]
				},
				[133944] = {
					"–ê—Å–ø–∏–¥–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[135365] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ê–ª—å–º–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139459] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"", -- [2]
				},
				[122088] = {
					"–¢–∏—Ö–æ—Å—Ç—É–ø –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[130404] = {
					"–ö—Ä—ã—Å–æ–ª–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[122984] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[132807] = {
					"–¶–∏–π–ª–∏–Ω—å –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[146880] = {
					"–ì–æ–ª–≤—Ä–∞–Ω –ó–∞–≥–∞–¥–æ—á–Ω—ã–π", -- [1]
					"", -- [2]
				},
				[140995] = {
					"–†—É–∏–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[135366] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139460] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ç–∫–∞—á –∑–µ–º–ª–∏", -- [1]
					"", -- [2]
				},
				[129526] = {
					"–ú–æ—Ä—è—á–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146890] = {
					"–†—É–Ω–æ–º–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[138888] = {
					"–í–æ—Ä–æ–∂–µ–π –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"", -- [2]
				},
				[138437] = {
					"–°–∑–µ—Ä–∏—Å –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146881] = {
					"–í–µ–¥—É–Ω –ë—Ä–∏–Ω–≤—É–ª—å—Ñ", -- [1]
					"", -- [2]
				},
				[140264] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[132797] = {
					"–ï–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"", -- [2]
				},
				[139461] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–∫–∞–ª–æ–≥—Ä—ã–∑", -- [1]
					"", -- [2]
				},
				[122089] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[131785] = {
					"–ñ—É–∂–∂–∞—â–∏–π —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[130661] = {
					"–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136391] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134600] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[136882] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[136884] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –±–æ–µ–≤–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[139462] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≥–ª–∏–Ω–æ—á–µ—Ç", -- [1]
					"", -- [2]
				},
				[137395] = {
					"–û–ø—ã—Ç–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[144842] = {
					"–ü—Ä–∏–±—Ä–µ–∂–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[129758] = {
					"–ì—Ä–µ–Ω–∞–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[131383] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[129527] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[143011] = {
					"–ü–µ—Å–æ—á–Ω—ã–π –æ–∫—É–Ω—å", -- [1]
					"", -- [2]
				},
				[11659] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –Ω–µ–¥—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[139463] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[122090] = {
					"–°–∞—Ä–∞—à–∞—Å –†–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146116] = {
					"–ò–≥–ª–æ—Å–ø–∏–Ω-–¥–æ–±—ã—Ç—á–∏–∫", -- [1]
					"", -- [2]
				},
				[134602] = {
					"–°–∫—Ä—ã—Ç–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[146884] = {
					"–í–æ–µ–≤–æ–¥–∞ –•—å–µ–ª—å—Å–∫–∞—Ä–¥", -- [1]
					"", -- [2]
				},
				[144837] = {
					"–û–ª–µ–Ω—å c –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136880] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"", -- [2]
				},
				[135474] = {
					"–í–µ–¥—å–º–∞-–ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[139464] = {
					"–†–µ–≤—É–Ω –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[141283] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133835] = {
					"–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[146859] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"SarasIsland", -- [2]
				},
				[138441] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è –ø–µ–≤—É–Ω—å—è", -- [1]
					"", -- [2]
				},
				[136892] = {
					"–ë—Ä—É—Ç–∞—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[140970] = {
					"–°–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[137517] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[144071] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[126185] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[133836] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[136139] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139431] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–∫–ª–µ–ø–∞", -- [1]
					"", -- [2]
				},
				[144839] = {
					"–ë–µ–ª–æ—Ö–≤–æ—Å—Ç–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132913] = {
					"–û—Å—Ç—Ä–æ–≤–Ω–æ–π —ç—Ç—Ç–∏–Ω", -- [1]
					"", -- [2]
				},
				[138443] = {
					"–ß–µ—à—É–µ—Å—Ç—Ä–∞–∂ –ë—É–ª–µ—Ç", -- [1]
					"", -- [2]
				},
				[139466] = {
					"–ö–æ–±–∞–ª—å—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å—Ç—Ä–∞–∂", -- [1]
					"", -- [2]
				},
				[138469] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π —á–µ—à—É–π—á–∞—Ç—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[146119] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[138187] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[129640] = {
					"–ó–ª–æ–±–Ω—ã–π –ø–æ—Ä—Ç–æ–≤—ã–π –ø–µ—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[144840] = {
					"–ü—è—Ç–Ω–∏—Å—Ç—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[140643] = {
					"–õ—é—Ç—ã–π –π–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"", -- [2]
				},
				[130024] = {
					"–ú–æ–∫—Ä–∞—è –∫–æ—Ä–∞–±–µ–ª—å–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146118] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"", -- [2]
				},
				[140975] = {
					"–ú–ª–∞–¥–æ–∑–æ–±", -- [1]
					"", -- [2]
				},
				[129208] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138281] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138444] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –í–µ—Å–ø–∞—Ä–∞–∫", -- [1]
					"", -- [2]
				},
				[140973] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[122986] = {
					"–î–∏–∫–∏–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[123292] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"SarasIsland", -- [2]
				},
				[139468] = {
					"–•—Ä–µ–±—Ç–æ–¥–µ—Ä –ö—É-–ö–æ–Ω", -- [1]
					"", -- [2]
				},
				[145865] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π –º—É—à–∫–µ—Ç–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[133556] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"", -- [2]
				},
				[140262] = {
					"–ú–æ–ª–æ–¥–∞—è —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"", -- [2]
				},
				[140076] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-–≤–æ–∂–∞–∫", -- [1]
					"", -- [2]
				},
				[146889] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[134058] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–æ–≤ –§—ç–π", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[130025] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[137764] = {
					"–û–ø—ã—Ç–Ω–∞—è –≤–æ–ª—à–µ–±–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138438] = {
					"–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å –≤–æ–ª–Ω –°—Ç–∞–ª–µ–∫–ª—ã–∫", -- [1]
					"", -- [2]
				},
				[138659] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"", -- [2]
				},
				[138019] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138446] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—É—á–∏–Ω –ó–µ–ª–∏—Å—Å–∞", -- [1]
					"", -- [2]
				},
				[122605] = {
					"–û–∫–∞–º–µ–Ω–µ–≤—à–∏–π –≤—Ä–∞–≥", -- [1]
					"", -- [2]
				},
				[134599] = {
					"–£—Å–∏–ª–µ–Ω–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[136889] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –∫–æ–ª–¥—É–Ω –¢–∞–∫", -- [1]
					"", -- [2]
				},
				[139680] = {
					"–õ–æ–≤–µ—Ü –∏–∑ —Ç–µ–º–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[133585] = {
					"–î–∏–Ω–∞ \"–î–∏–∑–∑–∏\" –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∞", -- [1]
					"", -- [2]
				},
				[140977] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"", -- [2]
				},
				[129828] = {
					"–û–∫–µ–∞–Ω—Å–∫–∏–π —â–µ–ª–∫—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[138447] = {
					"–í–æ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –°–∞–ª–∞—Ä–∏—è", -- [1]
					"", -- [2]
				},
				[131527] = {
					"–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[122971] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[130026] = {
					"–ú–æ—Ä—Å–∫–æ–π –∫–æ–ª–¥—É–Ω –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[131402] = {
					"–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[133663] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[135975] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132051] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –∫–ª–µ—â", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139674] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π —Ö–æ–¥–æ–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[146892] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[132819] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[102392] = {
					"–¢–æ—Ç–µ–º —Ä–µ–∑–æ–Ω–∞–Ω—Å–∞", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[137029] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[118175] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –±—É—Ä–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137614] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130319] = {
					"–ì–æ–ø–ª–∏—Ç –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"", -- [2]
				},
				[129232] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[148940] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∞—è —Ö–∏–º–µ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132820] = {
					"–ü–æ—Ä–æ—Å–µ–Ω–æ–∫-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"", -- [2]
				},
				[130027] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139473] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –º–∞—à–∏–Ω–∏—Å—Ç –ù—É-–°–∏–Ω—å", -- [1]
					"", -- [2]
				},
				[133588] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–∑—Ä—ã–≤—á–∞—Ç–∫–æ—Å—Ç—Ä–µ–ª", -- [1]
					"", -- [2]
				},
				[126423] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"", -- [2]
				},
				[139026] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ó–∞—Ç–º–µ–Ω–∏—è", -- [1]
					"", -- [2]
				},
				[139672] = {
					"–ë–∞—Ä–º–∞—à–ª–µ–ø", -- [1]
					"SarasIsland", -- [2]
				},
				[134612] = {
					"–¶–µ–ø–∫–∏–µ —â—É–ø–∞–ª—å—Ü–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[138641] = {
					"–ö–≤–∞–ª–¥–∏—Ä-—É–∂–∞—Å–µ–Ω—å", -- [1]
					"SarasIsland", -- [2]
				},
				[126291] = {
					"–ü–µ—Ö–æ—Ç–∏–Ω–µ—Ü –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140430] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–ª–∏–∫", -- [1]
					"SarasIsland", -- [2]
				},
				[136012] = {
					"–ì–æ—Ä—É—Å –ù–µ—Å–¥–≤–∏–≥–∞–µ–º—ã–π", -- [1]
					"SarasIsland", -- [2]
				},
				[140441] = {
					"–ú–æ–ª–æ–¥–æ–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"", -- [2]
				},
				[132893] = {
					"–î—É—Ö –æ–≥–Ω—è", -- [1]
					"SarasIsland", -- [2]
				},
				[135834] = {
					"–ü–∞–≥—É–±–Ω–æ–µ –æ–±–ª–∞–∫–æ", -- [1]
					"", -- [2]
				},
				[146895] = {
					"–í–∞–Ω–¥–∞–ª –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"", -- [2]
				},
				[136207] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∑–∞—â–∏—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[130028] = {
					"–ñ—Ä–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138562] = {
					"–õ–∏—á–∏–Ω–∫–∞ –∏–∑ –ë–µ–∑–¥–Ω—ã", -- [1]
					"", -- [2]
				},
				[126190] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[137940] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–∞—è –∞–∫—É–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137097] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140679] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π –≤–µ–Ω–¥–∏–≥–æ", -- [1]
					"", -- [2]
				},
				[139400] = {
					"–†–µ—á–Ω–æ–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"", -- [2]
				},
				[134807] = {
					"–î—Ä–µ–≤–Ω—è—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"", -- [2]
				},
				[138643] = {
					"–ö–≤–∞–ª–¥–∏—Ä-–±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"", -- [2]
				},
				[139476] = {
					"–ö–∞–º–µ–Ω–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"", -- [2]
				},
				[139659] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏", -- [1]
					"SarasIsland", -- [2]
				},
				[140294] = {
					"–í–æ–ª–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"", -- [2]
				},
				[132056] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138631] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –ö–≤–∞–¥–∏–º", -- [1]
					"", -- [2]
				},
				[133870] = {
					"–ë–æ–ª—å–Ω–æ–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[128969] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[139014] = {
					"–î–∏–∫–∏–π –ª—É–Ω–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[134794] = {
					"–¢–µ–º–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"SarasIsland", -- [2]
				},
				[131545] = {
					"–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[148584] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –ú–æ—Ä–¥–µ–Ω—Ç –í–µ—á–µ—Ä–Ω—è—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[128649] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140675] = {
					"–ú–∞—Ç—å —Å—Ç–∞–∏ –ú—É–≥–æ", -- [1]
					"", -- [2]
				},
				[134616] = {
					"–ü–æ–¥—Ä–∞—Å—Ç–∞—é—â–∏–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139651] = {
					"–ì–ª—É–±–∏–Ω–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–æ–ª–æ–¥–Ω–æ–≥–æ –°–∏—è–Ω–∏—è", -- [1]
					"SarasIsland", -- [2]
				},
				[136592] = {
					"–§–ª–∏–Ω–Ω –§—ç–π—Ä–≤–∏–Ω–¥", -- [1]
					"", -- [2]
				},
				[133384] = {
					"–ú–µ—Ä–µ–∫—Ç–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[133593] = {
					"–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[136964] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[132744] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"", -- [2]
				},
				[139009] = {
					"–î–∏–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134617] = {
					"–î–µ—Ç–µ–Ω—ã—à –∫—Ä–æ–ª—É—Å–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[133972] = {
					"–¢—è–∂–µ–ª–æ–µ –æ—Ä—É–¥–∏–µ", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[145402] = {
					"–û–¥–∏—á–∞–≤—à–∞—è –±–µ–∑—É–º–∏—Ü–∞", -- [1]
					"", -- [2]
				},
				[138625] = {
					"–ê–º–∞—Ç–µ—Ç-–∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"", -- [2]
				},
				[130436] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134787] = {
					"–ö—Ä–∞–±-–∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"SarasIsland", -- [2]
				},
				[12101] = {
					"–õ–∞–≤–æ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[126919] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136665] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138968] = {
					"–°—Ç–∞–ª—å–Ω–æ–π –∑–µ–≤ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[138623] = {
					"–ê–º–∞—Ç–µ—Ç-–ª—É—á–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[139480] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[134916] = {
					"–ü–æ–¥–≤–∞–ª—å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"", -- [2]
				},
				[151144] = {
					"Hati", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[138996] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –∑–µ–º–ª–µ–π –î–∂—É–≤–∞", -- [1]
					"", -- [2]
				},
				[136190] = {
					"–¢–µ–º–Ω—ã–π —Ä–∞–∑–ª–æ–º", -- [1]
					"SarasIsland", -- [2]
				},
				[140760] = {
					"–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"", -- [2]
				},
				[138969] = {
					"–î—É—Ö –º–æ–≥—É –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[135562] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[138890] = {
					"–î–∞—Ä–≥—É–ª—å—Ñ –ò—Å–∫–∞—Ç–µ–ª—å –î—É—Ö–æ–≤", -- [1]
					"", -- [2]
				},
				[145026] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"", -- [2]
				},
				[133852] = {
					"–ñ–∏–≤–∞—è –≥–Ω–∏–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[126449] = {
					"–ò–ª–æ–ø–ª—é–π", -- [1]
					"SarasIsland", -- [2]
				},
				[134364] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫ - —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —è–∏—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[127497] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138970] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"SarasIsland", -- [2]
				},
				[122076] = {
					"–°–Ω–µ–∂–Ω–∞—è —Å—Ñ–µ—Ä–∞", -- [1]
					"", -- [2]
				},
				[133666] = {
					"–û—Ç–≤–ª–µ–∫–∞—Ç–æ—Ä –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∏", -- [1]
					"", -- [2]
				},
				[134139] = {
					"–•—Ä–∞–º–æ–≤–Ω–∏–∫ –∏–∑ –°–≤—è—Ç–∏–ª–∏—â–∞ –®—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140850] = {
					"–®–∞–ª–æ–≤–ª–∏–≤—ã–π –∑–µ–º–ª–µ–≤–∏–∫", -- [1]
					"", -- [2]
				},
				[140250] = {
					"–ï–ª–µ–Ω—å", -- [1]
					"", -- [2]
				},
				[106317] = {
					"–¢–æ—Ç–µ–º –±—É—Ä–∏", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[138647] = {
					"–•—ä—è–Ω–∞ –í–µ—Å—Ç–Ω–∏—Ü–∞ –¢—É–º–∞–Ω–æ–≤", -- [1]
					"", -- [2]
				},
				[138971] = {
					"–ó–º–µ–π –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"", -- [2]
				},
				[106319] = {
					"–¢–æ—Ç–µ–º –æ–≥–Ω–µ–∑–æ–ª–∞", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[61245] = {
					"–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[95061] = {
					"–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[89] = {
					"–ò–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[89385] = {
					"Mojondakilo", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
			},
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 101,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the transparency of nameplates that isn't your target. You might want to disable 'Use Range Check' in the General Settings tab when using this hook.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)\n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.IsSelf) then\n        unitFrame.healthBar:SetAlpha (envTable.AlphaPersonalBar)    \n    else\n        if (not Plater.PlayerCurrentTargetGUID) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            if (unitFrame.namePlateIsTarget) then\n                unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n            else\n                unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: you might want to disable \"Use Range Check\" in the General Settings tab.\n    \n    --stup the amount of transparency nameplates will have:\n    envTable.AlphaIsNotTarget = 0.4 --40%\n    envTable.AlphaTarget = 1.0 --100%\n    envTable.AlphaPersonalBar = 1.0 --100% (if the nameplate is the personal bar)\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1542481682,
					["PlaterCore"] = 1,
					["Name"] = "No Target Alpha [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 132177,
					["LastHookEdited"] = "",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 1990989,
					["LastHookEdited"] = "",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 95,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Set a different color when a unit is targetting a Black Ox Statue",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the unit target target\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    if (targetGUID) then\n        \n        --get the npcID of the target and check if the npcID is the Black Ox Status npcID\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        if (npcID == envTable.OxStatusNpcID) then\n            \n            --the unit is targetting the status, change the color of the nameplate\n            Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n        end\n    end\nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ncpID for the black ox statue\n    envTable.OxStatusNpcID = 61146\n    \n    --the color to use in the nameplate when the unit is targetting an ox statue\n    envTable.NameplateColor = \"olive\"\n    \nend\n\n\n",
					},
					["Time"] = 1541606185,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Monk Statue [Plater]",
					["LoadConditions"] = {
						["talent"] = {
							[19994] = true,
							["Enabled"] = true,
						},
						["group"] = {
						},
						["class"] = {
							["MONK"] = true,
							["Enabled"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
							["Enabled"] = true,
							["TANK"] = true,
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[268] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 627607,
					["LastHookEdited"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 88,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1548077443,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 574574,
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["Icon"] = 135426,
					["LastHookEdited"] = "",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 1966587,
					["LastHookEdited"] = "",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["Name"] = "Stormwall Encounter [Plater]",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["LastHookEdited"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 239,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 1\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --auras should grow to right or left?\n    envTable.GrowDirection = \"right\" --insert 'left' to grow to the left side\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["Time"] = 1548004596,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Time"] = 1549937733,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2446016,
					["Name"] = "M+ Bwonsamdi Reaping",
				}, -- [16]
			},
			["last_news_time"] = 1543749097,
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["aura_alpha"] = 0.799999952316284,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Buff Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Color Change"] = 1,
				["Aura - Blink Time Left"] = 1,
				["Aura Border Color"] = 1,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Unit - Important"] = 5,
				["Aura - Debuff Alert"] = 3,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Unit Power"] = 1,
				["Blink by Time Left"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["first_run3"] = true,
			["tank"] = {
				["colors"] = {
					["anothertank"] = {
						1, -- [1]
						0, -- [2]
						0.905882352941177, -- [3]
						1, -- [4]
					},
					["aggro"] = {
						0, -- [1]
						0.686274509803922, -- [2]
						0.0196078431372549, -- [3]
						1, -- [4]
					},
					["nocombat"] = {
						0.301960784313726, -- [1]
						0.00392156862745098, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Attacking Specific Unit"] = 1,
				["Reorder Nameplate"] = 3,
				["Dont Have Aura"] = 1,
				["Monk Statue"] = 2,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Aura Reorder"] = 1,
				["Blockade Encounter"] = 1,
				["Targetting Alpha"] = 3,
				["Players Targetting Amount"] = 4,
				["Hide Neutral Units"] = 1,
				["Combo Points"] = 3,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Jaina Encounter"] = 6,
			},
			["minor_width_scale"] = 0.490000009536743,
			["captured_spells"] = {
				[164815] = {
					["type"] = "DEBUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215479] = {
					["type"] = "BUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115192] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268607] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–æ–≥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193475] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞–Ω–∏—Å—Ç–∏–ª–µ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183752] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275773] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[294708] = {
					["type"] = "BUFF",
					["source"] = "–¢–µ–ª—É—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151909,
				},
				[268609] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–æ–≥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270657] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265540] = {
					["source"] = "–°–º—Ä–∞–¥–Ω–∞—è –ª–∏—á–∏–Ω–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130909,
				},
				[85256] = {
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[31661] = {
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285500] = {
					["type"] = "BUFF",
					["source"] = "Oathkeeper-LesClairvoyants",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[153561] = {
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[31821] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123254] = {
					["type"] = "BUFF",
					["source"] = "–ó–≤—ë–∑–¥–æ—á–∫–∏–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270661] = {
					["type"] = "BUFF",
					["source"] = "Buneamk-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275779] = {
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280385] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115834] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[408] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118905] = {
					["type"] = "DEBUFF",
					["source"] = "–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61245,
				},
				[6552] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[294717] = {
					["source"] = "–ê–¥–∞–ª–∞–∏–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[200389] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏—Ä–∞–¥–∂–µ–π–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20243] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[162264] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296254] = {
					["type"] = "DEBUFF",
					["source"] = "–û—Ö–æ—Ç—è—â–∏–π—Å—è –º–æ—Ä—Å–∫–æ–π –≤–∞—Ä–∞–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152357,
				},
				[273226] = {
					["type"] = "DEBUFF",
					["encounterID"] = 2112,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194249] = {
					["type"] = "BUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190411] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[45524] = {
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270670] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271694] = {
					["source"] = "–ü–µ—Ä–≤–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞ –¢–∞–ª–∏—Å—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154581,
				},
				[118779] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221886] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205766] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203975] = {
					["type"] = "BUFF",
					["source"] = "–•–∏–∏–≥—Ä–∞–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273232] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298820] = {
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π —à–∞–º–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152412,
				},
				[278862] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–¥–∏–∞–Ω—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1719] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290121] = {
					["type"] = "BUFF",
					["source"] = "Artasha-Eredar",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280398] = {
					["type"] = "BUFF",
					["source"] = "–ü—ç—Ä–∏—Å—Ö–∏–ª—Ç–∞–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304451] = {
					["source"] = "–ò–ª–∏—Å—Ç–∞—è –≥–∏–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145340,
				},
				[167898] = {
					["type"] = "BUFF",
					["source"] = "Sc√≥r-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295752] = {
					["type"] = "BUFF",
					["source"] = "–°–≤–∏–Ω–æ–±–æ–π–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302917] = {
					["type"] = "BUFF",
					["source"] = "–ì—É–ª—Ä–æ–∫—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304453] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–ª–∏—Å—Ç–∞—è –≥–∏–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 145340,
				},
				[235450] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23922] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273238] = {
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188370] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199373] = {
					["source"] = "–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24207,
				},
				[228287] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232893] = {
					["source"] = "Oathkeeper-LesClairvoyants",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267611] = {
					["type"] = "BUFF",
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267612] = {
					["type"] = "BUFF",
					["source"] = "–û—Ä–µ–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278359] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ—Ä—Ä–∞–¥–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296271] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏–¥–∂–∏–¥–∂–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[30831] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154624,
				},
				[203981] = {
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296273] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Ä–æ—É—Ç—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280409] = {
					["type"] = "BUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272733] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5217] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5225] = {
					["type"] = "BUFF",
					["source"] = "–î—É—Ä—É—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303439] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 156265,
				},
				[271711] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278876] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1833] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280412] = {
					["type"] = "BUFF",
					["source"] = "–°–Ω–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298836] = {
					["type"] = "BUFF",
					["source"] = "–£—Ä—Å–º–∞–Ω–∏—Ñ–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278878] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–µ–ª–æ—É–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279902] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298837] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–ª–µ—Å—Ç–∏–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[226757] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61391] = {
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278880] = {
					["type"] = "BUFF",
					["source"] = "–ñ–º–µ–Ω—å—â–∏–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185562] = {
					["type"] = "BUFF",
					["source"] = "–•—ç—Ç—Ñ–∏–ª–¥–≤–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201427] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[201939] = {
					["type"] = "BUFF",
					["source"] = "–¢–≤–æ—è–¥–æ—á—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204242] = {
					["type"] = "DEBUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214222] = {
					["type"] = "DEBUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[24275] = {
					["source"] = "–î–∏–Ω–µ—Ä–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[294238] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251836] = {
					["type"] = "BUFF",
					["source"] = "Delio√°-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205523] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274281] = {
					["source"] = "–ö–æ—Ä—Ä–∞–¥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[185565] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[251837] = {
					["type"] = "BUFF",
					["source"] = "Law√≠n√≠a-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260793] = {
					["encounterID"] = 2118,
					["source"] = "–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131817,
				},
				[125439] = {
					["source"] = "–§–æ—Ä–º–∞–ª–∏–Ω–æ–≤–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5697] = {
					["type"] = "BUFF",
					["source"] = "–°–≤–∏–Ω–æ–±–æ–π–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288613] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1943] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[302943] = {
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–ª–æ–≤—á–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153741,
				},
				[1953] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251839] = {
					["type"] = "BUFF",
					["source"] = "–ú–æ–Ω—Å—Ç—ç—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207317] = {
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295269] = {
					["type"] = "BUFF",
					["source"] = "–ë—ã–∫—É—Ö–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273264] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195292] = {
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[192222] = {
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[498] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[82326] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280433] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ—Å–∫–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265081] = {
					["type"] = "BUFF",
					["source"] = "–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131436,
				},
				[266106] = {
					["source"] = "–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133835,
				},
				[298347] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152676,
				},
				[266107] = {
					["source"] = "–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133835,
				},
				[265084] = {
					["source"] = "–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131492,
				},
				[30449] = {
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48792] = {
					["type"] = "BUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202461] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115080] = {
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286581] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297840] = {
					["type"] = "BUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[147193] = {
					["source"] = "–ó–≤—ë–∑–¥–æ—á–∫–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188389] = {
					["type"] = "DEBUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2098] = {
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[201695] = {
					["type"] = "BUFF",
					["source"] = "–î–¥—Ä–æ–≤–æ—Å–µ–∫–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299889] = {
					["type"] = "DEBUFF",
					["source"] = "–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152274,
				},
				[202719] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196834] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265091] = {
					["source"] = "–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131492,
				},
				[228563] = {
					["type"] = "BUFF",
					["source"] = "–î–∂–æ–∫–µ–µ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12654] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260292] = {
					["encounterID"] = 2118,
					["source"] = "–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131817,
				},
				[297845] = {
					["type"] = "BUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298357] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278911] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–ª—å–ø—É—Ä–≥–∏–π",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299893] = {
					["source"] = "–°–æ–±–∏—Ä–∞—Ç–µ–ª—å –ú–æ–∞—Ä—Ä–≥–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153250,
				},
				[273794] = {
					["type"] = "DEBUFF",
					["source"] = "–ì–∞–Ω–≥—Å—Ç–∞–ø–∞–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[546] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–π–¥—ç–Ω-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256455] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300919] = {
					["type"] = "BUFF",
					["source"] = "Zzeimdall-Confr√©rieduThorium",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205025] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256456] = {
					["type"] = "BUFF",
					["source"] = "Law√≠n√≠a-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273286] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–∏–∞–ª–∏—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300409] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–¥—Ä–∞–Ω—Ç–∏—Å—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153314,
				},
				[102417] = {
					["source"] = "–ö–µ–Ω—Ç–∞—à–¥–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[224729] = {
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–Ω–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153753,
				},
				[145152] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[200166] = {
					["encounterID"] = 2111,
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[210657] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118922] = {
					["type"] = "BUFF",
					["source"] = "–î–µ–∫–ª–∞–Ω—Ö–∞—Ä–ø-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256459] = {
					["type"] = "BUFF",
					["source"] = "–°–ø–µ–ª–ª–º–∏–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11327] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[585] = {
					["source"] = "–í–∞—Å—Å—è–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[256460] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–∞—Ç–µ–∫–∏–¥-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191212] = {
					["type"] = "BUFF",
					["source"] = "–ú—É—Ä–∞–≤—É—à–∫–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[282505] = {
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[91800] = {
					["type"] = "DEBUFF",
					["source"] = "–¢—É—Ö–ª–æ–ª–∏—Ü",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 26125,
				},
				[204262] = {
					["type"] = "BUFF",
					["source"] = "–¢–∞–±—Ö",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300417] = {
					["type"] = "BUFF",
					["source"] = "–ñ–µ–ª–µ–∑–Ω—ã–π –ó–æ–∫–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153300,
				},
				[299394] = {
					["source"] = "–ó–∞—Ä–∞–∑–∞ –±–µ–∑—É–º–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153327,
				},
				[210660] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[305025] = {
					["source"] = "–í–∞—Ä–µ–Ω –ü–µ—Å–Ω—å –°–∫–æ–≤–æ—Ä–æ–¥—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154509,
				},
				[111759] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50842] = {
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[259277] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–æ—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 149644,
				},
				[273298] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53209] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[305027] = {
					["source"] = "–≠—Ä–∞–Ω–æ—Ä –ë–∏—Ä—Ç—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154528,
				},
				[34914] = {
					["type"] = "DEBUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273299] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106898] = {
					["type"] = "BUFF",
					["source"] = "–¢–≤–æ—è–¥–æ—á—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272276] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272790] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270232] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264603] = {
					["encounterID"] = 2111,
					["source"] = "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131318,
				},
				[279956] = {
					["type"] = "DEBUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164862] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210152] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[633] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[231390] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–µ–ª–æ—É–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[143625] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288146] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183542] = {
					["source"] = "–°—Ç—Ä–∞–∂ 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154809,
				},
				[642] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269214] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ—É—Ç—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206572] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287638] = {
					["type"] = "DEBUFF",
					["source"] = "Oathkeeper-LesClairvoyants",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[25046] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303504] = {
					["source"] = "–®–∏—Ä–∞–∫–µ—Å—Å-–Ω–∞–¥—Å–º–æ—Ç—Ä—â–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 149004,
				},
				[217832] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187895] = {
					["source"] = "–°—Ç—Ä–∞–∂ 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154809,
				},
				[131347] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[222695] = {
					["source"] = "–î—è–¥–æ–º—Ä–∞–∑",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267685] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294808] = {
					["source"] = "–•—É—Ä—É–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[19577] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[155145] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190456] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79140] = {
					["encounterID"] = 2111,
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288158] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264106] = {
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[135700] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192249] = {
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298909] = {
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π –∫–æ–º–∞–Ω–¥–∏—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145346,
				},
				[703] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20473] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274346] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–∫—ç—Ä–∏—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273323] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193786] = {
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273836] = {
					["type"] = "DEBUFF",
					["source"] = "–°–æ–Ω–Ω—ã–π–ª–∏—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278954] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295842] = {
					["type"] = "BUFF",
					["source"] = "–ê–∫—à–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16827] = {
					["source"] = "–î—É—Ö –∑–≤–µ—Ä—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 69947,
				},
				[208628] = {
					["type"] = "BUFF",
					["source"] = "–ê–¥–∞–ª–∞–∏–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290726] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176644] = {
					["type"] = "BUFF",
					["source"] = "–°–Ω–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281517] = {
					["type"] = "BUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269747] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–∏–∞–ª–∏—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303523] = {
					["source"] = "–ß–∞—Ä–æ—Ç–≤–æ—Ä–∏—Ü–∞ –ë–µ–∑–∏–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 155838,
				},
				[273842] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[147732] = {
					["type"] = "DEBUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297895] = {
					["type"] = "BUFF",
					["source"] = "–°–ø–æ—Ä–æ–≤–æ–µ –æ–±–ª–∞–∫–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153351,
				},
				[273843] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278961] = {
					["source"] = "–ë–æ–ª—å–Ω–æ–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133870,
				},
				[304037] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞–Ω—Ç–æ—Ä–æ–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269239] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271287] = {
					["source"] = "–ù–µ—É–¥–µ—Ä–∂–∏–º–∞—è —è—Ä–æ—Å—Ç—å –≤–æ–ª–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153999,
				},
				[139546] = {
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275384] = {
					["source"] = "–ò—Å–∫—Ä—è—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140789,
				},
				[277943] = {
					["type"] = "BUFF",
					["source"] = "Zzeimdall-Confr√©rieduThorium",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[768] = {
					["type"] = "BUFF",
					["source"] = "Owles-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49184] = {
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[160018] = {
					["source"] = "–ë—É—Ö–ª—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 124631,
				},
				[256739] = {
					["type"] = "BUFF",
					["source"] = "Shillen-Eredar",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193538] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[47585] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–¥–∏–∞–Ω—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288693] = {
					["encounterID"] = 2111,
					["source"] = "–ó–∞–º—É—á–µ–Ω–Ω–∞—è –¥—É—à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148893,
				},
				[781] = {
					["source"] = "–î–µ–∫–ª–∞–Ω—Ö–∞—Ä–ø-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[783] = {
					["source"] = "–ë—ã–∫—É—Ö–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[155158] = {
					["type"] = "DEBUFF",
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23161] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ç–æ–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193796] = {
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275391] = {
					["type"] = "DEBUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265668] = {
					["source"] = "–ñ–∏–≤–∞—è –≥–Ω–∏–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133852,
				},
				[255974] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[111771] = {
					["source"] = "–ö—Ö–∞–º—Å–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[85288] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8690] = {
					["source"] = "–ë–∏–¥–∂–∏–¥–∂–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260069] = {
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–µ—Ü –ì–æ–Ω–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131809,
				},
				[21562] = {
					["type"] = "BUFF",
					["source"] = "T√≠lana-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194310] = {
					["type"] = "DEBUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260070] = {
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ü–∞'–∫—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131834,
				},
				[190984] = {
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274373] = {
					["type"] = "BUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198149] = {
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108446] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 58965,
				},
				[818] = {
					["source"] = "–õ–∞–ª–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300474] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–µ—Å–æ—á–Ω–∏—â–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151870,
				},
				[260072] = {
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ü–∞'–∫—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131834,
				},
				[228600] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277960] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[15407] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞–ª–µ–∫–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298431] = {
					["type"] = "BUFF",
					["source"] = "–ê–≥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185358] = {
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[15487] = {
					["type"] = "DEBUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298945] = {
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π –∫–ª–µ—à–Ω–µ–±–æ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152413,
				},
				[294852] = {
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–æ—Å-–≤-–ì–ª—É–±–∏–Ω–∞—Ö",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151719,
				},
				[297923] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–º–∏—Ä–º–∏–¥–æ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152883,
				},
				[853] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281036] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295367] = {
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279503] = {
					["type"] = "BUFF",
					["source"] = "–¢—É—Ä–±–æ–π–æ–≥—É—Ä—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260333] = {
					["encounterID"] = 2118,
					["source"] = "–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131817,
				},
				[252401] = {
					["source"] = "–û—á—É–ø–µ–Ω–Ω–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51490] = {
					["source"] = "Zzeimdall-Confr√©rieduThorium",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[871] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176151] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263642] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266201] = {
					["type"] = "BUFF",
					["source"] = "–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133836,
				},
				[108194] = {
					["type"] = "DEBUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[4987] = {
					["encounterID"] = 2111,
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[186387] = {
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[224001] = {
					["type"] = "BUFF",
					["source"] = "Delio√°-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295373] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[30455] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303563] = {
					["source"] = "–ú–∞–ª—ã–π –∑–æ–∞—Ç—Ä–æ–∏–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152067,
				},
				[203277] = {
					["type"] = "BUFF",
					["source"] = "–õ–∏–ª—á–∏–∫–ø–∞–º–ø-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274395] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107428] = {
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[24858] = {
					["type"] = "BUFF",
					["source"] = "–§–æ–Ω–µ—Ä—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295378] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269279] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266209] = {
					["source"] = "–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134284,
				},
				[268769] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297939] = {
					["type"] = "BUFF",
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π –ø–∞–¥–∞–ª—å—â–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 148391,
				},
				[290264] = {
					["type"] = "BUFF",
					["source"] = "Owles-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297941] = {
					["type"] = "BUFF",
					["source"] = "Hotbutton-Eredar",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286171] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ–∫–æ—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3714] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ä–µ–∫—ë–∑–µ-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301525] = {
					["type"] = "BUFF",
					["source"] = "–ñ–µ–ª–µ–∑–Ω—ã–π –ó–æ–∫–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153300,
				},
				[132404] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259830] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞",
					["encounterID"] = 2112,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131383,
				},
				[202770] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ—Å–∫–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101545] = {
					["source"] = "–ë–∞–º–±—É—á–µ–ª–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203538] = {
					["type"] = "BUFF",
					["source"] = "–ì–æ—Ä–º–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228358] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122783] = {
					["type"] = "BUFF",
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[178207] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[152108] = {
					["source"] = "–î–µ–º–µ–Ω—Ç–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203539] = {
					["type"] = "BUFF",
					["source"] = "Maestrod-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203795] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[301530] = {
					["source"] = "–ñ–µ–ª–µ–∑–Ω—ã–π –ó–æ–∫–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153300,
				},
				[264173] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–ª–∫–µ—Ä—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298461] = {
					["type"] = "BUFF",
					["source"] = "–ó–æ—ç–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303579] = {
					["source"] = "–í–∞—Ä–ª–æ–Ω–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304603] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–∏–∑–∑—ç—Ä–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[88625] = {
					["source"] = "–í–∞—Å—Å—è–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[157228] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304605] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–∏–∑–∑—ç—Ä–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22812] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–±–æ–π—Å—è—è—à—É—á—É-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304606] = {
					["type"] = "DEBUFF",
					["source"] = "–§–∞–ª–∫–æ–Ω—ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[974] = {
					["type"] = "BUFF",
					["source"] = "–°–∫–æ–ª—å—Å–∫–∏–π-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31224] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[157997] = {
					["type"] = "DEBUFF",
					["source"] = "–†–µ–Ω–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[980] = {
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[100780] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[982] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–æ–≥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[146739] = {
					["type"] = "DEBUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44457] = {
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300515] = {
					["source"] = "–ü–µ—Å–æ—á–Ω–∏—â–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151870,
				},
				[194844] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[145205] = {
					["source"] = "–ö–µ–Ω—Ç–∞—à–¥–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297447] = {
					["source"] = "–û–≥—Ä–æ–º–Ω—ã–π –ª–µ—Ç–∞—é—â–∏–π —Å–∫–∞—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 150467,
				},
				[269301] = {
					["type"] = "DEBUFF",
					["source"] = "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ",
					["encounterID"] = 2123,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133007,
				},
				[304612] = {
					["type"] = "DEBUFF",
					["source"] = "–§–∞–ª–∫–æ–Ω—ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201754] = {
					["source"] = "–ñ–∏–≤–æ—Ç–Ω–æ–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 157009,
				},
				[47528] = {
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[105771] = {
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236298] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8042] = {
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[32216] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186403] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279028] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236299] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303593] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153738,
				},
				[257537] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[207386] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–Ω—Ç–∞—à–¥–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1022] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[301548] = {
					["source"] = "–ñ–µ–ª–µ–∑–Ω—ã–π –ó–æ–∫–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153300,
				},
				[188196] = {
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274426] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121253] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279033] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49576] = {
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[194594] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272893] = {
					["type"] = "BUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112042] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 1860,
				},
				[272382] = {
					["source"] = "–î–æ–±—ã—Ç—á–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152367,
				},
				[66] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1066] = {
					["type"] = "BUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2139] = {
					["encounterID"] = 2111,
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257541] = {
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[55078] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233490] = {
					["type"] = "DEBUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303604] = {
					["type"] = "BUFF",
					["source"] = "–®–∏—Ä–∞–∫–µ—Å—Å-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152724,
				},
				[254472] = {
					["type"] = "BUFF",
					["source"] = "–¢–æ—Ä–≥–∞—Ä–∏—ç–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43308] = {
					["type"] = "BUFF",
					["source"] = "√Åva√¢-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303605] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 155780,
				},
				[303606] = {
					["source"] = "–ê–ª–¥—Ä–∞–Ω—Ç–∏—Å—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153314,
				},
				[254473] = {
					["type"] = "BUFF",
					["source"] = "Holyb√∏om-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120360] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[254474] = {
					["type"] = "BUFF",
					["source"] = "–¢–æ—Ä–≥–∞—Ä—ç–∫—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271369] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 150541,
				},
				[81340] = {
					["type"] = "BUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265742] = {
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280583] = {
					["type"] = "DEBUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1160] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[132168] = {
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269838] = {
					["type"] = "DEBUFF",
					["encounterID"] = 2123,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[184367] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[271374] = {
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203814] = {
					["type"] = "BUFF",
					["source"] = "–ú—ç—Ä–¥–∂–∏—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48107] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233496] = {
					["type"] = "DEBUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["type"] = "BUFF",
					["source"] = "Buneamk-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296452] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152358,
				},
				[195627] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292359] = {
					["type"] = "BUFF",
					["source"] = "–ö–∏–ª–ª–Ω–∞—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233497] = {
					["type"] = "DEBUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[97462] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[205351] = {
					["source"] = "–ó–≤—ë–∑–¥–æ—á–∫–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292360] = {
					["type"] = "BUFF",
					["source"] = "–¢–µ–º–Ω–∞—è–≤–¥–æ–≤–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295431] = {
					["type"] = "BUFF",
					["source"] = "–†–µ—à–∏—Ä–∞–º",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[85948] = {
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[225822] = {
					["type"] = "BUFF",
					["source"] = "–ú–æ—Ä—Ä–æ–≤",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292362] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292363] = {
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∞–¥–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107570] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[33395] = {
					["source"] = "Water Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 78116,
				},
				[292364] = {
					["type"] = "BUFF",
					["source"] = "K√©r√¥-Mal'Ganis",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195630] = {
					["type"] = "BUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77505] = {
					["type"] = "DEBUFF",
					["source"] = "Zzeimdall-Confr√©rieduThorium",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48108] = {
					["type"] = "BUFF",
					["source"] = "–î—Ä–∞–∫–æ–Ω–æ–≤–æ–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119085] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–π–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260879] = {
					["encounterID"] = 2111,
					["source"] = "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131318,
				},
				[288784] = {
					["type"] = "BUFF",
					["source"] = "–ì–∞–º–∏–ª–∏—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[134477] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 58965,
				},
				[295949] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236060] = {
					["type"] = "BUFF",
					["source"] = "–î—Ä–∞–∫–æ–Ω–æ–≤–æ–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108211] = {
					["type"] = "BUFF",
					["source"] = "–°–µ–Ω–∞—Ç—É—Å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5116] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77762] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12323] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260881] = {
					["type"] = "BUFF",
					["source"] = "–¢–∞–±—Ö",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257044] = {
					["type"] = "DEBUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197937] = {
					["type"] = "BUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48045] = {
					["source"] = "–ó–≤—ë–∑–¥–æ—á–∫–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278044] = {
					["source"] = "–ì–æ–ª–æ–¥–Ω—ã–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151769,
				},
				[285721] = {
					["type"] = "BUFF",
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2643] = {
					["source"] = "–ì—Ä–æ–≥—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5308] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1330] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8613] = {
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[293911] = {
					["source"] = "–ù–µ–≤–∏–Ω –í–æ–ª–Ω–æ—Å–µ—Ä–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151614,
				},
				[294935] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–¥–∏–∞–Ω—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31707] = {
					["source"] = "Water Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 78116,
				},
				[108853] = {
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304660] = {
					["type"] = "BUFF",
					["source"] = "–ü—É–∑–∏–∫–æ–≤–∞—Ç—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289308] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107574] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[30108] = {
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272934] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298010] = {
					["source"] = "–ù–µ–±—É–ª–∞—Ä–∏—É–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304663] = {
					["type"] = "BUFF",
					["source"] = "–ê–¥–∞–ª–∞–∏–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[110645] = {
					["type"] = "BUFF",
					["source"] = "–î—Ä—É–∂–∏–Ω–Ω–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304664] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–Ω–¥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288800] = {
					["type"] = "BUFF",
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263725] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191034] = {
					["type"] = "BUFF",
					["source"] = "–ê—É–µ—Ç–∏–≥—Ä–≥–æ–¥—Ö",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[187708] = {
					["source"] = "–õ–∏–∞–ª–∏—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2823] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289315] = {
					["type"] = "BUFF",
					["source"] = "–î–∞–º–∏–∞–Ω–¥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[18562] = {
					["source"] = "–ú–∏—Ä–∞–¥–∂–µ–π–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272940] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–±–æ–π—Å—è—è—à—É—á—É-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273453] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49966] = {
					["source"] = "–ë–∏—Ä—Ä—ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 37208,
				},
				[204598] = {
					["type"] = "DEBUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[165961] = {
					["type"] = "BUFF",
					["source"] = "–ë—ã–∫—É—Ö–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[36213] = {
					["source"] = "–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61056,
				},
				[264757] = {
					["encounterID"] = 2111,
					["source"] = "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131318,
				},
				[222256] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞—Ä–∫–æ–±–æ—Å—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195901] = {
					["type"] = "DEBUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1490] = {
					["type"] = "DEBUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2983] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190784] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[287790] = {
					["type"] = "BUFF",
					["source"] = "Tarkerus-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260894] = {
					["encounterID"] = 2111,
					["source"] = "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131318,
				},
				[268856] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273974] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287280] = {
					["type"] = "DEBUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[218164] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288305] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115767] = {
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279606] = {
					["source"] = "–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24207,
				},
				[273977] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[130736] = {
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267325] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212792] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[18499] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267326] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267327] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118455] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–æ–≥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275006] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267330] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101568] = {
					["type"] = "BUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[59052] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264774] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[235313] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1604] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Ä–∞–±-—Ç—Ä–µ—Å–∫—É–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153818,
				},
				[300086] = {
					["source"] = "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –≤–æ–ª–Ω–æ—Ö–æ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 150371,
				},
				[304692] = {
					["source"] = "–ú–∏–∑–∑—ç—Ä–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[293946] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ–ª—å—á–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273988] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264265] = {
					["source"] = "–î—É—Ö –∑–≤–µ—Ä—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 69947,
				},
				[306229] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[126389] = {
					["type"] = "BUFF",
					["source"] = "–í–∞—Ä–ª–æ–Ω–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303160] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞–Ω—à'–∏—Ä - —á–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–∂",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152881,
				},
				[6572] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[56814] = {
					["type"] = "BUFF",
					["source"] = "–§–æ–∫—Å—Ä–µ–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303162] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–∞–Ω—à'–∏—Ä-—É–±–∏–π—Ü–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153352,
				},
				[273481] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272970] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287811] = {
					["type"] = "BUFF",
					["source"] = "–õ–æ—Ä–¥–∫–æ—Ç–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212800] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268877] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–æ–≥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304700] = {
					["type"] = "BUFF",
					["source"] = "–ì–ª—É–±–∏–Ω–Ω–∞—è –∂–µ–º—á—É–∂–∏–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 156104,
				},
				[51505] = {
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20707] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ä—Ñ–µ–≥–æ—Ä-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290372] = {
					["type"] = "BUFF",
					["source"] = "–ê–≥—Ä–µ—Å—Å—ç—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289349] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[62124] = {
					["source"] = "–°–∞–ª—å–≤–∞–Ω–µ—Ä-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303167] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–≥—Ä–æ–º–∏–ª–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153332,
				},
				[6788] = {
					["type"] = "DEBUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288839] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1706] = {
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280653] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17253] = {
					["source"] = "–ë—É—Ö–ª—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 124631,
				},
				[193357] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280654] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206151] = {
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262232] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295496] = {
					["source"] = "–í—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π-—Å—Ç—Ä–µ–ª–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152244,
				},
				[6940] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300614] = {
					["type"] = "DEBUFF",
					["source"] = "–í–æ–¥–æ—Ä–æ—Å–ª–µ–≤—ã–π —è–∫–æ—Ä—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154569,
				},
				[288844] = {
					["type"] = "BUFF",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 148716,
				},
				[288333] = {
					["type"] = "DEBUFF",
					["source"] = "–†—É–º—Å–∏–∫-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272469] = {
					["source"] = "–•–≤–∞—Ç–∫–∞ –ë–µ–∑–¥–Ω—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138538,
				},
				[268887] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205385] = {
					["source"] = "–ó–≤—ë–∑–¥–æ—á–∫–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297034] = {
					["type"] = "BUFF",
					["source"] = "√Åva√¢-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116670] = {
					["source"] = "–ö—Ä–∏–æ—Ñ–∞—Ä–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297035] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–π–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1766] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[68054] = {
					["type"] = "BUFF",
					["source"] = "–î–∂–∏–≤—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 35642,
				},
				[287825] = {
					["type"] = "DEBUFF",
					["source"] = "–•—ç—Ç—Ñ–∏–ª–¥–≤–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280149] = {
					["type"] = "BUFF",
					["source"] = "–ü—É–∑–∏–∫–æ–≤–∞—Ç—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297037] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—Ñ—ç—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1784] = {
					["type"] = "BUFF",
					["source"] = "–ê–≥—Ä–µ—Å—Å—ç—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212552] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∞—É–ª–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297039] = {
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268893] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115008] = {
					["source"] = "–ö—Å–∞–π–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[205644] = {
					["type"] = "DEBUFF",
					["source"] = "–î—Ä–µ–≤–µ–Ω—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 103822,
				},
				[293458] = {
					["source"] = "–≠—Ä–∞–Ω–æ—Ä –ë–∏—Ä—Ç—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154528,
				},
				[47541] = {
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260402] = {
					["type"] = "BUFF",
					["source"] = "–ê–º–∞–Ω–∏—É—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5221] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281178] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48181] = {
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268898] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[78675] = {
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[34428] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1850] = {
					["type"] = "BUFF",
					["source"] = "–ú–µ–≥–∞—Ö–æ–º—è—á—ë–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[55090] = {
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8679] = {
					["type"] = "BUFF",
					["source"] = "–ß–µ–ª—è–±–∫–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1856] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[240447] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31935] = {
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268904] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296539] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303192] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–≥—Ä–æ–º–∏–ª–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153332,
				},
				[268905] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280165] = {
					["type"] = "BUFF",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206930] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113860] = {
					["type"] = "BUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[156779] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–∏–º–º–±–∞–Ω–∫–∞–π",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[192090] = {
					["type"] = "DEBUFF",
					["source"] = "–°–æ–Ω–Ω—ã–π–ª–∏—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295008] = {
					["source"] = "–ñ–µ–ª–µ–∑–Ω—ã–π –ó–æ–∫–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153300,
				},
				[223819] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[211793] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11366] = {
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268911] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[152175] = {
					["type"] = "BUFF",
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[296547] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286313] = {
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥–∏–ø–ø–æ–≥—Ä–∏—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154863,
				},
				[109128] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1966] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["encounterID"] = 2118,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[117828] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∫–æ–ª–æ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246851] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[46968] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[49143] = {
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297063] = {
					["type"] = "BUFF",
					["source"] = "–§–æ–∫—Å—Ä–µ–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53365] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281711] = {
					["type"] = "DEBUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297064] = {
					["type"] = "BUFF",
					["source"] = "–ë—ã–∫—É—Ö–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280177] = {
					["type"] = "BUFF",
					["source"] = "–ó–æ–º–±–æ–Ω—è—à–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19750] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[17735] = {
					["source"] = "–ê–∑—Ä–∞—Ç—Ä–∞–∫—Å–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 58960,
				},
				[273525] = {
					["type"] = "BUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264314] = {
					["type"] = "BUFF",
					["source"] = "R√≠n√∏a-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295531] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286320] = {
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥–∏–ø–ø–æ–≥—Ä–∏—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154863,
				},
				[297067] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä–µ–¥—Å—Ç–æ—è—Ç–µ–ª—å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8092] = {
					["source"] = "–ú–∏–ª–∏—Ç–∞–¥–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292463] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263806] = {
					["type"] = "BUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303211] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–π–Ω–≤—É–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301676] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154548,
				},
				[284277] = {
					["type"] = "BUFF",
					["source"] = "Emshoff-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303212] = {
					["type"] = "BUFF",
					["source"] = "–°–µ–≤–∞—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45242] = {
					["type"] = "BUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191587] = {
					["type"] = "DEBUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[130] = {
					["type"] = "BUFF",
					["source"] = "–£–Ω–¥–∏–º–∏—ç–ª—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281209] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∞—É–ª–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[258883] = {
					["type"] = "DEBUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[95826] = {
					["source"] = "–Ø—Ä–æ—Å—Ç–Ω—ã–π –∞–Ω–∫–æ–∞-—Å—Ç—Ä–∞–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154374,
				},
				[133] = {
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295029] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞–ª—ã–π –∑–æ–∞—Ç—Ä–æ–∏–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152067,
				},
				[114250] = {
					["type"] = "BUFF",
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301684] = {
					["type"] = "DEBUFF",
					["source"] = "–¢–µ–º–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞ –í–∏–∫—Å—Ç—Ä–∏—Å–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154548,
				},
				[106830] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[244813] = {
					["type"] = "DEBUFF",
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[216411] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–Ω—É—Å–ø—è—Ç—å—Å–æ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118345] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61056,
				},
				[8936] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ä–∏–∞—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108366] = {
					["type"] = "BUFF",
					["source"] = "Thalassius-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297083] = {
					["source"] = "–õ–∞–ª–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[296060] = {
					["source"] = "–í–∞—Ä–∞–Ω—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145339,
				},
				[280709] = {
					["type"] = "BUFF",
					["source"] = "–¢—É–Ω–¥–µ—Ä–±—ë—Ä–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[55095] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194153] = {
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[176242] = {
					["source"] = "–ê–ª–µ—Ä–¥—ç–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[90328] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151144,
				},
				[217694] = {
					["type"] = "DEBUFF",
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288388] = {
					["type"] = "DEBUFF",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∞—è –¥—É—à–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 148716,
				},
				[105809] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77535] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6789] = {
					["source"] = "–ü–æ–≥—É–ª–¥–∞–Ω–µ–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280204] = {
					["type"] = "BUFF",
					["source"] = "–§–∞–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280205] = {
					["type"] = "BUFF",
					["source"] = "–¢–∞–±—Ö",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298117] = {
					["source"] = "–Ø–π—Ü–æ –ë–µ–∑–∂–∞–ª–æ—Å—Ç–Ω–æ–≥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153501,
				},
				[199786] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[126664] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190319] = {
					["type"] = "BUFF",
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[182387] = {
					["type"] = "DEBUFF",
					["source"] = "Zzeimdall-Confr√©rieduThorium",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45181] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["encounterID"] = 2112,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260685] = {
					["type"] = "DEBUFF",
					["source"] = "–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131318,
				},
				[281744] = {
					["type"] = "BUFF",
					["source"] = "Delio√°-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202602] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268439] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∫–µ–π",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195182] = {
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286351] = {
					["type"] = "DEBUFF",
					["source"] = "–ô–æ–∫–æ—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202347] = {
					["source"] = "–≠—Ä–∏–∞—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196718] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[289423] = {
					["type"] = "DEBUFF",
					["source"] = "–î–∂–æ–Ω–Ω–∏–∑–µ—Ä–æ-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268954] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268955] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268956] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299662] = {
					["type"] = "BUFF",
					["source"] = "Hotbutton-Eredar",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80353] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264352] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299663] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265376] = {
					["source"] = "–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133663,
				},
				[264353] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295570] = {
					["source"] = "–ü–æ—ç–Ω –°–æ–ª–µ–∂–∞–±—Ä–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152278,
				},
				[294035] = {
					["source"] = "–°–æ–±–∏—Ä–∞—Ç–µ–ª—å –ú–æ–∞—Ä—Ä–≥–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153250,
				},
				[298641] = {
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π —à–∞–º–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152412,
				},
				[5246] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102359] = {
					["source"] = "–¢—Ä–∞–≤–µ–Ω–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[80354] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297108] = {
					["source"] = "F√Æret√∏uch-Frostwolf",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5302] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279709] = {
					["type"] = "BUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300691] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113746] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303762] = {
					["source"] = "–õ–µ–¥–∏ –°–∏–ª–∞–∑–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152203,
				},
				[257622] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300693] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276131] = {
					["type"] = "BUFF",
					["source"] = "–°–ø—ç–ª–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[138130] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69791,
				},
				[8921] = {
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[172] = {
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279715] = {
					["type"] = "BUFF",
					["source"] = "–î—Ä–∞–∫–æ–Ω–æ–≤–æ–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274598] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279204] = {
					["type"] = "BUFF",
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270505] = {
					["source"] = "–í—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π-—Å—Ç—Ä–µ–ª–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152244,
				},
				[44544] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272119] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214202] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292653] = {
					["type"] = "BUFF",
					["source"] = "–ò–Ω–µ—Ä—Ü–∏–æ–Ω–Ω–∞—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263854] = {
					["source"] = "–£–º–±—Ä–∞'–¥–∂–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 122004,
				},
				[259161] = {
					["type"] = "BUFF",
					["source"] = "–•–∞—Ä–∫–æ–ª-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118297] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61029,
				},
				[108238] = {
					["source"] = "–ú–∏—Ä–∞–¥–∂–µ–π–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[302004] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –≥–ª—É–±–∏–Ω –°–∏–≤–∞—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 155144,
				},
				[22568] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264760] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–Ω–¥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302237] = {
					["source"] = "–ò–ª—å–Ω—ã–π —Å–ª–∏–∑–µ–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152790,
				},
				[290467] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236645] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205648] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262652] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290468] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ—Å–∫–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17364] = {
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[301727] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[194084] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290469] = {
					["type"] = "BUFF",
					["source"] = "–§–∞–∫–ª–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280746] = {
					["type"] = "BUFF",
					["source"] = "–î–∑–º–∏—Ç—Ä–∏–π",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201846] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294052] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞–ª–µ–∫–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299764] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154304,
				},
				[217200] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[250208] = {
					["source"] = "–ö—Ä–µ–ø–∫–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152383,
				},
				[279793] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏—Ä–∞–¥–∂–µ–π–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298659] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296114] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2908] = {
					["source"] = "–í–∞–Ω–¥—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279029] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ–∫–æ—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278769] = {
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299434] = {
					["source"] = "–†–æ–≥–∞—Ç—ã–π —Ä–∏—Ñ–æ—Ö–æ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152563,
				},
				[113656] = {
					["type"] = "BUFF",
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271538] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288426] = {
					["type"] = "BUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244836] = {
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Å–∞–±–ª–µ–∑—É–±",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154624,
				},
				[124280] = {
					["type"] = "DEBUFF",
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19434] = {
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2948] = {
					["source"] = "Onylapix-LesSentinelles",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[122470] = {
					["type"] = "BUFF",
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[78674] = {
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[287916] = {
					["type"] = "BUFF",
					["source"] = "–•–∞—Ä–∫–æ–ª-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259455] = {
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω—Ç—É—Ä—É—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244837] = {
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Å–∞–±–ª–µ–∑—É–±",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154624,
				},
				[57723] = {
					["type"] = "DEBUFF",
					["source"] = "–§—Ä–æ—Å—Ç—ç—Ä–æ—É-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273714] = {
					["type"] = "BUFF",
					["source"] = "–ê–º–∞–Ω–∏—É—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257620] = {
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295186] = {
					["source"] = "–ê–º–∞–Ω–∏—É—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288371] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–∏–ª–∏—Ç–∞–¥–∏—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278326] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298665] = {
					["type"] = "BUFF",
					["source"] = "–†—ã–ø–ø",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199804] = {
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198013] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271543] = {
					["type"] = "BUFF",
					["source"] = "Oathkeeper-LesClairvoyants",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188290] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279184] = {
					["source"] = "–î–Ω—É—à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[301310] = {
					["source"] = "–ò–ª–∞–π–¥–∂–∏–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[271544] = {
					["type"] = "DEBUFF",
					["source"] = "Oathkeeper-LesClairvoyants",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275863] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119381] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275378] = {
					["type"] = "BUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192106] = {
					["type"] = "BUFF",
					["source"] = "–£–≤–∞—Ä—á–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58875] = {
					["type"] = "BUFF",
					["source"] = "–î—É–º–±–æ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[13877] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[85222] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[32612] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[209785] = {
					["type"] = "BUFF",
					["source"] = "–°–µ–π–æ–ª–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299664] = {
					["type"] = "BUFF",
					["source"] = "–ì–∏–ª–∞–Ω–¥–µ—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300832] = {
					["type"] = "DEBUFF",
					["source"] = "–§–µ–Ω–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[157331] = {
					["source"] = "–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –±—É—Ä–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 77936,
				},
				[296624] = {
					["type"] = "DEBUFF",
					["source"] = "–§–µ–Ω–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277904] = {
					["type"] = "BUFF",
					["source"] = "–®—É–∫—à–∏–Ω–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205180] = {
					["type"] = "BUFF",
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276136] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏—Ü—É—ë",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276154] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290365] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57724] = {
					["type"] = "DEBUFF",
					["source"] = "√írys-Mal'Ganis",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61882] = {
					["source"] = "Zzeimdall-Confr√©rieduThorium",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278052] = {
					["source"] = "–ì–æ–ª–æ–¥–Ω—ã–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151769,
				},
				[303165] = {
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 150541,
				},
				[299768] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151300,
				},
				[12472] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304546] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–æ—Ç–µ—Ä—è–≤—à–∏–π—Å—è –≤–æ–¥–æ—Ä–æ—Å–ª–µ–≤–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152549,
				},
				[774] = {
					["type"] = "BUFF",
					["source"] = "–ì–æ–¥–∑–∏–ª–ª–∞–±—ç–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274283] = {
					["source"] = "–ö–æ—Ä—Ä–∞–¥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274282] = {
					["source"] = "–ö–æ—Ä—Ä–∞–¥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[296276] = {
					["source"] = "–î–∏–∫–∏–π –º–æ—Ä—Å–∫–æ–π –≤–∞—Ä–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153959,
				},
				[301710] = {
					["source"] = "–¢–µ–º–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞ –í–∏–∫—Å—Ç—Ä–∏—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154548,
				},
				[277181] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5740] = {
					["source"] = "–î–µ–º–µ–Ω—Ç–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286393] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196447] = {
					["type"] = "BUFF",
					["source"] = "–î–µ–º–µ–Ω—Ç–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[157736] = {
					["type"] = "DEBUFF",
					["source"] = "–î–µ–º–µ–Ω—Ç–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255909] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20572] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∏–Ω—Ö–∞—Ä—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[65081] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303794] = {
					["source"] = "–õ–µ–¥–∏ –°–∏–ª–∞–∑–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152203,
				},
				[133994] = {
					["source"] = "–°–∏–ª—å–≤–µ—Ä–º–æ—Ä–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[17962] = {
					["source"] = "–ê–ª–∫–æ–ª–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[29722] = {
					["source"] = "–ê–ª–∫–æ–ª–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[96231] = {
					["source"] = "–ì–∞–Ω–≥—Å—Ç–∞–ø–∞–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279913] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∫–æ–ª–æ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261764] = {
					["type"] = "BUFF",
					["source"] = "Noelem-Echsenkessel",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124007] = {
					["source"] = "–°—é—ç–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 63508,
				},
				[289467] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[163505] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288267] = {
					["type"] = "BUFF",
					["source"] = "–ï–ª–ª—é–¥–µ–π",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303895] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ—Ä–æ—Ç–∫–æ–ª–∞–ø–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268998] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ—Å–∫–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115546] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[56641] = {
					["source"] = "–ú—ç–¥–µ—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288882] = {
					["type"] = "BUFF",
					["source"] = "–†–æ–≥–∞—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131493] = {
					["type"] = "BUFF",
					["source"] = "M√¶gnifique-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298197] = {
					["type"] = "BUFF",
					["source"] = "–†–æ–≥–∞—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176458] = {
					["type"] = "BUFF",
					["source"] = "–°–æ—Ä–∞—Ç–Ω–∏–∫-–∫—É–∑–Ω–µ—Ü - –û—Ä–¥–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 88402,
				},
				[225602] = {
					["type"] = "BUFF",
					["source"] = "–¢–∏–∞–º—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[247456] = {
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271559] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[247454] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196742] = {
					["type"] = "BUFF",
					["source"] = "–ù–æ—á–µ–Ω—å–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260455] = {
					["encounterID"] = 2118,
					["source"] = "–ö—Ä–æ–≤–∞–≤—ã–π –∫–ª–µ—â",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 132051,
				},
				[225921] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[258920] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280772] = {
					["source"] = "–†–µ–∏–Ω—Ö–∞—Ä—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[84714] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[204255] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[178740] = {
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280773] = {
					["type"] = "DEBUFF",
					["source"] = "–ú—É—Ç–µ–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274443] = {
					["type"] = "BUFF",
					["source"] = "–ë—É–≥–∏–±–∞–∑–∑",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303438] = {
					["type"] = "DEBUFF",
					["source"] = "–°–µ–≤–∞—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32645] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124503] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297662] = {
					["source"] = "–¢—É—Å–∫–ª–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–ª–∑—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152445,
				},
				[297897] = {
					["type"] = "BUFF",
					["source"] = "–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω–∞—è –±–µ—à–µ–Ω–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 144647,
				},
				[304827] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –≥–ª—É–±–∏–Ω –°–∏–≤–∞—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 155144,
				},
				[45182] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["encounterID"] = 2112,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[282482] = {
					["type"] = "BUFF",
					["source"] = "–î—ç–≤–∏–∫–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1079] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288330] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280776] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16953] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202028] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[186254] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115804] = {
					["type"] = "DEBUFF",
					["source"] = "–£–º–±—Ä–∞'–¥–∂–∏–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 122004,
				},
				[297665] = {
					["source"] = "–ë–æ–ª—å—à–æ–π —Ç—É—Å–∫–ª–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ä–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152426,
				},
				[1822] = {
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300802] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270543] = {
					["source"] = "–í—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π-—á–∞—Ä–æ–≤—è–∑",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152262,
				},
				[85739] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299772] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151309,
				},
				[155722] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198793] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[137639] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3408] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1776] = {
					["source"] = "–ê–≥—Ä–µ—Å—Å—ç—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280780] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196608] = {
					["type"] = "BUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255654] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–π–¥–∂–µ—Ä–º–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[248473] = {
					["type"] = "BUFF",
					["source"] = "–ú—É–º–º–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193358] = {
					["type"] = "BUFF",
					["source"] = "–ì—É–ª—Ä–æ–∫—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197003] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–∑–∑—ç—Ä–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81262] = {
					["type"] = "BUFF",
					["source"] = "–ü–µ—Ä–∏–æ–¥ —Ü–≤–µ—Ç–µ–Ω–∏—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 47649,
				},
				[116189] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303299] = {
					["source"] = "–ê–∑—à'–∞—Ä–∏-–∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145326,
				},
				[265445] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–µ–ø–∫–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152383,
				},
				[296135] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186257] = {
					["type"] = "BUFF",
					["source"] = "–î–µ–∫–ª–∞–Ω—Ö–∞—Ä–ø-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278736] = {
					["type"] = "BUFF",
					["source"] = "Erloesung-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293404] = {
					["type"] = "DEBUFF",
					["source"] = "–ë–µ–ª—Ç–∞–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205448] = {
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285981] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228477] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295625] = {
					["type"] = "DEBUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[175833] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51714] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[305349] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –≥–ª—É–±–∏–Ω –°–∏–≤–∞—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 155144,
				},
				[300095] = {
					["source"] = "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –≤–æ–ª–Ω–æ—Ö–æ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 150371,
				},
				[225919] = {
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[242551] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏–¥–∂–∏–¥–∂–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124506] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[293580] = {
					["type"] = "DEBUFF",
					["source"] = "–í–∞—Ä–µ–Ω –ü–µ—Å–Ω—å –°–∫–æ–≤–æ—Ä–æ–¥—ã",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154509,
				},
				[8122] = {
					["source"] = "–ú–∞–ª–µ–∫–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297584] = {
					["source"] = "–¢—É—Å–∫–ª–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ä–∞–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148454,
				},
				[300082] = {
					["source"] = "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –≤–æ–ª–Ω–æ—Ö–æ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 150371,
				},
				[188021] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265523] = {
					["source"] = "–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133912,
				},
				[3409] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301311] = {
					["source"] = "–¢—É—Ä–±–æ–º–∏—à–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[221885] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[134522] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298700] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44614] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[24394] = {
					["type"] = "DEBUFF",
					["source"] = "–î—É—Ö –∑–≤–µ—Ä—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69947,
				},
				[296142] = {
					["encounterID"] = 2111,
					["source"] = "–ó–∞–±–ª—É–¥—à–∞—è –¥—É—à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148894,
				},
				[278231] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191634] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257418] = {
					["type"] = "BUFF",
					["source"] = "–î–µ–∑–∞–ª–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[134847] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 43929,
				},
				[203849] = {
					["type"] = "BUFF",
					["source"] = "–ú—É–Ω—Å—Ç–æ—Ä–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269310] = {
					["encounterID"] = 2123,
					["source"] = "–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Ç–∏—Ç–∞–Ω–æ–≤ –•–µ–∑—Ä–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134419,
				},
				[303820] = {
					["source"] = "–õ–µ–¥–∏ –°–∏–ª–∞–∑–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152203,
				},
				[3600] = {
					["type"] = "DEBUFF",
					["source"] = "–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 2630,
				},
				[205708] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304358] = {
					["source"] = "–û–≥—Ä–æ–º–Ω—ã–π –ª–µ—Ç–∞—é—â–∏–π —Å–∫–∞—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 150467,
				},
				[259491] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–∏–∞–ª–∏—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[157348] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –±—É—Ä–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 77936,
				},
				[190356] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288981] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256453] = {
					["type"] = "BUFF",
					["source"] = "–û—Ä–µ–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5215] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ—ç–Ω—Ç—Ä–∞—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290517] = {
					["type"] = "BUFF",
					["source"] = "–î—Ä–µ–≤–Ω–∏–π —Å–≥—É—Å—Ç–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 149720,
				},
				[210053] = {
					["type"] = "BUFF",
					["source"] = "–ò–∑—è–Ω—ã—á",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271071] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277724] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277731] = {
					["type"] = "BUFF",
					["source"] = "–ö–∏–∫–º—ç–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295124] = {
					["type"] = "BUFF",
					["source"] = "–ê–¥–∞–ª–∞–∏–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257284] = {
					["type"] = "DEBUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300893] = {
					["type"] = "BUFF",
					["source"] = "–ë–∞–π—Ç–∞—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[200025] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264420] = {
					["type"] = "BUFF",
					["source"] = "–ì—Ä–µ–ª–æ—É–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276126] = {
					["type"] = "BUFF",
					["source"] = "–°–ø—ç–ª–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[138927] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–Ω–¥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304849] = {
					["source"] = "–Ø—Ä–æ—Å—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152164,
				},
				[272609] = {
					["source"] = "–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138281,
				},
				[304829] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –≥–ª—É–±–∏–Ω –°–∏–≤–∞—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 155144,
				},
				[114018] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280286] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–∞–Ω–∏—Ä–µ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276124] = {
					["type"] = "BUFF",
					["source"] = "–°–ø—ç–ª–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31687] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260843] = {
					["type"] = "BUFF",
					["source"] = "–î–∂–∞–¥–µ–Ω –§–ª–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 122704,
				},
				[298710] = {
					["type"] = "BUFF",
					["source"] = "Scraze-Eredar",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265533] = {
					["source"] = "–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131402,
				},
				[112867] = {
					["source"] = "–î–∞—Ä—Ä–∞–ª—å–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[100784] = {
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51460] = {
					["type"] = "BUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288988] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303829] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–º–ø–µ—Ä–∏–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 145324,
				},
				[287379] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[87024] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–∏–ª—á–∏–∫–ø–∞–º–ø-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288989] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303830] = {
					["source"] = "–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–º–ø–µ—Ä–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145324,
				},
				[302295] = {
					["source"] = "–ö—Ä–∞–±-—Å–ø–∏–Ω–æ—Ö—Ä—É—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152461,
				},
				[59752] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5487] = {
					["type"] = "BUFF",
					["source"] = "–¢–≤–æ—è–¥–æ—á—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[69369] = {
					["type"] = "BUFF",
					["source"] = "–ò–∑—è–Ω—ã—á",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295137] = {
					["type"] = "BUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300761] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287062] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–π–∂–æ–Ω–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5143] = {
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[162794] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300762] = {
					["type"] = "BUFF",
					["source"] = "–®–≤–µ–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299227] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154046,
				},
				[210320] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301168] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 145333,
				},
				[270058] = {
					["type"] = "BUFF",
					["source"] = "–ô–æ—Å–∫–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202900] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[213405] = {
					["type"] = "DEBUFF",
					["source"] = "–†–æ–∫—Å—é—à–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[219788] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185245] = {
					["type"] = "DEBUFF",
					["source"] = "–¢—Ä–∏–µ–ª",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1044] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251838] = {
					["type"] = "BUFF",
					["source"] = "–õ–æ—Å—Ç–µ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275689] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23881] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273947] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299742] = {
					["source"] = "–ê–Ω–∫–æ–∞ - –º–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154297,
				},
				[271103] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278249] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[154797] = {
					["type"] = "BUFF",
					["source"] = "–†—É–º—Å–∏–∫-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298466] = {
					["type"] = "BUFF",
					["source"] = "–ó–æ—ç–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302302] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153812,
				},
				[113942] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Ö–∞–º—Å–∏–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207289] = {
					["type"] = "BUFF",
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81141] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ—É—Ç—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[259718] = {
					["encounterID"] = 2112,
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131383,
				},
				[268528] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299745] = {
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∫–æ–∞ - –º–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154297,
				},
				[257161] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153364,
				},
				[288091] = {
					["type"] = "DEBUFF",
					["source"] = "–ú—É—Ç–µ–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270576] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["type"] = "BUFF",
					["source"] = "Tarkerus-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294117] = {
					["source"] = "–ú–∞–ª–µ–∫–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278253] = {
					["type"] = "BUFF",
					["source"] = "–í–∞–Ω–¥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269571] = {
					["type"] = "BUFF",
					["source"] = "–°–∞–ª—å–≤–∞–Ω–µ—Ä-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44425] = {
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278267] = {
					["type"] = "BUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[30451] = {
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299789] = {
					["type"] = "BUFF",
					["source"] = "–î–∞–º–∏–∞–Ω–¥—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275672] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304611] = {
					["type"] = "DEBUFF",
					["source"] = "–§–∞–ª–∫–æ–Ω—ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[136] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278767] = {
					["type"] = "BUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289523] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192226] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 97369,
				},
				[184575] = {
					["source"] = "–°–∞–ª—å–≤–∞–Ω–µ—Ä-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102560] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299750] = {
					["source"] = "–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ö–ª–∏–Ω–∫–æ–≤ –í–æ–ª–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152127,
				},
				[14914] = {
					["source"] = "–í–∞—Å—Å—è–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281854] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[25771] = {
					["type"] = "DEBUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259454] = {
					["type"] = "BUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275699] = {
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270070] = {
					["type"] = "BUFF",
					["source"] = "–ê–±—Ä–∞–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[147833] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257422] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–±–æ–π—Å—è—è—à—É—á—É-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260734] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293705] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151557,
				},
				[556] = {
					["source"] = "Artasha-Eredar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[54149] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195457] = {
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[12042] = {
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω—Ç—É—Ä—É—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198813] = {
					["type"] = "DEBUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304619] = {
					["type"] = "DEBUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281843] = {
					["type"] = "BUFF",
					["source"] = "–ë—ã—Å—Ç—Ä—ã–π–º–∞–≥-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12975] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188499] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259456] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ–º—Ç–∞–≥–æ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281402] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279572] = {
					["type"] = "BUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289277] = {
					["type"] = "BUFF",
					["source"] = "Buneamk-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295613] = {
					["source"] = "–í—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π-—á–∞—Ä–æ–≤—è–∑",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152262,
				},
				[205636] = {
					["source"] = "–ê—É–µ—Ç–∏–≥—Ä–≥–æ–¥—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[269843] = {
					["encounterID"] = 2123,
					["source"] = "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133007,
				},
				[292361] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257410] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274447] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79865] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 155761,
				},
				[297162] = {
					["type"] = "BUFF",
					["source"] = "F√Æret√∏uch-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246152] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256148] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266265] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134284,
				},
				[193316] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289524] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198304] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[212799] = {
					["type"] = "BUFF",
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304645] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Ä–æ—É—Ç—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["type"] = "BUFF",
					["source"] = "–†–∞–ø–æ—Ä—Ç–µ—Ä–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279584] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272126] = {
					["type"] = "BUFF",
					["source"] = "–ß–∞–Ω–≥–∞—á–≥—É–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58180] = {
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289526] = {
					["type"] = "DEBUFF",
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299773] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151309,
				},
				[203850] = {
					["type"] = "BUFF",
					["source"] = "–°–∫–æ–ª—å—Å–∫–∏–π-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196770] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48265] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä–µ–¥—Å—Ç–æ—è—Ç–µ–ª—å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294133] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—É—É-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202188] = {
					["type"] = "BUFF",
					["source"] = "–†–∏—Ö–µ–π—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259732] = {
					["encounterID"] = 2112,
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131383,
				},
				[271105] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123725] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6343] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[113900] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59271,
				},
				[63106] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–∞–Ω—Ç–æ—Ä–æ–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296182] = {
					["source"] = "–û—Ö–æ—Ç—è—â–∏–π—Å—è –º–æ—Ä—Å–∫–æ–π –≤–∞—Ä–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152357,
				},
				[213915] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61684] = {
					["type"] = "BUFF",
					["source"] = "–î—É—Ö –∑–≤–µ—Ä—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69947,
				},
				[245388] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[96243] = {
					["type"] = "BUFF",
					["source"] = "Water Elemental",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 78116,
				},
				[116841] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–π–¥–∂–µ—Ä–º–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299766] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏—Ü–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151300,
				},
				[185311] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298743] = {
					["source"] = "–ö—Ä–æ–ª—å—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196941] = {
					["type"] = "DEBUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257415] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245389] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[26297] = {
					["type"] = "BUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[13750] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113899] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59262,
				},
				[205473] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[35395] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[199844] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299769] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151300,
				},
				[269576] = {
					["type"] = "BUFF",
					["source"] = "–≠—Å–∏–æ–º–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116847] = {
					["type"] = "BUFF",
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[27576] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299770] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151300,
				},
				[285496] = {
					["type"] = "BUFF",
					["source"] = "–ë—É—É–º–∫–∏–Ω—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288841] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278789] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299771] = {
					["source"] = "–ù–µ—Ä–∏ –û—Å—Ç—Ä–æ–µ—Ä—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152108,
				},
				[285978] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49821] = {
					["source"] = "–ó–≤—ë–∑–¥–æ—á–∫–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20271] = {
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48778] = {
					["type"] = "BUFF",
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285979] = {
					["type"] = "BUFF",
					["source"] = "√Åva√¢-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300557] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–¥—Ä–∞–Ω—Ç–∏—Å—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153314,
				},
				[270603] = {
					["source"] = "–õ–µ–¥–∏ –ù–∞—Ä–∂–∏—Å—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152966,
				},
				[271115] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303158] = {
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–º–∏—Ä–º–∏–¥–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152883,
				},
				[293142] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19574] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299774] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151309,
				},
				[265487] = {
					["source"] = "–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133912,
				},
				[290513] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115308] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297728] = {
					["source"] = "–ë–æ–ª—å—à–æ–π —Ç—É—Å–∫–ª–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ä–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152426,
				},
				[277185] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285514] = {
					["type"] = "BUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270606] = {
					["source"] = "–í–æ–ª–Ω–æ–º—É—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152273,
				},
				[299776] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151310,
				},
				[285959] = {
					["type"] = "BUFF",
					["source"] = "–ë–∞–π—Ç–∞—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192225] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285475] = {
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257420] = {
					["type"] = "BUFF",
					["source"] = "–ú–±—Ö–∞–≤–∞–Ω–≥–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288156] = {
					["type"] = "BUFF",
					["source"] = "–§–∞—ç–¥—Ä–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300801] = {
					["type"] = "BUFF",
					["source"] = "–ó–µ–Ω–∑–µ—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[147650] = {
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Å–∞–±–ª–µ–∑—É–±",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154624,
				},
				[300110] = {
					["type"] = "BUFF",
					["source"] = "–Ø—Ä–æ—Å—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152164,
				},
				[269185] = {
					["type"] = "BUFF",
					["source"] = "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133007,
				},
				[115181] = {
					["source"] = "–ü–∞—É–Ω–¥–∂–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278134] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299779] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151310,
				},
				[184362] = {
					["type"] = "BUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297065] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä–µ–¥—Å—Ç–æ—è—Ç–µ–ª—å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299401] = {
					["source"] = "–ó–∞—Ä–∞–∑–∞ –±–µ–∑—É–º–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153327,
				},
				[299780] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151310,
				},
				[179057] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[132169] = {
					["type"] = "DEBUFF",
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210643] = {
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299781] = {
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151310,
				},
				[294692] = {
					["source"] = "–í–∞—Ä–ª–æ–Ω–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278070] = {
					["type"] = "BUFF",
					["source"] = "Xyss-Hyjal",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188592] = {
					["type"] = "BUFF",
					["source"] = "–¢–µ–Ω—Ä–∏—Ñ—Ñ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53385] = {
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[589] = {
					["type"] = "DEBUFF",
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268953] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5211] = {
					["source"] = "–≠—Ä–∏–∞—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299783] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151309,
				},
				[300416] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–¥—Ä–∞–Ω—Ç–∏—Å—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153314,
				},
				[245686] = {
					["type"] = "BUFF",
					["source"] = "√Åva√¢-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193641] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43265] = {
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273685] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–Ω—Ç–∞—à–¥–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193455] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299218] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–∞–∑–∞ –±–µ–∑—É–º–∏—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153327,
				},
				[257424] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194223] = {
					["type"] = "BUFF",
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300809] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196782] = {
					["type"] = "DEBUFF",
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190446] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304392] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–∞–º–µ–Ω–Ω–æ–±—Ä—é—Ö–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152546,
				},
				[193456] = {
					["type"] = "BUFF",
					["source"] = "–°–∞–Ω–∞—Ä—É—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302912] = {
					["source"] = "–ó–∞–Ω—à'–∏—Ä-–ª–æ–≤—á–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153741,
				},
				[49020] = {
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[45438] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["encounterID"] = 2112,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272457] = {
					["encounterID"] = 2112,
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131383,
				},
				[36554] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195181] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ—É—Ç—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281413] = {
					["type"] = "BUFF",
					["source"] = "–•—Å–∞–Ω–∫–æ—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[97463] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297230] = {
					["source"] = "–ì–ª—É–±–∏–Ω–Ω—ã–π —Å–∫–∞—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145967,
				},
				[26573] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[34026] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2565] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299278] = {
					["source"] = "–ó–∞—Ä–∞–∑–∞ –±–µ–∑—É–º–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153327,
				},
				[205228] = {
					["source"] = "–°–µ–π–æ–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299169] = {
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π –∫–ª–µ—à–Ω–µ–±–æ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152413,
				},
				[300814] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2818] = {
					["type"] = "DEBUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32615] = {
					["type"] = "BUFF",
					["source"] = "–ö–µ–ª—å–ø–∏–Ω-—Ä–∞–∑–≤–µ–¥—á–∏—Ü–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151300,
				},
				[355] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51723] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260242] = {
					["type"] = "BUFF",
					["source"] = "–ê—à–∫–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274080] = {
					["source"] = "–°—Ç—Ä—É—è—â–∏–π—Å—è –≤–æ–ª–Ω–æ—Ö–æ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153998,
				},
				[164545] = {
					["type"] = "BUFF",
					["source"] = "Tarkerus-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196840] = {
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108271] = {
					["type"] = "BUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301891] = {
					["source"] = "–í–æ–¥—è–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 156393,
				},
				[285976] = {
					["type"] = "BUFF",
					["source"] = "K√©r√¥-Mal'Ganis",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265568] = {
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133685,
				},
				[299584] = {
					["type"] = "BUFF",
					["source"] = "–†–æ–≥–∞—Ç—ã–π —Ä–∏—Ñ–æ—Ö–æ–¥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152563,
				},
				[162243] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288024] = {
					["type"] = "BUFF",
					["source"] = "K√©r√¥-Mal'Ganis",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2645] = {
					["type"] = "BUFF",
					["source"] = "–¢–∞–±—Ö",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2649] = {
					["source"] = "–£–º–±—Ä–∞'–¥–∂–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 122004,
				},
				[302369] = {
					["type"] = "BUFF",
					["source"] = "–•–∞–Ω–Ω–∞—Ö–∞–Ω—Ç–∞–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1329] = {
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[269406] = {
					["encounterID"] = 2123,
					["source"] = "–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Ç–∏—Ç–∞–Ω–æ–≤ –•–µ–∑—Ä–µ–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134419,
				},
				[303378] = {
					["source"] = "–ê–¥–∞–ª–∞–∏–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118000] = {
					["type"] = "DEBUFF",
					["source"] = "–ú—É—Ç–µ–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164547] = {
					["type"] = "BUFF",
					["source"] = "Tarkerus-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228260] = {
					["source"] = "–û–º–µ–∂–µ—á–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268899] = {
					["type"] = "BUFF",
					["source"] = "–•—ç—Ç—Ñ–∏–ª–¥–≤–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3716] = {
					["source"] = "–ê–∑—Ä–∞—Ç—Ä–∞–∫—Å–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 58960,
				},
				[11426] = {
					["type"] = "BUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[223143] = {
					["type"] = "BUFF",
					["source"] = "–ö–∏–∫–º—ç–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303380] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231843] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267558] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–π–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131894] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298826] = {
					["type"] = "BUFF",
					["source"] = "–ö–∏–ª'–∫–∞—Ä—Ä–æ–∫—Å–∫–∏–π —à–∞–º–∞–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152412,
				},
				[244808] = {
					["source"] = "–ü–µ—Å—á–∞–Ω—ã–π –∫—Ä–∞–±",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145337,
				},
				[212653] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[185123] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[6795] = {
					["source"] = "–î–∞–º–∏–∞–Ω–¥—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[120679] = {
					["source"] = "–ñ–∏—Ä–æ–ø–∞–Ω–¥–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267560] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–π–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274213] = {
					["encounterID"] = 2112,
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131383,
				},
				[268910] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285472] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255937] = {
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[212423] = {
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 99541,
				},
				[198837] = {
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 99541,
				},
				[278124] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195072] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278637] = {
					["source"] = "–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131402,
				},
				[100] = {
					["source"] = "–í—É–∫–∞–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202164] = {
					["type"] = "BUFF",
					["source"] = "–§–µ–Ω–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[253595] = {
					["type"] = "BUFF",
					["source"] = "–ü—É–∑–∏–∫–æ–≤–∞—Ç—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278310] = {
					["type"] = "BUFF",
					["source"] = "F√Æret√∏uch-Frostwolf",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3110] = {
					["source"] = "–î–∞–≥—Ç–∞—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 416,
				},
				[72968] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205179] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–∞–Ω—Ç–æ—Ä–æ–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288546] = {
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148797,
				},
				[199042] = {
					["type"] = "DEBUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293664] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183998] = {
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266030] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∫–æ–ª–æ–∫",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2825] = {
					["type"] = "BUFF",
					["source"] = "–°—Ç–∏—Ö–∏–π–Ω–æ–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288777] = {
					["type"] = "BUFF",
					["source"] = "–ì–∞–º–∏–ª–∏—è",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109132] = {
					["source"] = "–ö–µ–π–¥–∂–µ—Ä–º–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288548] = {
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148797,
				},
				[186258] = {
					["type"] = "BUFF",
					["source"] = "–î–µ–∫–ª–∞–Ω—Ö–∞—Ä–ø-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273285] = {
					["encounterID"] = 2112,
					["source"] = "–í–∑—Ä—ã–≤—á–∞—Ç—ã–π —Å—Ç—Ä—É—á–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139127,
				},
				[298272] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Ä–æ—Ä–≥",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153662,
				},
				[157644] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª—å–≤–µ—Ä–∏–æ–Ω–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303390] = {
					["type"] = "BUFF",
					["source"] = "–°–µ–≤–∞—Ç–∞—Ä",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57994] = {
					["source"] = "–ô–æ–∫–æ—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290085] = {
					["type"] = "DEBUFF",
					["encounterID"] = 2111,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197561] = {
					["type"] = "BUFF",
					["source"] = "–ë–æ–±–ª–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49998] = {
					["source"] = "–≠–ª–∏–Ω–±—å—ë—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77575] = {
					["source"] = "–ê—ç–∫—Ç–∞—Ä–Ω–∏–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51124] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–∂—É—Å–æ—Å—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304927] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–∏—á–µ—Å–∫–æ–µ —Å–ª–∏—è–Ω–∏–µ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 155139,
				},
				[57755] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[164812] = {
					["type"] = "DEBUFF",
					["source"] = "–ö—Ä–∏–≥–≤—É–ª—å—Ñ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1449] = {
					["source"] = "–≠–æ–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278317] = {
					["type"] = "BUFF",
					["source"] = "–ê–º–∞–Ω–∏—É—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297252] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299811] = {
					["source"] = "–†–æ–≥–∞—Ç—ã–π —Ä–∏—Ñ–æ—Ö–æ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152563,
				},
				[2580] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1459] = {
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265377] = {
					["source"] = "–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133663,
				},
				[293671] = {
					["type"] = "BUFF",
					["source"] = "–°–∞–Ω–∞—Ä—É—Å",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188443] = {
					["source"] = "–ú–∏–Ω–∏–∫–æ—Ç–æ–∏–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[197277] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–æ–º–µ—Ä–∞–Ω–µ—Ü",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294027] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281240] = {
					["type"] = "BUFF",
					["source"] = "–ü–µ—Ä–ø–µ—à–∞-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202425] = {
					["type"] = "BUFF",
					["source"] = "–ë—ã–∫—É—Ö–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304931] = {
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154285,
				},
				[63560] = {
					["source"] = "–•–æ–Ω—Ç–≤-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[287639] = {
					["type"] = "BUFF",
					["source"] = "Oathkeeper-LesClairvoyants",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185763] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31884] = {
					["type"] = "BUFF",
					["source"] = "Shaggie-Blackhand",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299757] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154297,
				},
				[265016] = {
					["source"] = "–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131436,
				},
				[232698] = {
					["type"] = "BUFF",
					["source"] = "–ë–∏—à–∏",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304933] = {
					["source"] = "–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154285,
				},
				[193315] = {
					["source"] = "–ö–∞—É–∫–µ–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[228354] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23920] = {
					["type"] = "BUFF",
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299790] = {
					["type"] = "BUFF",
					["source"] = "–§–∞–Ω–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120436] = {
					["source"] = "–ê–ª–¥—Ä–∞–Ω—Ç–∏—Å—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153314,
				},
				[41425] = {
					["type"] = "DEBUFF",
					["source"] = "Theducky-Bloodfeather",
					["encounterID"] = 2112,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[52174] = {
					["encounterID"] = 2123,
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198589] = {
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[301739] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265019] = {
					["source"] = "–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131436,
				},
				[93402] = {
					["source"] = "–ì—É—Ä–¥–∂–∏–±–µ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115191] = {
					["type"] = "BUFF",
					["source"] = "Happyheo-Bloodfeather",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272592] = {
					["source"] = "–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138281,
				},
				[268756] = {
					["type"] = "DEBUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278989] = {
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–º–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290608] = {
					["type"] = "BUFF",
					["source"] = "–ì–∏—Ä—É–≤–∏–≥–∞–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[69179] = {
					["source"] = "–ó—ë–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[124275] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–µ–π–¥–∂–µ—Ä–º–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268854] = {
					["type"] = "BUFF",
					["source"] = "Brokenaf-TwistingNether",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
			},
			["aura_height"] = 18,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["nameplateShowSelf"] = "0",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.15",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateGlobalScale"] = "1.0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1.0",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateSelfAlpha"] = "0.75",
				["nameplateOtherTopInset"] = "0.085",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["NamePlateVerticalScale"] = "1",
			},
			["patch_version"] = 6,
			["number_region_first_run"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["aura_timer"] = false,
			["health_statusbar_texture"] = "PlaterTexture",
			["dps"] = {
				["colors"] = {
					["noaggro"] = {
						0.113725490196078, -- [1]
						0.117647058823529, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.501960784313726, -- [1]
				0.501960784313726, -- [2]
				0.501960784313726, -- [3]
			},
			["indicator_enemyclass"] = true,
		},
	},
}
